---
name: "Frontend Lint & Compile check"
on:
  push:
    branches:
      - master
    paths:
      - "frontend/**"
  pull_request:
    paths:
      - "frontend/**"
jobs:
  lint-and-compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        working-directory: frontend
        run: bun install --frozen-lockfile
      - name: Get Biome version
        working-directory: frontend
        id: biome-version
        run: echo "version=$(jq -r '.devDependencies["@biomejs/biome"]' package.json)" >> $GITHUB_OUTPUT

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: ${{ steps.biome-version.outputs.version }}

      - name: Run Biome
        working-directory: frontend
        run: bun run lint:check
      - name: Run typecheck
        working-directory: frontend
        run: bun run type:check
      - name: Run build frontend
        working-directory: frontend
        run: |
          REACT_APP_CONSOLE_GIT_SHA=$(echo $GITHUB_SHA | cut -c 1-6)
          REACT_APP_CONSOLE_GIT_REF=$GITHUB_REF_NAME
          REACT_APP_BUILD_TIMESTAMP=$(date +%s)
          REACT_APP_DEV_HINT=true
          bun run build
  integration-test:
    needs: "lint-and-compile"
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        working-directory: frontend
        run: bun install --frozen-lockfile
      - name: Run integration tests
        working-directory: frontend
        run: bun run test
  e2e-test:
    needs: "lint-and-compile"
    timeout-minutes: 15
    runs-on: ubuntu-latest-8
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: oven-sh/setup-bun@v2
      - name: Docker compose up
        working-directory: frontend
        run: /usr/bin/docker compose --file tests/config/docker-compose.yaml up --detach
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache-dependency-path: backend/go.sum
      - name: Install frontend dependencies
        working-directory: frontend
        run: bun install --frozen-lockfile
      - name: Install Playwright browsers
        working-directory: frontend
        run: bun run install:chromium
      - name: Install Go dependencies
        working-directory: backend/cmd/api
        run: go get .
      - name: Build Go server
        working-directory: backend/cmd/api
        run: go build -v ./...
      - name: Log networks
        if: runner.debug == '1'
        continue-on-error: true
        run: docker network ls
      - name: Network inspect
        if: runner.debug == '1'
        continue-on-error: true
        run: docker network inspect redpanda-e2e_redpanda_network
      - name: Log redpanda
        if: runner.debug == '1'
        continue-on-error: true
        run: docker logs redpanda
      - name: Log owlshop
        if: runner.debug == '1'
        continue-on-error: true
        run: docker logs owlshop
      - name: Log connect
        if: runner.debug == '1'
        continue-on-error: true
        run: docker logs connect
      - name: Run Playwright tests
        working-directory: frontend
        run: bun run e2e-test
      - name: Upload Playwright report artifact
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 2

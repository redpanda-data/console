version: '3.7'
name: redpanda-e2e
networks:
  redpanda_network:
    driver: bridge
volumes:
  redpanda: null
services:
  redpanda:
    image: redpandadata/redpanda:v24.2.8
    container_name: redpanda
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    volumes:
      - redpanda:/var/lib/redpanda/data
      - ./conf/.bootstrap.yaml:/etc/redpanda/.bootstrap.yaml
    networks:
      - redpanda_network
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
    environment:
      RP_BOOTSTRAP_USER: "e2euser:very-secret"

  owlshop:
    container_name: owlshop
    image: quay.io/cloudhut/owl-shop:master
    networks:
      - redpanda_network
    platform: 'linux/amd64'
    entrypoint: /bin/sh
    command: -c "sleep 5; echo \"$$OWLSHOP_CONFIG_FILE\" > /tmp/config.yml; /app/owlshop"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      OWLSHOP_CONFIG_FILE: |
        shop:
          requestRate: 1
          interval: 0.1s
          topicReplicationFactor: 1
          topicPartitionCount: 1
        kafka:
          brokers: "redpanda:9092"
          sasl:
            enabled: true
            mechanism: SCRAM-SHA-256
            username: e2euser
            password: very-secret
        schemaRegistry:
          address: "http://redpanda:8081"
    restart: unless-stopped
    depends_on:
      - redpanda

  connect:
    image: docker.cloudsmith.io/redpanda/connectors-unsupported/connectors:v1.0.0-bba8622
    container_name: connect
    networks:
      - redpanda_network
    depends_on:
      - redpanda
    ports:
      - "18083:8083"
    environment:
      CONNECT_CONFIGURATION: |
        key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
        value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
        group.id=connectors-cluster
        offset.storage.topic=_internal_connectors_offsets
        config.storage.topic=_internal_connectors_configs
        status.storage.topic=_internal_connectors_status
        config.storage.replication.factor=1
        offset.storage.replication.factor=1
        status.storage.replication.factor=1
        offset.flush.interval.ms=1000
        producer.linger.ms=50
        producer.batch.size=131072
        security.protocol=SASL_PLAINTEXT
        sasl.mechanism=SCRAM-SHA-256
        sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
          username="e2euser" \
          password="very-secret";
      CONNECT_BOOTSTRAP_SERVERS: redpanda:9092
      CONNECT_GC_LOG_ENABLED: "false"
      CONNECT_HEAP_OPTS: -Xms512M -Xmx512M
      CONNECT_LOG_LEVEL: info
      CONNECT_TOPIC_LOG_ENABLED: "true"

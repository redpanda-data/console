// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/dataplane/v1/transform.proto (package redpanda.api.dataplane.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_redpanda_api_auth_v1_authorization } from "../../auth/v1/authorization_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/dataplane/v1/transform.proto.
 */
export const file_redpanda_api_dataplane_v1_transform: GenFile = /*@__PURE__*/
  fileDesc("CilyZWRwYW5kYS9hcGkvZGF0YXBsYW5lL3YxL3RyYW5zZm9ybS5wcm90bxIZcmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MSLRBQoRVHJhbnNmb3JtTWV0YWRhdGESKwoEbmFtZRgBIAEoCUIdukgachgQARiAATIRXltcUHtDY31cUHtDZn1dKyQSGAoQaW5wdXRfdG9waWNfbmFtZRgCIAEoCRIaChJvdXRwdXRfdG9waWNfbmFtZXMYAyADKAkSRQoIc3RhdHVzZXMYBCADKAsyMy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLlBhcnRpdGlvblRyYW5zZm9ybVN0YXR1cxKxAQoVZW52aXJvbm1lbnRfdmFyaWFibGVzGAUgAygLMkAucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5UcmFuc2Zvcm1NZXRhZGF0YS5FbnZpcm9ubWVudFZhcmlhYmxlQlCSQU0yS1RoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgeW91IHdhbnQgdG8gYXBwbHkgdG8geW91ciB0cmFuc2Zvcm0ncyBlbnZpcm9ubWVudBrdAgoTRW52aXJvbm1lbnRWYXJpYWJsZRLvAQoDa2V5GAEgASgJQuEBkkE0MiVUaGUga2V5IG9mIHlvdXIgZW52aXJvbm1lbnQgdmFyaWFibGUuSgsiTE9HX0xFVkVMIuBBArpIowG6AZUBCi90cmFuc2Zvcm1zX2Vudl9rZXlfZG9lc19ub3RfdXNlX3JlZHBhbmRhX3ByZWZpeBJDRW52aXJvbm1lbnQgdmFyaWFibGUga2V5cyB0aGF0IHN0YXJ0IHdpdGggJ1JFRFBBTkRBXycgYXJlIHJlc2VydmVkLhodIXRoaXMuc3RhcnRzV2l0aCgnUkVEUEFOREFfJynIAQFyBRABGIABElQKBXZhbHVlGAIgASgJQkWSQTIyJ1RoZSB2YWx1ZSBvZiB5b3VyIGVudmlyb25tZW50IHZhcmlhYmxlLkoHIkRFQlVHIuBBArpICsgBAXIFEAEYgBAi1AIKGFBhcnRpdGlvblRyYW5zZm9ybVN0YXR1cxIRCglicm9rZXJfaWQYASABKAUSFAoMcGFydGl0aW9uX2lkGAIgASgFElMKBnN0YXR1cxgDIAEoDjJDLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuUGFydGl0aW9uVHJhbnNmb3JtU3RhdHVzLlBhcnRpdGlvblN0YXR1cxILCgNsYWcYBCABKAUirAEKD1BhcnRpdGlvblN0YXR1cxIgChxQQVJUSVRJT05fU1RBVFVTX1VOU1BFQ0lGSUVEEAASHAoYUEFSVElUSU9OX1NUQVRVU19SVU5OSU5HEAESHQoZUEFSVElUSU9OX1NUQVRVU19JTkFDVElWRRACEhwKGFBBUlRJVElPTl9TVEFUVVNfRVJST1JFRBADEhwKGFBBUlRJVElPTl9TVEFUVVNfVU5LTk9XThAEItgEChZEZXBsb3lUcmFuc2Zvcm1SZXF1ZXN0EnEKBG5hbWUYASABKAlCY5JBPDIWTmFtZSBvZiB0aGUgdHJhbnNmb3JtLkoiInJlZGFjdC1wYXltZW50LWRldGFpbHMtaW4tb3JkZXJzIuBBArpIHsgBAXIZEAEYgAEyEl5bYS16QS1aMC05Ll9cLV0qJBJ3ChBpbnB1dF90b3BpY19uYW1lGAIgASgJQl2SQTYyKlRoZSBpbnB1dCB0b3BpYyB0byBhcHBseSB0aGUgdHJhbnNmb3JtIHRvLkoIIm9yZGVycyLgQQK6SB7IAQFyGRABGPkBMhJeW2EtekEtWjAtOS5fXC1dKiQSkgEKEm91dHB1dF90b3BpY19uYW1lcxgDIAMoCUJ2kkFEMi9PdXRwdXQgdG9waWMgdG8gd3JpdGUgdGhlIHRyYW5zZm9ybSByZXN1bHRzIHRvLkoRIm9yZGVycy1yZWRhY3RlZCLgQQK6SCnIAQGSASMIARABGAEiG3IZEAEY+QEyEl5bYS16QS1aMC05Ll9cLV0qJBK8AQoVZW52aXJvbm1lbnRfdmFyaWFibGVzGAQgAygLMkAucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5UcmFuc2Zvcm1NZXRhZGF0YS5FbnZpcm9ubWVudFZhcmlhYmxlQluSQU0yS1RoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgeW91IHdhbnQgdG8gYXBwbHkgdG8geW91ciB0cmFuc2Zvcm0ncyBlbnZpcm9ubWVudLpICJIBBQgAEIABItYCChVMaXN0VHJhbnNmb3Jtc1JlcXVlc3QSRwoGZmlsdGVyGAEgASgLMjcucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5MaXN0VHJhbnNmb3Jtc1JlcXVlc3QuRmlsdGVyEhIKCnBhZ2VfdG9rZW4YAiABKAkSnwEKCXBhZ2Vfc2l6ZRgDIAEoBUKLAZJBdTJhTGltaXQgdGhlIHBhZ2luYXRlZCByZXNwb25zZSB0byBhIG51bWJlciBvZiBpdGVtcy4gRGVmYXVsdHMgdG8gMTAwLiBVc2UgLTEgdG8gZGlzYWJsZSBwYWdpbmF0aW9uLlkAAAAAAECPQGkAAAAAAADwv7pIEBoOGOgHKP///////////wEaPgoGRmlsdGVyEjQKDW5hbWVfY29udGFpbnMYASABKAlCHbpIGnIYEAEYgAEyEV5bXFB7Q2N9XFB7Q2Z9XSskInMKFkxpc3RUcmFuc2Zvcm1zUmVzcG9uc2USFwoPbmV4dF9wYWdlX3Rva2VuGAEgASgJEkAKCnRyYW5zZm9ybXMYAiADKAsyLC5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLlRyYW5zZm9ybU1ldGFkYXRhIkgKE0dldFRyYW5zZm9ybVJlcXVlc3QSMQoEbmFtZRgBIAEoCUIj4EECukgdyAEBchgQARiAATIRXltcUHtDY31cUHtDZn1dKyQiVwoUR2V0VHJhbnNmb3JtUmVzcG9uc2USPwoJdHJhbnNmb3JtGAEgASgLMiwucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5UcmFuc2Zvcm1NZXRhZGF0YSJMChZEZWxldGVUcmFuc2Zvcm1SZXF1ZXN0EjIKBG5hbWUYASABKAlCJOBBArpIHsgBAXIZEAEYgAEyEl5bYS16QS1aMC05Ll9cLV0qJCIZChdEZWxldGVUcmFuc2Zvcm1SZXNwb25zZTKLCAoQVHJhbnNmb3JtU2VydmljZRK+AgoOTGlzdFRyYW5zZm9ybXMSMC5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkxpc3RUcmFuc2Zvcm1zUmVxdWVzdBoxLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuTGlzdFRyYW5zZm9ybXNSZXNwb25zZSLGAZJBpAESD0xpc3QgdHJhbnNmb3JtcxpNUmV0cmlldmUgYSBsaXN0IG9mIFdhc20gdHJhbnNmb3Jtcy4gT3B0aW9uYWw6IGZpbHRlciBiYXNlZCBvbiB0cmFuc2Zvcm0gbmFtZS5KQgoDMjAwEjsKAk9LEjUKMxoxLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuTGlzdFRyYW5zZm9ybXNSZXNwb25zZYqmHQQIARADgtPkkwIQEg4vdjEvdHJhbnNmb3JtcxK4AgoMR2V0VHJhbnNmb3JtEi4ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5HZXRUcmFuc2Zvcm1SZXF1ZXN0Gi8ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5HZXRUcmFuc2Zvcm1SZXNwb25zZSLGAZJBnQESDUdldCB0cmFuc2Zvcm0aHkdldCBhIHNwZWNpZmljIFdhc20gdHJhbnNmb3JtLkpACgMyMDASOQoCT0sSMwoxGi8ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5HZXRUcmFuc2Zvcm1SZXNwb25zZUoqCgM0MDQSIwoJTm90IEZvdW5kEhYKFBoSLmdvb2dsZS5ycGMuU3RhdHVziqYdBAgBEAOC0+STAhcSFS92MS90cmFuc2Zvcm1zL3tuYW1lfRK/AgoPRGVsZXRlVHJhbnNmb3JtEjEucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5EZWxldGVUcmFuc2Zvcm1SZXF1ZXN0GjIucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5EZWxldGVUcmFuc2Zvcm1SZXNwb25zZSLEAZJBmwESEERlbGV0ZSB0cmFuc2Zvcm0aMERlbGV0ZSBhIFdhc20gdHJhbnNmb3JtIHdpdGggdGhlIHJlcXVlc3RlZCBuYW1lLkopCgMyMDQSIgoeVHJhbnNmb3JtIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5EgBKKgoDNDA0EiMKCU5vdCBGb3VuZBIWChQaEi5nb29nbGUucnBjLlN0YXR1c4qmHQQIAhADgtPkkwIXKhUvdjEvdHJhbnNmb3Jtcy97bmFtZX0aOZJBNgoPV2FzbSBUcmFuc2Zvcm1zEiNNYW5hZ2UgV2FzbSB0cmFuc2Zvcm1zIGluIFJlZHBhbmRhLkKTAgodY29tLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFCDlRyYW5zZm9ybVByb3RvUAFaW2dpdGh1Yi5jb20vcmVkcGFuZGEtZGF0YS9jb25zb2xlL2JhY2tlbmQvcGtnL3Byb3RvZ2VuL3JlZHBhbmRhL2FwaS9kYXRhcGxhbmUvdjE7ZGF0YXBsYW5ldjGiAgNSQUSqAhlSZWRwYW5kYS5BcGkuRGF0YXBsYW5lLlYxygIZUmVkcGFuZGFcQXBpXERhdGFwbGFuZVxWMeICJVJlZHBhbmRhXEFwaVxEYXRhcGxhbmVcVjFcR1BCTWV0YWRhdGHqAhxSZWRwYW5kYTo6QXBpOjpEYXRhcGxhbmU6OlYxYgZwcm90bzM", [file_buf_validate_validate, file_google_api_annotations, file_google_api_field_behavior, file_protoc_gen_openapiv2_options_annotations, file_redpanda_api_auth_v1_authorization]);

/**
 * @generated from message redpanda.api.dataplane.v1.TransformMetadata
 */
export type TransformMetadata = Message<"redpanda.api.dataplane.v1.TransformMetadata"> & {
  /**
   * Name of transform.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Input topic to apply the transform to.
   *
   * @generated from field: string input_topic_name = 2;
   */
  inputTopicName: string;

  /**
   * Output topics to write the transform results to.
   *
   * @generated from field: repeated string output_topic_names = 3;
   */
  outputTopicNames: string[];

  /**
   * @generated from field: repeated redpanda.api.dataplane.v1.PartitionTransformStatus statuses = 4;
   */
  statuses: PartitionTransformStatus[];

  /**
   * @generated from field: repeated redpanda.api.dataplane.v1.TransformMetadata.EnvironmentVariable environment_variables = 5;
   */
  environmentVariables: TransformMetadata_EnvironmentVariable[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.TransformMetadata.
 * Use `create(TransformMetadataSchema)` to create a new message.
 */
export const TransformMetadataSchema: GenMessage<TransformMetadata> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 0);

/**
 * @generated from message redpanda.api.dataplane.v1.TransformMetadata.EnvironmentVariable
 */
export type TransformMetadata_EnvironmentVariable = Message<"redpanda.api.dataplane.v1.TransformMetadata.EnvironmentVariable"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.TransformMetadata.EnvironmentVariable.
 * Use `create(TransformMetadata_EnvironmentVariableSchema)` to create a new message.
 */
export const TransformMetadata_EnvironmentVariableSchema: GenMessage<TransformMetadata_EnvironmentVariable> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1.PartitionTransformStatus
 */
export type PartitionTransformStatus = Message<"redpanda.api.dataplane.v1.PartitionTransformStatus"> & {
  /**
   * @generated from field: int32 broker_id = 1;
   */
  brokerId: number;

  /**
   * @generated from field: int32 partition_id = 2;
   */
  partitionId: number;

  /**
   * @generated from field: redpanda.api.dataplane.v1.PartitionTransformStatus.PartitionStatus status = 3;
   */
  status: PartitionTransformStatus_PartitionStatus;

  /**
   * @generated from field: int32 lag = 4;
   */
  lag: number;
};

/**
 * Describes the message redpanda.api.dataplane.v1.PartitionTransformStatus.
 * Use `create(PartitionTransformStatusSchema)` to create a new message.
 */
export const PartitionTransformStatusSchema: GenMessage<PartitionTransformStatus> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 1);

/**
 * @generated from enum redpanda.api.dataplane.v1.PartitionTransformStatus.PartitionStatus
 */
export enum PartitionTransformStatus_PartitionStatus {
  /**
   * @generated from enum value: PARTITION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PARTITION_STATUS_RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * @generated from enum value: PARTITION_STATUS_INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: PARTITION_STATUS_ERRORED = 3;
   */
  ERRORED = 3,

  /**
   * @generated from enum value: PARTITION_STATUS_UNKNOWN = 4;
   */
  UNKNOWN = 4,
}

/**
 * Describes the enum redpanda.api.dataplane.v1.PartitionTransformStatus.PartitionStatus.
 */
export const PartitionTransformStatus_PartitionStatusSchema: GenEnum<PartitionTransformStatus_PartitionStatus> = /*@__PURE__*/
  enumDesc(file_redpanda_api_dataplane_v1_transform, 1, 0);

/**
 * Metadata required to deploy a new Wasm
 * transform in a Redpanda cluster.
 *
 * @generated from message redpanda.api.dataplane.v1.DeployTransformRequest
 */
export type DeployTransformRequest = Message<"redpanda.api.dataplane.v1.DeployTransformRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string input_topic_name = 2;
   */
  inputTopicName: string;

  /**
   * @generated from field: repeated string output_topic_names = 3;
   */
  outputTopicNames: string[];

  /**
   * @generated from field: repeated redpanda.api.dataplane.v1.TransformMetadata.EnvironmentVariable environment_variables = 4;
   */
  environmentVariables: TransformMetadata_EnvironmentVariable[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.DeployTransformRequest.
 * Use `create(DeployTransformRequestSchema)` to create a new message.
 */
export const DeployTransformRequestSchema: GenMessage<DeployTransformRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 2);

/**
 * @generated from message redpanda.api.dataplane.v1.ListTransformsRequest
 */
export type ListTransformsRequest = Message<"redpanda.api.dataplane.v1.ListTransformsRequest"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1.ListTransformsRequest.Filter filter = 1;
   */
  filter?: ListTransformsRequest_Filter;

  /**
   * Value of the next_page_token field returned by the previous response.
   * If not provided, the system assumes the first page is requested.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListTransformsRequest.
 * Use `create(ListTransformsRequestSchema)` to create a new message.
 */
export const ListTransformsRequestSchema: GenMessage<ListTransformsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 3);

/**
 * @generated from message redpanda.api.dataplane.v1.ListTransformsRequest.Filter
 */
export type ListTransformsRequest_Filter = Message<"redpanda.api.dataplane.v1.ListTransformsRequest.Filter"> & {
  /**
   * Substring match on transform name. Case-sensitive.
   *
   * @generated from field: string name_contains = 1;
   */
  nameContains: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListTransformsRequest.Filter.
 * Use `create(ListTransformsRequest_FilterSchema)` to create a new message.
 */
export const ListTransformsRequest_FilterSchema: GenMessage<ListTransformsRequest_Filter> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 3, 0);

/**
 * @generated from message redpanda.api.dataplane.v1.ListTransformsResponse
 */
export type ListTransformsResponse = Message<"redpanda.api.dataplane.v1.ListTransformsResponse"> & {
  /**
   * Token to retrieve the next page.
   *
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken: string;

  /**
   * @generated from field: repeated redpanda.api.dataplane.v1.TransformMetadata transforms = 2;
   */
  transforms: TransformMetadata[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListTransformsResponse.
 * Use `create(ListTransformsResponseSchema)` to create a new message.
 */
export const ListTransformsResponseSchema: GenMessage<ListTransformsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 4);

/**
 * @generated from message redpanda.api.dataplane.v1.GetTransformRequest
 */
export type GetTransformRequest = Message<"redpanda.api.dataplane.v1.GetTransformRequest"> & {
  /**
   * Name of transform.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.GetTransformRequest.
 * Use `create(GetTransformRequestSchema)` to create a new message.
 */
export const GetTransformRequestSchema: GenMessage<GetTransformRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 5);

/**
 * @generated from message redpanda.api.dataplane.v1.GetTransformResponse
 */
export type GetTransformResponse = Message<"redpanda.api.dataplane.v1.GetTransformResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1.TransformMetadata transform = 1;
   */
  transform?: TransformMetadata;
};

/**
 * Describes the message redpanda.api.dataplane.v1.GetTransformResponse.
 * Use `create(GetTransformResponseSchema)` to create a new message.
 */
export const GetTransformResponseSchema: GenMessage<GetTransformResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 6);

/**
 * @generated from message redpanda.api.dataplane.v1.DeleteTransformRequest
 */
export type DeleteTransformRequest = Message<"redpanda.api.dataplane.v1.DeleteTransformRequest"> & {
  /**
   * Name of transform.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.DeleteTransformRequest.
 * Use `create(DeleteTransformRequestSchema)` to create a new message.
 */
export const DeleteTransformRequestSchema: GenMessage<DeleteTransformRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 7);

/**
 * @generated from message redpanda.api.dataplane.v1.DeleteTransformResponse
 */
export type DeleteTransformResponse = Message<"redpanda.api.dataplane.v1.DeleteTransformResponse"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1.DeleteTransformResponse.
 * Use `create(DeleteTransformResponseSchema)` to create a new message.
 */
export const DeleteTransformResponseSchema: GenMessage<DeleteTransformResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_transform, 8);

/**
 * @generated from service redpanda.api.dataplane.v1.TransformService
 */
export const TransformService: GenService<{
  /**
   * @generated from rpc redpanda.api.dataplane.v1.TransformService.ListTransforms
   */
  listTransforms: {
    methodKind: "unary";
    input: typeof ListTransformsRequestSchema;
    output: typeof ListTransformsResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1.TransformService.GetTransform
   */
  getTransform: {
    methodKind: "unary";
    input: typeof GetTransformRequestSchema;
    output: typeof GetTransformResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1.TransformService.DeleteTransform
   */
  deleteTransform: {
    methodKind: "unary";
    input: typeof DeleteTransformRequestSchema;
    output: typeof DeleteTransformResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_api_dataplane_v1_transform, 0);


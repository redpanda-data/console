// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/dataplane/v1/security.proto (package redpanda.api.dataplane.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_redpanda_api_auth_v1_authorization } from "../../auth/v1/authorization_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/dataplane/v1/security.proto.
 */
export const file_redpanda_api_dataplane_v1_security: GenFile = /*@__PURE__*/
  fileDesc("CihyZWRwYW5kYS9hcGkvZGF0YXBsYW5lL3YxL3NlY3VyaXR5LnByb3RvEhlyZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxIi0KBFJvbGUSJQoEbmFtZRgBIAEoCUIXukgUyAEBcg8QARiAATIIXlteLD1dKyQioQIKEExpc3RSb2xlc1JlcXVlc3QSRwoGZmlsdGVyGAEgASgLMjIucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5MaXN0Um9sZXNSZXF1ZXN0LkZpbHRlckgAiAEBEiYKCXBhZ2Vfc2l6ZRgCIAEoBUITukgQGg4Y6Aco////////////ARISCgpwYWdlX3Rva2VuGAMgASgJGn0KBkZpbHRlchIpCgtuYW1lX3ByZWZpeBgBIAEoCUIUukgRcg8YgAEyCl4oW14sPV0qKSQSKwoNbmFtZV9jb250YWlucxgCIAEoCUIUukgRcg8YgAEyCl4oW14sPV0qKSQSGwoJcHJpbmNpcGFsGAMgASgJQgi6SAVyAxiAAUIJCgdfZmlsdGVyIlwKEUxpc3RSb2xlc1Jlc3BvbnNlEi4KBXJvbGVzGAEgAygLMh8ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5Sb2xlEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJCChFDcmVhdGVSb2xlUmVxdWVzdBItCgRyb2xlGAEgASgLMh8ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5Sb2xlIkMKEkNyZWF0ZVJvbGVSZXNwb25zZRItCgRyb2xlGAEgASgLMh8ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5Sb2xlIjwKDkdldFJvbGVSZXF1ZXN0EioKCXJvbGVfbmFtZRgBIAEoCUIXukgUyAEBcg8QARiAATIIXlteLD1dKyQifAoPR2V0Um9sZVJlc3BvbnNlEi0KBHJvbGUYASABKAsyHy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLlJvbGUSOgoHbWVtYmVycxgCIAMoCzIpLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuUm9sZU1lbWJlcnNoaXAiVAoRRGVsZXRlUm9sZVJlcXVlc3QSKgoJcm9sZV9uYW1lGAEgASgJQhe6SBTIAQFyDxABGIABMgheW14sPV0rJBITCgtkZWxldGVfYWNscxgCIAEoCCIUChJEZWxldGVSb2xlUmVzcG9uc2UihQIKFkxpc3RSb2xlTWVtYmVyc1JlcXVlc3QSKgoJcm9sZV9uYW1lGAEgASgJQhe6SBTIAQFyDxABGIABMgheW14sPV0rJBJNCgZmaWx0ZXIYAiABKAsyOC5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkxpc3RSb2xlTWVtYmVyc1JlcXVlc3QuRmlsdGVySACIAQESJgoJcGFnZV9zaXplGAMgASgFQhO6SBAaDhjoByj///////////8BEhIKCnBhZ2VfdG9rZW4YBCABKAkaKQoGRmlsdGVyEh8KDW5hbWVfY29udGFpbnMYASABKAlCCLpIBXIDGIABQgkKB19maWx0ZXIigQEKF0xpc3RSb2xlTWVtYmVyc1Jlc3BvbnNlEhEKCXJvbGVfbmFtZRgBIAEoCRI6CgdtZW1iZXJzGAIgAygLMikucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5Sb2xlTWVtYmVyc2hpcBIXCg9uZXh0X3BhZ2VfdG9rZW4YAyABKAkiIwoOUm9sZU1lbWJlcnNoaXASEQoJcHJpbmNpcGFsGAEgASgJIswBChtVcGRhdGVSb2xlTWVtYmVyc2hpcFJlcXVlc3QSKgoJcm9sZV9uYW1lGAEgASgJQhe6SBTIAQFyDxABGIABMgheW14sPV0rJBIOCgZjcmVhdGUYAiABKAgSNgoDYWRkGAMgAygLMikucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5Sb2xlTWVtYmVyc2hpcBI5CgZyZW1vdmUYBCADKAsyKS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLlJvbGVNZW1iZXJzaGlwIsABChxVcGRhdGVSb2xlTWVtYmVyc2hpcFJlc3BvbnNlEioKCXJvbGVfbmFtZRgBIAEoCUIXukgUyAEBcg8QARiAATIIXlteLD1dKyQSOAoFYWRkZWQYAiADKAsyKS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLlJvbGVNZW1iZXJzaGlwEjoKB3JlbW92ZWQYAyADKAsyKS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLlJvbGVNZW1iZXJzaGlwMs0NCg9TZWN1cml0eVNlcnZpY2USkQIKCUxpc3RSb2xlcxIrLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuTGlzdFJvbGVzUmVxdWVzdBosLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuTGlzdFJvbGVzUmVzcG9uc2UiqAGSQYsBEgpMaXN0IHJvbGVzGj5MaXN0IHJvbGVzLiBPcHRpb25hbDogZmlsdGVyIGJhc2VkIG9uIHJvbGUgbmFtZSBhbmQgcHJpbmNpcGFsLko9CgMyMDASNgoCT0sSMAouGiwucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5MaXN0Um9sZXNSZXNwb25zZYqmHQQIAxADgtPkkwILEgkvdjEvcm9sZXMS9QEKCkNyZWF0ZVJvbGUSLC5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkNyZWF0ZVJvbGVSZXF1ZXN0Gi0ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5DcmVhdGVSb2xlUmVzcG9uc2UiiQGSQWcSC0NyZWF0ZSByb2xlGg5DcmVhdGUgYSByb2xlLkpICgMyMDESQQoMUm9sZSBjcmVhdGVkEjEKLxotLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuQ3JlYXRlUm9sZVJlc3BvbnNliqYdBAgDEAOC0+STAhE6BHJvbGUiCS92MS9yb2xlcxKMAgoHR2V0Um9sZRIpLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuR2V0Um9sZVJlcXVlc3QaKi5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkdldFJvbGVSZXNwb25zZSKpAZJBgAESCEdldCByb2xlGgtHZXQgYSByb2xlLko7CgMyMDASNAoCT0sSLgosGioucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5HZXRSb2xlUmVzcG9uc2VKKgoDNDA0EiMKCU5vdCBGb3VuZBIWChQaEi5nb29nbGUucnBjLlN0YXR1c4qmHQQIAxADgtPkkwIXEhUvdjEvcm9sZXMve3JvbGVfbmFtZX0SgwIKCkRlbGV0ZVJvbGUSLC5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkRlbGV0ZVJvbGVSZXF1ZXN0Gi0ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5EZWxldGVSb2xlUmVzcG9uc2UilwGSQW8SC0RlbGV0ZSByb2xlGg5EZWxldGUgYSByb2xlLkokCgMyMDQSHQoZUm9sZSBkZWxldGVkIHN1Y2Nlc3NmdWxseRIASioKAzQwNBIjCglOb3QgRm91bmQSFgoUGhIuZ29vZ2xlLnJwYy5TdGF0dXOKph0ECAMQA4LT5JMCFyoVL3YxL3JvbGVzL3tyb2xlX25hbWV9EqUCCg9MaXN0Um9sZU1lbWJlcnMSMS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkxpc3RSb2xlTWVtYmVyc1JlcXVlc3QaMi5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkxpc3RSb2xlTWVtYmVyc1Jlc3BvbnNlIqoBkkF6EhFMaXN0IHJvbGUgbWVtYmVycxogTGlzdCBtZW1iZXJzIGFzc2lnbmVkIHRvIGEgcm9sZS5KQwoDMjAwEjwKAk9LEjYKNBoyLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuTGlzdFJvbGVNZW1iZXJzUmVzcG9uc2WKph0ECAMQA4LT5JMCHxIdL3YxL3JvbGVzL3tyb2xlX25hbWV9L21lbWJlcnMSyQIKFFVwZGF0ZVJvbGVNZW1iZXJzaGlwEjYucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5VcGRhdGVSb2xlTWVtYmVyc2hpcFJlcXVlc3QaNy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLlVwZGF0ZVJvbGVNZW1iZXJzaGlwUmVzcG9uc2UivwGSQZMBEgtVcGRhdGUgcm9sZRoOVXBkYXRlIGEgcm9sZS5KSAoDMjAwEkEKAk9LEjsKORo3LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuVXBkYXRlUm9sZU1lbWJlcnNoaXBSZXNwb25zZUoqCgM0MDQSIwoJTm90IEZvdW5kEhYKFBoSLmdvb2dsZS5ycGMuU3RhdHVziqYdBAgDEAOC0+STAho6ASoaFS92MS9yb2xlcy97cm9sZV9uYW1lfRolkkEiCghTZWN1cml0eRIWTWFuYWdlIFJlZHBhbmRhIHJvbGVzLkKSAgodY29tLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFCDVNlY3VyaXR5UHJvdG9QAVpbZ2l0aHViLmNvbS9yZWRwYW5kYS1kYXRhL2NvbnNvbGUvYmFja2VuZC9wa2cvcHJvdG9nZW4vcmVkcGFuZGEvYXBpL2RhdGFwbGFuZS92MTtkYXRhcGxhbmV2MaICA1JBRKoCGVJlZHBhbmRhLkFwaS5EYXRhcGxhbmUuVjHKAhlSZWRwYW5kYVxBcGlcRGF0YXBsYW5lXFYx4gIlUmVkcGFuZGFcQXBpXERhdGFwbGFuZVxWMVxHUEJNZXRhZGF0YeoCHFJlZHBhbmRhOjpBcGk6OkRhdGFwbGFuZTo6VjFiBnByb3RvMw", [file_buf_validate_validate, file_google_api_annotations, file_protoc_gen_openapiv2_options_annotations, file_redpanda_api_auth_v1_authorization]);

/**
 * Role defines a role in the system.
 *
 * @generated from message redpanda.api.dataplane.v1.Role
 */
export type Role = Message<"redpanda.api.dataplane.v1.Role"> & {
  /**
   * The name of the role.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema: GenMessage<Role> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 0);

/**
 * ListRolesRequest is the request for ListRoles.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRolesRequest
 */
export type ListRolesRequest = Message<"redpanda.api.dataplane.v1.ListRolesRequest"> & {
  /**
   * Optional filter.
   *
   * @generated from field: optional redpanda.api.dataplane.v1.ListRolesRequest.Filter filter = 1;
   */
  filter?: ListRolesRequest_Filter;

  /**
   * Page size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Value of the next_page_token field returned by the previous response.
   * If not provided, the system assumes the first page is requested.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export const ListRolesRequestSchema: GenMessage<ListRolesRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 1);

/**
 * Filter options.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRolesRequest.Filter
 */
export type ListRolesRequest_Filter = Message<"redpanda.api.dataplane.v1.ListRolesRequest.Filter"> & {
  /**
   * Filter results only roles named with the prefix.
   *
   * @generated from field: string name_prefix = 1;
   */
  namePrefix: string;

  /**
   * Filter results to only roles with names which contain the string.
   *
   * @generated from field: string name_contains = 2;
   */
  nameContains: string;

  /**
   * Return only roles assigned to this principal.
   *
   * @generated from field: string principal = 3;
   */
  principal: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRolesRequest.Filter.
 * Use `create(ListRolesRequest_FilterSchema)` to create a new message.
 */
export const ListRolesRequest_FilterSchema: GenMessage<ListRolesRequest_Filter> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 1, 0);

/**
 * ListRolesResponse is the response for ListRoles.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRolesResponse
 */
export type ListRolesResponse = Message<"redpanda.api.dataplane.v1.ListRolesResponse"> & {
  /**
   * The roles in the system.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.Role roles = 1;
   */
  roles: Role[];

  /**
   * Token to retrieve the next page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export const ListRolesResponseSchema: GenMessage<ListRolesResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 2);

/**
 * CreateRoleRequest is the request for CreateRole.
 *
 * @generated from message redpanda.api.dataplane.v1.CreateRoleRequest
 */
export type CreateRoleRequest = Message<"redpanda.api.dataplane.v1.CreateRoleRequest"> & {
  /**
   * The role to create.
   *
   * @generated from field: redpanda.api.dataplane.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message redpanda.api.dataplane.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export const CreateRoleRequestSchema: GenMessage<CreateRoleRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 3);

/**
 * CreateRoleResponse is the response for CreateRole.
 *
 * @generated from message redpanda.api.dataplane.v1.CreateRoleResponse
 */
export type CreateRoleResponse = Message<"redpanda.api.dataplane.v1.CreateRoleResponse"> & {
  /**
   * The role.
   *
   * @generated from field: redpanda.api.dataplane.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message redpanda.api.dataplane.v1.CreateRoleResponse.
 * Use `create(CreateRoleResponseSchema)` to create a new message.
 */
export const CreateRoleResponseSchema: GenMessage<CreateRoleResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 4);

/**
 * CreateRoleRequest is the request for CreateRole.
 *
 * @generated from message redpanda.api.dataplane.v1.GetRoleRequest
 */
export type GetRoleRequest = Message<"redpanda.api.dataplane.v1.GetRoleRequest"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.GetRoleRequest.
 * Use `create(GetRoleRequestSchema)` to create a new message.
 */
export const GetRoleRequestSchema: GenMessage<GetRoleRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 5);

/**
 * GetRoleResponse is the response to GetRole.
 *
 * @generated from message redpanda.api.dataplane.v1.GetRoleResponse
 */
export type GetRoleResponse = Message<"redpanda.api.dataplane.v1.GetRoleResponse"> & {
  /**
   * The Role.
   *
   * @generated from field: redpanda.api.dataplane.v1.Role role = 1;
   */
  role?: Role;

  /**
   * Members assigned to the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership members = 2;
   */
  members: RoleMembership[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.GetRoleResponse.
 * Use `create(GetRoleResponseSchema)` to create a new message.
 */
export const GetRoleResponseSchema: GenMessage<GetRoleResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 6);

/**
 * DeleteRoleRequest is the request for DeleteRole.
 *
 * @generated from message redpanda.api.dataplane.v1.DeleteRoleRequest
 */
export type DeleteRoleRequest = Message<"redpanda.api.dataplane.v1.DeleteRoleRequest"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Whether to delete the ACLs bound to the role.
   *
   * @generated from field: bool delete_acls = 2;
   */
  deleteAcls: boolean;
};

/**
 * Describes the message redpanda.api.dataplane.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export const DeleteRoleRequestSchema: GenMessage<DeleteRoleRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 7);

/**
 * DeleteRoleResponse is the response for DeleteRole.
 *
 * @generated from message redpanda.api.dataplane.v1.DeleteRoleResponse
 */
export type DeleteRoleResponse = Message<"redpanda.api.dataplane.v1.DeleteRoleResponse"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1.DeleteRoleResponse.
 * Use `create(DeleteRoleResponseSchema)` to create a new message.
 */
export const DeleteRoleResponseSchema: GenMessage<DeleteRoleResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 8);

/**
 * List role members for a role. That is user principals assigned to that role.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRoleMembersRequest
 */
export type ListRoleMembersRequest = Message<"redpanda.api.dataplane.v1.ListRoleMembersRequest"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Optional filter.
   *
   * @generated from field: optional redpanda.api.dataplane.v1.ListRoleMembersRequest.Filter filter = 2;
   */
  filter?: ListRoleMembersRequest_Filter;

  /**
   * Page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Value of the next_page_token field returned by the previous response.
   * If not provided, the system assumes the first page is requested.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRoleMembersRequest.
 * Use `create(ListRoleMembersRequestSchema)` to create a new message.
 */
export const ListRoleMembersRequestSchema: GenMessage<ListRoleMembersRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 9);

/**
 * Filter options.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRoleMembersRequest.Filter
 */
export type ListRoleMembersRequest_Filter = Message<"redpanda.api.dataplane.v1.ListRoleMembersRequest.Filter"> & {
  /**
   * Filter results to only members with names which contain the string.
   *
   * @generated from field: string name_contains = 1;
   */
  nameContains: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRoleMembersRequest.Filter.
 * Use `create(ListRoleMembersRequest_FilterSchema)` to create a new message.
 */
export const ListRoleMembersRequest_FilterSchema: GenMessage<ListRoleMembersRequest_Filter> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 9, 0);

/**
 * ListRoleMembersResponse is the response for ListRoleMembers.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRoleMembersResponse
 */
export type ListRoleMembersResponse = Message<"redpanda.api.dataplane.v1.ListRoleMembersResponse"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Members assigned to the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership members = 2;
   */
  members: RoleMembership[];

  /**
   * Token to retrieve the next page.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRoleMembersResponse.
 * Use `create(ListRoleMembersResponseSchema)` to create a new message.
 */
export const ListRoleMembersResponseSchema: GenMessage<ListRoleMembersResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 10);

/**
 * RoleMembership is the role membership.
 *
 * @generated from message redpanda.api.dataplane.v1.RoleMembership
 */
export type RoleMembership = Message<"redpanda.api.dataplane.v1.RoleMembership"> & {
  /**
   * The name of the principal assigned to the role.
   *
   * @generated from field: string principal = 1;
   */
  principal: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.RoleMembership.
 * Use `create(RoleMembershipSchema)` to create a new message.
 */
export const RoleMembershipSchema: GenMessage<RoleMembership> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 11);

/**
 * UpdateRoleMembershipRequest is the request to UpdateRoleMembership.
 *
 * @generated from message redpanda.api.dataplane.v1.UpdateRoleMembershipRequest
 */
export type UpdateRoleMembershipRequest = Message<"redpanda.api.dataplane.v1.UpdateRoleMembershipRequest"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Create the role if it doesn't already exist.
   * If the role is created in this way, the “add” list will be respected, but the “remove” list will be ignored.
   *
   * @generated from field: bool create = 2;
   */
  create: boolean;

  /**
   * Members to assign to the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership add = 3;
   */
  add: RoleMembership[];

  /**
   * Members to remove from the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership remove = 4;
   */
  remove: RoleMembership[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.UpdateRoleMembershipRequest.
 * Use `create(UpdateRoleMembershipRequestSchema)` to create a new message.
 */
export const UpdateRoleMembershipRequestSchema: GenMessage<UpdateRoleMembershipRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 12);

/**
 * UpdateRoleMembershipResponse is the response for UpdateRoleMembership.
 *
 * @generated from message redpanda.api.dataplane.v1.UpdateRoleMembershipResponse
 */
export type UpdateRoleMembershipResponse = Message<"redpanda.api.dataplane.v1.UpdateRoleMembershipResponse"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Members assigned to the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership added = 2;
   */
  added: RoleMembership[];

  /**
   * Members removed from the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership removed = 3;
   */
  removed: RoleMembership[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.UpdateRoleMembershipResponse.
 * Use `create(UpdateRoleMembershipResponseSchema)` to create a new message.
 */
export const UpdateRoleMembershipResponseSchema: GenMessage<UpdateRoleMembershipResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 13);

/**
 * @generated from service redpanda.api.dataplane.v1.SecurityService
 */
export const SecurityService: GenService<{
  /**
   * ListRoles lists all the roles based on optional filter.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.ListRoles
   */
  listRoles: {
    methodKind: "unary";
    input: typeof ListRolesRequestSchema;
    output: typeof ListRolesResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.CreateRole
   */
  createRole: {
    methodKind: "unary";
    input: typeof CreateRoleRequestSchema;
    output: typeof CreateRoleResponseSchema;
  },
  /**
   * GetRole retrieves the specific role.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.GetRole
   */
  getRole: {
    methodKind: "unary";
    input: typeof GetRoleRequestSchema;
    output: typeof GetRoleResponseSchema;
  },
  /**
   * DeleteRole deletes the role from the system.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.DeleteRole
   */
  deleteRole: {
    methodKind: "unary";
    input: typeof DeleteRoleRequestSchema;
    output: typeof DeleteRoleResponseSchema;
  },
  /**
   * ListRoleMembership lists all the members assigned to a role based on optional filter.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.ListRoleMembers
   */
  listRoleMembers: {
    methodKind: "unary";
    input: typeof ListRoleMembersRequestSchema;
    output: typeof ListRoleMembersResponseSchema;
  },
  /**
   * UpdateRoleMembership updates role membership.
   * Partially update role membership, adding or removing from a role
   * ONLY those members listed in the “add” or “remove” fields, respectively.
   * Adding a member that is already assigned to the role (or removing one that is not) is a no-op,
   * and the rest of the members will be added and removed and reported.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.UpdateRoleMembership
   */
  updateRoleMembership: {
    methodKind: "unary";
    input: typeof UpdateRoleMembershipRequestSchema;
    output: typeof UpdateRoleMembershipResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_api_dataplane_v1_security, 0);


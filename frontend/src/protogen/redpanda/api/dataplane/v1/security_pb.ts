// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/dataplane/v1/security.proto (package redpanda.api.dataplane.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_redpanda_api_auth_v1_authorization } from "../../auth/v1/authorization_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/dataplane/v1/security.proto.
 */
export const file_redpanda_api_dataplane_v1_security: GenFile = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_api_annotations, file_protoc_gen_openapiv2_options_annotations, file_redpanda_api_auth_v1_authorization]);

/**
 * Role defines a role in the system.
 *
 * @generated from message redpanda.api.dataplane.v1.Role
 */
export type Role = Message<"redpanda.api.dataplane.v1.Role"> & {
  /**
   * The name of the role.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export const RoleSchema: GenMessage<Role> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 0);

/**
 * ListRolesRequest is the request for ListRoles.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRolesRequest
 */
export type ListRolesRequest = Message<"redpanda.api.dataplane.v1.ListRolesRequest"> & {
  /**
   * Optional filter.
   *
   * @generated from field: optional redpanda.api.dataplane.v1.ListRolesRequest.Filter filter = 1;
   */
  filter?: ListRolesRequest_Filter;

  /**
   * Page size.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Value of the next_page_token field returned by the previous response.
   * If not provided, the system assumes the first page is requested.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export const ListRolesRequestSchema: GenMessage<ListRolesRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 1);

/**
 * Filter options.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRolesRequest.Filter
 */
export type ListRolesRequest_Filter = Message<"redpanda.api.dataplane.v1.ListRolesRequest.Filter"> & {
  /**
   * Filter results only roles named with the prefix.
   *
   * @generated from field: string name_prefix = 1;
   */
  namePrefix: string;

  /**
   * Filter results to only roles with names which contain the string.
   *
   * @generated from field: string name_contains = 2;
   */
  nameContains: string;

  /**
   * Return only roles assigned to this principal.
   *
   * @generated from field: string principal = 3;
   */
  principal: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRolesRequest.Filter.
 * Use `create(ListRolesRequest_FilterSchema)` to create a new message.
 */
export const ListRolesRequest_FilterSchema: GenMessage<ListRolesRequest_Filter> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 1, 0);

/**
 * ListRolesResponse is the response for ListRoles.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRolesResponse
 */
export type ListRolesResponse = Message<"redpanda.api.dataplane.v1.ListRolesResponse"> & {
  /**
   * The roles in the system.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.Role roles = 1;
   */
  roles: Role[];

  /**
   * Token to retrieve the next page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export const ListRolesResponseSchema: GenMessage<ListRolesResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 2);

/**
 * CreateRoleRequest is the request for CreateRole.
 *
 * @generated from message redpanda.api.dataplane.v1.CreateRoleRequest
 */
export type CreateRoleRequest = Message<"redpanda.api.dataplane.v1.CreateRoleRequest"> & {
  /**
   * The role to create.
   *
   * @generated from field: redpanda.api.dataplane.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message redpanda.api.dataplane.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export const CreateRoleRequestSchema: GenMessage<CreateRoleRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 3);

/**
 * CreateRoleResponse is the response for CreateRole.
 *
 * @generated from message redpanda.api.dataplane.v1.CreateRoleResponse
 */
export type CreateRoleResponse = Message<"redpanda.api.dataplane.v1.CreateRoleResponse"> & {
  /**
   * The role.
   *
   * @generated from field: redpanda.api.dataplane.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message redpanda.api.dataplane.v1.CreateRoleResponse.
 * Use `create(CreateRoleResponseSchema)` to create a new message.
 */
export const CreateRoleResponseSchema: GenMessage<CreateRoleResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 4);

/**
 * CreateRoleRequest is the request for CreateRole.
 *
 * @generated from message redpanda.api.dataplane.v1.GetRoleRequest
 */
export type GetRoleRequest = Message<"redpanda.api.dataplane.v1.GetRoleRequest"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.GetRoleRequest.
 * Use `create(GetRoleRequestSchema)` to create a new message.
 */
export const GetRoleRequestSchema: GenMessage<GetRoleRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 5);

/**
 * GetRoleResponse is the response to GetRole.
 *
 * @generated from message redpanda.api.dataplane.v1.GetRoleResponse
 */
export type GetRoleResponse = Message<"redpanda.api.dataplane.v1.GetRoleResponse"> & {
  /**
   * The Role.
   *
   * @generated from field: redpanda.api.dataplane.v1.Role role = 1;
   */
  role?: Role;

  /**
   * Members assigned to the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership members = 2;
   */
  members: RoleMembership[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.GetRoleResponse.
 * Use `create(GetRoleResponseSchema)` to create a new message.
 */
export const GetRoleResponseSchema: GenMessage<GetRoleResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 6);

/**
 * DeleteRoleRequest is the request for DeleteRole.
 *
 * @generated from message redpanda.api.dataplane.v1.DeleteRoleRequest
 */
export type DeleteRoleRequest = Message<"redpanda.api.dataplane.v1.DeleteRoleRequest"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Whether to delete the ACLs bound to the role.
   *
   * @generated from field: bool delete_acls = 2;
   */
  deleteAcls: boolean;
};

/**
 * Describes the message redpanda.api.dataplane.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export const DeleteRoleRequestSchema: GenMessage<DeleteRoleRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 7);

/**
 * DeleteRoleResponse is the response for DeleteRole.
 *
 * @generated from message redpanda.api.dataplane.v1.DeleteRoleResponse
 */
export type DeleteRoleResponse = Message<"redpanda.api.dataplane.v1.DeleteRoleResponse"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1.DeleteRoleResponse.
 * Use `create(DeleteRoleResponseSchema)` to create a new message.
 */
export const DeleteRoleResponseSchema: GenMessage<DeleteRoleResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 8);

/**
 * List role members for a role. That is user principals assigned to that role.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRoleMembersRequest
 */
export type ListRoleMembersRequest = Message<"redpanda.api.dataplane.v1.ListRoleMembersRequest"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Optional filter.
   *
   * @generated from field: optional redpanda.api.dataplane.v1.ListRoleMembersRequest.Filter filter = 2;
   */
  filter?: ListRoleMembersRequest_Filter;

  /**
   * Page size.
   *
   * @generated from field: int32 page_size = 3;
   */
  pageSize: number;

  /**
   * Value of the next_page_token field returned by the previous response.
   * If not provided, the system assumes the first page is requested.
   *
   * @generated from field: string page_token = 4;
   */
  pageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRoleMembersRequest.
 * Use `create(ListRoleMembersRequestSchema)` to create a new message.
 */
export const ListRoleMembersRequestSchema: GenMessage<ListRoleMembersRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 9);

/**
 * Filter options.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRoleMembersRequest.Filter
 */
export type ListRoleMembersRequest_Filter = Message<"redpanda.api.dataplane.v1.ListRoleMembersRequest.Filter"> & {
  /**
   * Filter results to only members with names which contain the string.
   *
   * @generated from field: string name_contains = 1;
   */
  nameContains: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRoleMembersRequest.Filter.
 * Use `create(ListRoleMembersRequest_FilterSchema)` to create a new message.
 */
export const ListRoleMembersRequest_FilterSchema: GenMessage<ListRoleMembersRequest_Filter> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 9, 0);

/**
 * ListRoleMembersResponse is the response for ListRoleMembers.
 *
 * @generated from message redpanda.api.dataplane.v1.ListRoleMembersResponse
 */
export type ListRoleMembersResponse = Message<"redpanda.api.dataplane.v1.ListRoleMembersResponse"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Members assigned to the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership members = 2;
   */
  members: RoleMembership[];

  /**
   * Token to retrieve the next page.
   *
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListRoleMembersResponse.
 * Use `create(ListRoleMembersResponseSchema)` to create a new message.
 */
export const ListRoleMembersResponseSchema: GenMessage<ListRoleMembersResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 10);

/**
 * RoleMembership is the role membership.
 *
 * @generated from message redpanda.api.dataplane.v1.RoleMembership
 */
export type RoleMembership = Message<"redpanda.api.dataplane.v1.RoleMembership"> & {
  /**
   * The name of the principal assigned to the role.
   *
   * @generated from field: string principal = 1;
   */
  principal: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.RoleMembership.
 * Use `create(RoleMembershipSchema)` to create a new message.
 */
export const RoleMembershipSchema: GenMessage<RoleMembership> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 11);

/**
 * UpdateRoleMembershipRequest is the request to UpdateRoleMembership.
 *
 * @generated from message redpanda.api.dataplane.v1.UpdateRoleMembershipRequest
 */
export type UpdateRoleMembershipRequest = Message<"redpanda.api.dataplane.v1.UpdateRoleMembershipRequest"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Create the role if it doesn't already exist.
   * If the role is created in this way, the “add” list will be respected, but the “remove” list will be ignored.
   *
   * @generated from field: bool create = 2;
   */
  create: boolean;

  /**
   * Members to assign to the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership add = 3;
   */
  add: RoleMembership[];

  /**
   * Members to remove from the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership remove = 4;
   */
  remove: RoleMembership[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.UpdateRoleMembershipRequest.
 * Use `create(UpdateRoleMembershipRequestSchema)` to create a new message.
 */
export const UpdateRoleMembershipRequestSchema: GenMessage<UpdateRoleMembershipRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 12);

/**
 * UpdateRoleMembershipResponse is the response for UpdateRoleMembership.
 *
 * @generated from message redpanda.api.dataplane.v1.UpdateRoleMembershipResponse
 */
export type UpdateRoleMembershipResponse = Message<"redpanda.api.dataplane.v1.UpdateRoleMembershipResponse"> & {
  /**
   * The role name.
   *
   * @generated from field: string role_name = 1;
   */
  roleName: string;

  /**
   * Members assigned to the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership added = 2;
   */
  added: RoleMembership[];

  /**
   * Members removed from the role.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.RoleMembership removed = 3;
   */
  removed: RoleMembership[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.UpdateRoleMembershipResponse.
 * Use `create(UpdateRoleMembershipResponseSchema)` to create a new message.
 */
export const UpdateRoleMembershipResponseSchema: GenMessage<UpdateRoleMembershipResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 13);

/**
 * ACL represents an individual access control rule.
 *
 * @generated from message redpanda.api.dataplane.v1.SchemaRegistryACL
 */
export type SchemaRegistryACL = Message<"redpanda.api.dataplane.v1.SchemaRegistryACL"> & {
  /**
   * The principal (user/service) this ACL applies to.
   *
   * @generated from field: string principal = 1;
   */
  principal: string;

  /**
   * The resource name this ACL applies to.
   *
   * @generated from field: string resource = 2;
   */
  resource: string;

  /**
   * The type of resource this ACL applies to.
   *
   * @generated from field: redpanda.api.dataplane.v1.ResourceType resource_type = 3;
   */
  resourceType: ResourceType;

  /**
   * How the resource name should be matched.
   *
   * @generated from field: redpanda.api.dataplane.v1.PatternType pattern_type = 4;
   */
  patternType: PatternType;

  /**
   * The host this ACL applies to.
   *
   * @generated from field: string host = 5;
   */
  host: string;

  /**
   * The operation this ACL controls.
   *
   * @generated from field: redpanda.api.dataplane.v1.Operation operation = 6;
   */
  operation: Operation;

  /**
   * Whether this ACL allows or denies the operation.
   *
   * @generated from field: redpanda.api.dataplane.v1.Permission permission = 7;
   */
  permission: Permission;
};

/**
 * Describes the message redpanda.api.dataplane.v1.SchemaRegistryACL.
 * Use `create(SchemaRegistryACLSchema)` to create a new message.
 */
export const SchemaRegistryACLSchema: GenMessage<SchemaRegistryACL> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 14);

/**
 * ListSchemaRegistryACLsRequest is the request for ListSchemaRegistryACLs.
 *
 * @generated from message redpanda.api.dataplane.v1.ListSchemaRegistryACLsRequest
 */
export type ListSchemaRegistryACLsRequest = Message<"redpanda.api.dataplane.v1.ListSchemaRegistryACLsRequest"> & {
  /**
   * Optional filter.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.ListSchemaRegistryACLsRequest.Filter filter = 1;
   */
  filter: ListSchemaRegistryACLsRequest_Filter[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListSchemaRegistryACLsRequest.
 * Use `create(ListSchemaRegistryACLsRequestSchema)` to create a new message.
 */
export const ListSchemaRegistryACLsRequestSchema: GenMessage<ListSchemaRegistryACLsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 15);

/**
 * Filter options.
 *
 * @generated from message redpanda.api.dataplane.v1.ListSchemaRegistryACLsRequest.Filter
 */
export type ListSchemaRegistryACLsRequest_Filter = Message<"redpanda.api.dataplane.v1.ListSchemaRegistryACLsRequest.Filter"> & {
  /**
   * Filter by principal name.
   *
   * @generated from field: string principal = 1;
   */
  principal: string;

  /**
   * Filter by resource name.
   *
   * @generated from field: string resource = 2;
   */
  resource: string;

  /**
   * Filter by resource type.
   *
   * @generated from field: redpanda.api.dataplane.v1.ResourceType resource_type = 3;
   */
  resourceType: ResourceType;

  /**
   * Filter by pattern type.
   *
   * @generated from field: redpanda.api.dataplane.v1.PatternType pattern_type = 4;
   */
  patternType: PatternType;

  /**
   * Filter by host.
   *
   * @generated from field: string host = 5;
   */
  host: string;

  /**
   * Filter by operation.
   *
   * @generated from field: redpanda.api.dataplane.v1.Operation operation = 6;
   */
  operation: Operation;

  /**
   * Filter by permission.
   *
   * @generated from field: redpanda.api.dataplane.v1.Permission permission = 7;
   */
  permission: Permission;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListSchemaRegistryACLsRequest.Filter.
 * Use `create(ListSchemaRegistryACLsRequest_FilterSchema)` to create a new message.
 */
export const ListSchemaRegistryACLsRequest_FilterSchema: GenMessage<ListSchemaRegistryACLsRequest_Filter> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 15, 0);

/**
 * ListSchemaRegistryACLsResponse is the response for ListSchemaRegistryACLs.
 *
 * @generated from message redpanda.api.dataplane.v1.ListSchemaRegistryACLsResponse
 */
export type ListSchemaRegistryACLsResponse = Message<"redpanda.api.dataplane.v1.ListSchemaRegistryACLsResponse"> & {
  /**
   * The Schema Registry ACLs.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.SchemaRegistryACL acls = 1;
   */
  acls: SchemaRegistryACL[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListSchemaRegistryACLsResponse.
 * Use `create(ListSchemaRegistryACLsResponseSchema)` to create a new message.
 */
export const ListSchemaRegistryACLsResponseSchema: GenMessage<ListSchemaRegistryACLsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 16);

/**
 * CreateSchemaRegistryACLsRequest is the request for CreateSchemaRegistryACLs.
 *
 * @generated from message redpanda.api.dataplane.v1.CreateSchemaRegistryACLsRequest
 */
export type CreateSchemaRegistryACLsRequest = Message<"redpanda.api.dataplane.v1.CreateSchemaRegistryACLsRequest"> & {
  /**
   * The ACLs to create.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.SchemaRegistryACL acls = 1;
   */
  acls: SchemaRegistryACL[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.CreateSchemaRegistryACLsRequest.
 * Use `create(CreateSchemaRegistryACLsRequestSchema)` to create a new message.
 */
export const CreateSchemaRegistryACLsRequestSchema: GenMessage<CreateSchemaRegistryACLsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 17);

/**
 * CreateSchemaRegistryACLsResponse is the response for CreateSchemaRegistryACLs.
 *
 * @generated from message redpanda.api.dataplane.v1.CreateSchemaRegistryACLsResponse
 */
export type CreateSchemaRegistryACLsResponse = Message<"redpanda.api.dataplane.v1.CreateSchemaRegistryACLsResponse"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1.CreateSchemaRegistryACLsResponse.
 * Use `create(CreateSchemaRegistryACLsResponseSchema)` to create a new message.
 */
export const CreateSchemaRegistryACLsResponseSchema: GenMessage<CreateSchemaRegistryACLsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 18);

/**
 * DeleteSchemaRegistryACLsRequest is the request for DeleteSchemaRegistryACLs.
 *
 * @generated from message redpanda.api.dataplane.v1.DeleteSchemaRegistryACLsRequest
 */
export type DeleteSchemaRegistryACLsRequest = Message<"redpanda.api.dataplane.v1.DeleteSchemaRegistryACLsRequest"> & {
  /**
   * The ACLs to delete. Only exact matches will be deleted.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1.SchemaRegistryACL acls = 1;
   */
  acls: SchemaRegistryACL[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.DeleteSchemaRegistryACLsRequest.
 * Use `create(DeleteSchemaRegistryACLsRequestSchema)` to create a new message.
 */
export const DeleteSchemaRegistryACLsRequestSchema: GenMessage<DeleteSchemaRegistryACLsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 19);

/**
 * DeleteSchemaRegistryACLsResponse is the response for DeleteSchemaRegistryACLs.
 *
 * @generated from message redpanda.api.dataplane.v1.DeleteSchemaRegistryACLsResponse
 */
export type DeleteSchemaRegistryACLsResponse = Message<"redpanda.api.dataplane.v1.DeleteSchemaRegistryACLsResponse"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1.DeleteSchemaRegistryACLsResponse.
 * Use `create(DeleteSchemaRegistryACLsResponseSchema)` to create a new message.
 */
export const DeleteSchemaRegistryACLsResponseSchema: GenMessage<DeleteSchemaRegistryACLsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_security, 20);

/**
 * Schema Registry ACLs
 * ResourceType defines the type of resource an ACL applies to.
 *
 * @generated from enum redpanda.api.dataplane.v1.ResourceType
 */
export enum ResourceType {
  /**
   * Unspecified resource type.
   *
   * @generated from enum value: RESOURCE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Registry resource type.
   *
   * @generated from enum value: RESOURCE_TYPE_REGISTRY = 1;
   */
  REGISTRY = 1,

  /**
   * Subject (schema) resource type.
   *
   * @generated from enum value: RESOURCE_TYPE_SUBJECT = 2;
   */
  SUBJECT = 2,
}

/**
 * Describes the enum redpanda.api.dataplane.v1.ResourceType.
 */
export const ResourceTypeSchema: GenEnum<ResourceType> = /*@__PURE__*/
  enumDesc(file_redpanda_api_dataplane_v1_security, 0);

/**
 * PatternType defines how the resource name is matched.
 *
 * @generated from enum redpanda.api.dataplane.v1.PatternType
 */
export enum PatternType {
  /**
   * Unspecified pattern type.
   *
   * @generated from enum value: PATTERN_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Literal pattern matches a resource name exactly.
   *
   * @generated from enum value: PATTERN_TYPE_LITERAL = 1;
   */
  LITERAL = 1,

  /**
   * Prefixed pattern matches resource names by prefix.
   *
   * @generated from enum value: PATTERN_TYPE_PREFIXED = 2;
   */
  PREFIXED = 2,
}

/**
 * Describes the enum redpanda.api.dataplane.v1.PatternType.
 */
export const PatternTypeSchema: GenEnum<PatternType> = /*@__PURE__*/
  enumDesc(file_redpanda_api_dataplane_v1_security, 1);

/**
 * Operation defines the action allowed or denied by an ACL.
 *
 * @generated from enum redpanda.api.dataplane.v1.Operation
 */
export enum Operation {
  /**
   * Unspecified operation.
   *
   * @generated from enum value: OPERATION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ALL operations.
   *
   * @generated from enum value: OPERATION_ALL = 1;
   */
  ALL = 1,

  /**
   * READ operation.
   *
   * @generated from enum value: OPERATION_READ = 2;
   */
  READ = 2,

  /**
   * WRITE operation.
   *
   * @generated from enum value: OPERATION_WRITE = 3;
   */
  WRITE = 3,

  /**
   * REMOVE operation.
   *
   * @generated from enum value: OPERATION_REMOVE = 4;
   */
  REMOVE = 4,

  /**
   * DESCRIBE operation.
   *
   * @generated from enum value: OPERATION_DESCRIBE = 5;
   */
  DESCRIBE = 5,

  /**
   * DESCRIBE_CONFIGS operation.
   *
   * @generated from enum value: OPERATION_DESCRIBE_CONFIGS = 6;
   */
  DESCRIBE_CONFIGS = 6,

  /**
   * ALTER operation.
   *
   * @generated from enum value: OPERATION_ALTER = 7;
   */
  ALTER = 7,

  /**
   * ALTER_CONFIGS operation.
   *
   * @generated from enum value: OPERATION_ALTER_CONFIGS = 8;
   */
  ALTER_CONFIGS = 8,
}

/**
 * Describes the enum redpanda.api.dataplane.v1.Operation.
 */
export const OperationSchema: GenEnum<Operation> = /*@__PURE__*/
  enumDesc(file_redpanda_api_dataplane_v1_security, 2);

/**
 * Permission defines whether an ACL allows or denies an operation.
 *
 * @generated from enum redpanda.api.dataplane.v1.Permission
 */
export enum Permission {
  /**
   * Unspecified permission.
   *
   * @generated from enum value: PERMISSION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * ALLOW permission permits the operation.
   *
   * @generated from enum value: PERMISSION_ALLOW = 1;
   */
  ALLOW = 1,

  /**
   * DENY permission denies the operation.
   *
   * @generated from enum value: PERMISSION_DENY = 2;
   */
  DENY = 2,
}

/**
 * Describes the enum redpanda.api.dataplane.v1.Permission.
 */
export const PermissionSchema: GenEnum<Permission> = /*@__PURE__*/
  enumDesc(file_redpanda_api_dataplane_v1_security, 3);

/**
 * @generated from service redpanda.api.dataplane.v1.SecurityService
 */
export const SecurityService: GenService<{
  /**
   * ListRoles lists all the roles based on optional filter.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.ListRoles
   */
  listRoles: {
    methodKind: "unary";
    input: typeof ListRolesRequestSchema;
    output: typeof ListRolesResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.CreateRole
   */
  createRole: {
    methodKind: "unary";
    input: typeof CreateRoleRequestSchema;
    output: typeof CreateRoleResponseSchema;
  },
  /**
   * GetRole retrieves the specific role.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.GetRole
   */
  getRole: {
    methodKind: "unary";
    input: typeof GetRoleRequestSchema;
    output: typeof GetRoleResponseSchema;
  },
  /**
   * DeleteRole deletes the role from the system.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.DeleteRole
   */
  deleteRole: {
    methodKind: "unary";
    input: typeof DeleteRoleRequestSchema;
    output: typeof DeleteRoleResponseSchema;
  },
  /**
   * ListRoleMembership lists all the members assigned to a role based on optional filter.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.ListRoleMembers
   */
  listRoleMembers: {
    methodKind: "unary";
    input: typeof ListRoleMembersRequestSchema;
    output: typeof ListRoleMembersResponseSchema;
  },
  /**
   * UpdateRoleMembership updates role membership.
   * Partially update role membership, adding or removing from a role
   * ONLY those members listed in the “add” or “remove” fields, respectively.
   * Adding a member that is already assigned to the role (or removing one that is not) is a no-op,
   * and the rest of the members will be added and removed and reported.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.UpdateRoleMembership
   */
  updateRoleMembership: {
    methodKind: "unary";
    input: typeof UpdateRoleMembershipRequestSchema;
    output: typeof UpdateRoleMembershipResponseSchema;
  },
  /**
   * ListSchemaRegistryACLs lists Schema Registry ACLs based on optional filters.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.ListSchemaRegistryACLs
   */
  listSchemaRegistryACLs: {
    methodKind: "unary";
    input: typeof ListSchemaRegistryACLsRequestSchema;
    output: typeof ListSchemaRegistryACLsResponseSchema;
  },
  /**
   * CreateSchemaRegistryACLs creates new Schema Registry ACL entries.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.CreateSchemaRegistryACLs
   */
  createSchemaRegistryACLs: {
    methodKind: "unary";
    input: typeof CreateSchemaRegistryACLsRequestSchema;
    output: typeof CreateSchemaRegistryACLsResponseSchema;
  },
  /**
   * DeleteSchemaRegistryACLs deletes existing Schema Registry ACL entries.
   *
   * @generated from rpc redpanda.api.dataplane.v1.SecurityService.DeleteSchemaRegistryACLs
   */
  deleteSchemaRegistryACLs: {
    methodKind: "unary";
    input: typeof DeleteSchemaRegistryACLsRequestSchema;
    output: typeof DeleteSchemaRegistryACLsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_api_dataplane_v1_security, 0);


// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/dataplane/v1/monitoring.proto (package redpanda.api.dataplane.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_google_api_field_info } from "../../../../google/api/field_info_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_redpanda_api_auth_v1_authorization } from "../../auth/v1/authorization_pb";
import type { AuthenticationInfo, KafkaConnectionState, RequestStatistics } from "../../../core/admin/v2/kafka_connections_pb";
import { file_redpanda_core_admin_v2_kafka_connections } from "../../../core/admin/v2/kafka_connections_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/dataplane/v1/monitoring.proto.
 */
export const file_redpanda_api_dataplane_v1_monitoring: GenFile = /*@__PURE__*/
  fileDesc("CipyZWRwYW5kYS9hcGkvZGF0YXBsYW5lL3YxL21vbml0b3JpbmcucHJvdG8SGXJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEi4wQKFkxpc3RDb25uZWN0aW9uc1JlcXVlc3QSOwoFc3RhdGUYASABKA4yLC5yZWRwYW5kYS5jb3JlLmFkbWluLnYyLkthZmthQ29ubmVjdGlvblN0YXRlEhIKCmlwX2FkZHJlc3MYAiABKAkSEQoJY2xpZW50X2lkGAMgASgJEhwKFGNsaWVudF9zb2Z0d2FyZV9uYW1lGAQgASgJEh8KF2NsaWVudF9zb2Z0d2FyZV92ZXJzaW9uGAUgASgJEhAKCGdyb3VwX2lkGAYgASgJEgwKBHVzZXIYByABKAkSGAoHaWRsZV9tcxgIIAEoA0IHukgEIgIoABISCgpmaWx0ZXJfcmF3GAkgASgJEhAKCG9yZGVyX2J5GAogASgJEg0KBWxpbWl0GAsgASgNOrYCukiyAhqvAgoaZmlsdGVyX3Jhd19leGNsdWRlc19vdGhlcnMSQ2ZpbHRlcl9yYXcgbXVzdCBub3QgYmUgcHJlc2VudCBhbG9uZ3NpZGUgb3RoZXIgZmlsdGVyaW5nIG1lY2hhbmlzbXMaywEhKGhhcyh0aGlzLmZpbHRlcl9yYXcpICYmIChoYXModGhpcy5pcF9hZGRyZXNzKSB8fCBoYXModGhpcy5jbGllbnRfaWQpIHx8IGhhcyh0aGlzLmNsaWVudF9zb2Z0d2FyZV9uYW1lKSB8fGhhcyh0aGlzLmNsaWVudF9zb2Z0d2FyZV92ZXJzaW9uKSB8fCBoYXModGhpcy5ncm91cF9pZCkgfHwgaGFzKHRoaXMudXNlcikgfHwgaGFzKHRoaXMuaWRsZV9tcykpKSJpChBDb25uZWN0aW9uQ2xpZW50EgoKAmlwGAEgASgJEgwKBHBvcnQYAiABKA0SCgoCaWQYAyABKAkSFQoNc29mdHdhcmVfbmFtZRgEIAEoCRIYChBzb2Z0d2FyZV92ZXJzaW9uGAUgASgJIk8KCkFQSVZlcnNpb24SMAoDYXBpGAEgASgOMiMucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5LYWZrYUFQSRIPCgd2ZXJzaW9uGAIgASgFItoBCg5BY3RpdmVSZXF1ZXN0cxJDCghyZXF1ZXN0cxgBIAMoCzIxLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuQWN0aXZlUmVxdWVzdHMuUmVxdWVzdBIZChFoYXNfbW9yZV9yZXF1ZXN0cxgCIAEoCBpoCgdSZXF1ZXN0EjAKA2FwaRgBIAEoDjIjLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuS2Fma2FBUEkSKwoIZHVyYXRpb24YAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24iPwoJR3JvdXBJbmZvEgoKAmlkGAEgASgJEhMKC2luc3RhbmNlX2lkGAIgASgJEhEKCW1lbWJlcl9pZBgDIAEoCSLeBgoKQ29ubmVjdGlvbhIPCgdub2RlX2lkGAEgASgFEhAKCHNoYXJkX2lkGAIgASgNEhUKA3VpZBgDIAEoCUII4ozP1wgCCAESOwoFc3RhdGUYBCABKA4yLC5yZWRwYW5kYS5jb3JlLmFkbWluLnYyLkthZmthQ29ubmVjdGlvblN0YXRlEi0KCW9wZW5fdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKY2xvc2VfdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNgoTY29ubmVjdGlvbl9kdXJhdGlvbhgHIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJCCg5hdXRoZW50aWNhdGlvbhgIIAEoCzIqLnJlZHBhbmRhLmNvcmUuYWRtaW4udjIuQXV0aGVudGljYXRpb25JbmZvEhMKC3Rsc19lbmFibGVkGAkgASgIEjsKBmNsaWVudBgKIAEoCzIrLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuQ29ubmVjdGlvbkNsaWVudBIzCgVncm91cBgLIAEoCzIkLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuR3JvdXBJbmZvEhUKDWxpc3RlbmVyX25hbWUYDCABKAkSGAoQdHJhbnNhY3Rpb25hbF9pZBgNIAEoCRI7CgxhcGlfdmVyc2lvbnMYDiADKAsyJS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkFQSVZlcnNpb24SMAoNaWRsZV9kdXJhdGlvbhgPIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhJCCg9hY3RpdmVfcmVxdWVzdHMYECABKAsyKS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkFjdGl2ZVJlcXVlc3RzEkkKFnJlcXVlc3Rfc3RhdGlzdGljc19hbGwYESABKAsyKS5yZWRwYW5kYS5jb3JlLmFkbWluLnYyLlJlcXVlc3RTdGF0aXN0aWNzEkgKFXJlcXVlc3Rfc3RhdGlzdGljc18xbRgSIAEoCzIpLnJlZHBhbmRhLmNvcmUuYWRtaW4udjIuUmVxdWVzdFN0YXRpc3RpY3MiVQoXTGlzdENvbm5lY3Rpb25zUmVzcG9uc2USOgoLY29ubmVjdGlvbnMYASADKAsyJS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxLkNvbm5lY3Rpb24q7AQKCEthZmthQVBJEhkKFUtBRktBX0FQSV9VTlNQRUNJRklFRBAAEhUKEUtBRktBX0FQSV9QUk9EVUNFEAESEwoPS0FGS0FfQVBJX0ZFVENIEAISFQoRS0FGS0FfQVBJX09GRlNFVFMQAxIWChJLQUZLQV9BUElfTUVUQURBVEEQBBIcChhLQUZLQV9BUElfTEVBREVSX0FORF9JU1IQBRIaChZLQUZLQV9BUElfU1RPUF9SRVBMSUNBEAYSHQoZS0FGS0FfQVBJX1VQREFURV9NRVRBREFUQRAHEiEKHUtBRktBX0FQSV9DT05UUk9MTEVEX1NIVVRET1dOEAgSGwoXS0FGS0FfQVBJX09GRlNFVF9DT01NSVQQCRIaChZLQUZLQV9BUElfT0ZGU0VUX0ZFVENIEAoSHwobS0FGS0FfQVBJX0dST1VQX0NPT1JESU5BVE9SEAsSGAoUS0FGS0FfQVBJX0pPSU5fR1JPVVAQDBIXChNLQUZLQV9BUElfSEVBUlRCRUFUEA0SGQoVS0FGS0FfQVBJX0xFQVZFX0dST1VQEA4SGAoUS0FGS0FfQVBJX1NZTkNfR1JPVVAQDxIdChlLQUZLQV9BUElfREVTQ1JJQkVfR1JPVVBTEBASGQoVS0FGS0FfQVBJX0xJU1RfR1JPVVBTEBESHAoYS0FGS0FfQVBJX1NBU0xfSEFORFNIQUtFEBISGgoWS0FGS0FfQVBJX0FQSV9WRVJTSU9OUxATEhsKF0tBRktBX0FQSV9DUkVBVEVfVE9QSUNTEBQSGwoXS0FGS0FfQVBJX0RFTEVURV9UT1BJQ1MQFTKbAwoRTW9uaXRvcmluZ1NlcnZpY2USzwIKD0xpc3RDb25uZWN0aW9ucxIxLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuTGlzdENvbm5lY3Rpb25zUmVxdWVzdBoyLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjEuTGlzdENvbm5lY3Rpb25zUmVzcG9uc2Ui1AGSQaYBEhdMaXN0IFJlY2VudCBDb25uZWN0aW9ucxo2TGlzdCBpbmZvcm1hdGlvbiBvbiByZWNlbnQgY29ubmVjdGlvbnMgdG8gdGhlIGNsdXN0ZXIuSlMKAzIwMBJMChJSZWNlbnQgY29ubmVjdGlvbnMSNgo0GjIucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MS5MaXN0Q29ubmVjdGlvbnNSZXNwb25zZYqmHQQIAxADgtPkkwIcEhovdjEvbW9uaXRvcmluZy9jb25uZWN0aW9ucxo0kkExCgpNb25pdG9yaW5nEiNNb25pdG9yaW5nIG9wZXJhdGlvbnMgZm9yIFJlZHBhbmRhLkKUAgodY29tLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFCD01vbml0b3JpbmdQcm90b1ABWltnaXRodWIuY29tL3JlZHBhbmRhLWRhdGEvY29uc29sZS9iYWNrZW5kL3BrZy9wcm90b2dlbi9yZWRwYW5kYS9hcGkvZGF0YXBsYW5lL3YxO2RhdGFwbGFuZXYxogIDUkFEqgIZUmVkcGFuZGEuQXBpLkRhdGFwbGFuZS5WMcoCGVJlZHBhbmRhXEFwaVxEYXRhcGxhbmVcVjHiAiVSZWRwYW5kYVxBcGlcRGF0YXBsYW5lXFYxXEdQQk1ldGFkYXRh6gIcUmVkcGFuZGE6OkFwaTo6RGF0YXBsYW5lOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_google_api_field_info, file_google_protobuf_duration, file_google_protobuf_timestamp, file_protoc_gen_openapiv2_options_annotations, file_redpanda_api_auth_v1_authorization, file_redpanda_core_admin_v2_kafka_connections]);

/**
 * @generated from message redpanda.api.dataplane.v1.ListConnectionsRequest
 */
export type ListConnectionsRequest = Message<"redpanda.api.dataplane.v1.ListConnectionsRequest"> & {
  /**
   * @generated from field: redpanda.core.admin.v2.KafkaConnectionState state = 1;
   */
  state: KafkaConnectionState;

  /**
   * @generated from field: string ip_address = 2;
   */
  ipAddress: string;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId: string;

  /**
   * @generated from field: string client_software_name = 4;
   */
  clientSoftwareName: string;

  /**
   * @generated from field: string client_software_version = 5;
   */
  clientSoftwareVersion: string;

  /**
   * @generated from field: string group_id = 6;
   */
  groupId: string;

  /**
   * @generated from field: string user = 7;
   */
  user: string;

  /**
   * @generated from field: int64 idle_ms = 8;
   */
  idleMs: bigint;

  /**
   * @generated from field: string filter_raw = 9;
   */
  filterRaw: string;

  /**
   * @generated from field: string order_by = 10;
   */
  orderBy: string;

  /**
   * @generated from field: uint32 limit = 11;
   */
  limit: number;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListConnectionsRequest.
 * Use `create(ListConnectionsRequestSchema)` to create a new message.
 */
export const ListConnectionsRequestSchema: GenMessage<ListConnectionsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_monitoring, 0);

/**
 * @generated from message redpanda.api.dataplane.v1.ConnectionClient
 */
export type ConnectionClient = Message<"redpanda.api.dataplane.v1.ConnectionClient"> & {
  /**
   * @generated from field: string ip = 1;
   */
  ip: string;

  /**
   * @generated from field: uint32 port = 2;
   */
  port: number;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: string software_name = 4;
   */
  softwareName: string;

  /**
   * @generated from field: string software_version = 5;
   */
  softwareVersion: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ConnectionClient.
 * Use `create(ConnectionClientSchema)` to create a new message.
 */
export const ConnectionClientSchema: GenMessage<ConnectionClient> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_monitoring, 1);

/**
 * @generated from message redpanda.api.dataplane.v1.APIVersion
 */
export type APIVersion = Message<"redpanda.api.dataplane.v1.APIVersion"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1.KafkaAPI api = 1;
   */
  api: KafkaAPI;

  /**
   * @generated from field: int32 version = 2;
   */
  version: number;
};

/**
 * Describes the message redpanda.api.dataplane.v1.APIVersion.
 * Use `create(APIVersionSchema)` to create a new message.
 */
export const APIVersionSchema: GenMessage<APIVersion> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_monitoring, 2);

/**
 * @generated from message redpanda.api.dataplane.v1.ActiveRequests
 */
export type ActiveRequests = Message<"redpanda.api.dataplane.v1.ActiveRequests"> & {
  /**
   * @generated from field: repeated redpanda.api.dataplane.v1.ActiveRequests.Request requests = 1;
   */
  requests: ActiveRequests_Request[];

  /**
   * @generated from field: bool has_more_requests = 2;
   */
  hasMoreRequests: boolean;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ActiveRequests.
 * Use `create(ActiveRequestsSchema)` to create a new message.
 */
export const ActiveRequestsSchema: GenMessage<ActiveRequests> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_monitoring, 3);

/**
 * @generated from message redpanda.api.dataplane.v1.ActiveRequests.Request
 */
export type ActiveRequests_Request = Message<"redpanda.api.dataplane.v1.ActiveRequests.Request"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1.KafkaAPI api = 1;
   */
  api: KafkaAPI;

  /**
   * @generated from field: google.protobuf.Duration duration = 2;
   */
  duration?: Duration;
};

/**
 * Describes the message redpanda.api.dataplane.v1.ActiveRequests.Request.
 * Use `create(ActiveRequests_RequestSchema)` to create a new message.
 */
export const ActiveRequests_RequestSchema: GenMessage<ActiveRequests_Request> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_monitoring, 3, 0);

/**
 * @generated from message redpanda.api.dataplane.v1.GroupInfo
 */
export type GroupInfo = Message<"redpanda.api.dataplane.v1.GroupInfo"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string instance_id = 2;
   */
  instanceId: string;

  /**
   * @generated from field: string member_id = 3;
   */
  memberId: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1.GroupInfo.
 * Use `create(GroupInfoSchema)` to create a new message.
 */
export const GroupInfoSchema: GenMessage<GroupInfo> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_monitoring, 4);

/**
 * @generated from message redpanda.api.dataplane.v1.Connection
 */
export type Connection = Message<"redpanda.api.dataplane.v1.Connection"> & {
  /**
   * @generated from field: int32 node_id = 1;
   */
  nodeId: number;

  /**
   * @generated from field: uint32 shard_id = 2;
   */
  shardId: number;

  /**
   * @generated from field: string uid = 3;
   */
  uid: string;

  /**
   * @generated from field: redpanda.core.admin.v2.KafkaConnectionState state = 4;
   */
  state: KafkaConnectionState;

  /**
   * @generated from field: google.protobuf.Timestamp open_time = 5;
   */
  openTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp close_time = 6;
   */
  closeTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Duration connection_duration = 7;
   */
  connectionDuration?: Duration;

  /**
   * @generated from field: redpanda.core.admin.v2.AuthenticationInfo authentication = 8;
   */
  authentication?: AuthenticationInfo;

  /**
   * @generated from field: bool tls_enabled = 9;
   */
  tlsEnabled: boolean;

  /**
   * @generated from field: redpanda.api.dataplane.v1.ConnectionClient client = 10;
   */
  client?: ConnectionClient;

  /**
   * @generated from field: redpanda.api.dataplane.v1.GroupInfo group = 11;
   */
  group?: GroupInfo;

  /**
   * @generated from field: string listener_name = 12;
   */
  listenerName: string;

  /**
   * @generated from field: string transactional_id = 13;
   */
  transactionalId: string;

  /**
   * @generated from field: repeated redpanda.api.dataplane.v1.APIVersion api_versions = 14;
   */
  apiVersions: APIVersion[];

  /**
   * @generated from field: google.protobuf.Duration idle_duration = 15;
   */
  idleDuration?: Duration;

  /**
   * @generated from field: redpanda.api.dataplane.v1.ActiveRequests active_requests = 16;
   */
  activeRequests?: ActiveRequests;

  /**
   * @generated from field: redpanda.core.admin.v2.RequestStatistics request_statistics_all = 17;
   */
  requestStatisticsAll?: RequestStatistics;

  /**
   * @generated from field: redpanda.core.admin.v2.RequestStatistics request_statistics_1m = 18;
   */
  requestStatistics1m?: RequestStatistics;
};

/**
 * Describes the message redpanda.api.dataplane.v1.Connection.
 * Use `create(ConnectionSchema)` to create a new message.
 */
export const ConnectionSchema: GenMessage<Connection> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_monitoring, 5);

/**
 * @generated from message redpanda.api.dataplane.v1.ListConnectionsResponse
 */
export type ListConnectionsResponse = Message<"redpanda.api.dataplane.v1.ListConnectionsResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.dataplane.v1.Connection connections = 1;
   */
  connections: Connection[];
};

/**
 * Describes the message redpanda.api.dataplane.v1.ListConnectionsResponse.
 * Use `create(ListConnectionsResponseSchema)` to create a new message.
 */
export const ListConnectionsResponseSchema: GenMessage<ListConnectionsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1_monitoring, 6);

/**
 * Everything is up by one (produce is actually 0, fetch -> 1, etc)
 *
 * @generated from enum redpanda.api.dataplane.v1.KafkaAPI
 */
export enum KafkaAPI {
  /**
   * @generated from enum value: KAFKA_API_UNSPECIFIED = 0;
   */
  KAFKA_API_UNSPECIFIED = 0,

  /**
   * @generated from enum value: KAFKA_API_PRODUCE = 1;
   */
  KAFKA_API_PRODUCE = 1,

  /**
   * @generated from enum value: KAFKA_API_FETCH = 2;
   */
  KAFKA_API_FETCH = 2,

  /**
   * @generated from enum value: KAFKA_API_OFFSETS = 3;
   */
  KAFKA_API_OFFSETS = 3,

  /**
   * @generated from enum value: KAFKA_API_METADATA = 4;
   */
  KAFKA_API_METADATA = 4,

  /**
   * @generated from enum value: KAFKA_API_LEADER_AND_ISR = 5;
   */
  KAFKA_API_LEADER_AND_ISR = 5,

  /**
   * @generated from enum value: KAFKA_API_STOP_REPLICA = 6;
   */
  KAFKA_API_STOP_REPLICA = 6,

  /**
   * @generated from enum value: KAFKA_API_UPDATE_METADATA = 7;
   */
  KAFKA_API_UPDATE_METADATA = 7,

  /**
   * @generated from enum value: KAFKA_API_CONTROLLED_SHUTDOWN = 8;
   */
  KAFKA_API_CONTROLLED_SHUTDOWN = 8,

  /**
   * @generated from enum value: KAFKA_API_OFFSET_COMMIT = 9;
   */
  KAFKA_API_OFFSET_COMMIT = 9,

  /**
   * @generated from enum value: KAFKA_API_OFFSET_FETCH = 10;
   */
  KAFKA_API_OFFSET_FETCH = 10,

  /**
   * @generated from enum value: KAFKA_API_GROUP_COORDINATOR = 11;
   */
  KAFKA_API_GROUP_COORDINATOR = 11,

  /**
   * @generated from enum value: KAFKA_API_JOIN_GROUP = 12;
   */
  KAFKA_API_JOIN_GROUP = 12,

  /**
   * @generated from enum value: KAFKA_API_HEARTBEAT = 13;
   */
  KAFKA_API_HEARTBEAT = 13,

  /**
   * @generated from enum value: KAFKA_API_LEAVE_GROUP = 14;
   */
  KAFKA_API_LEAVE_GROUP = 14,

  /**
   * @generated from enum value: KAFKA_API_SYNC_GROUP = 15;
   */
  KAFKA_API_SYNC_GROUP = 15,

  /**
   * @generated from enum value: KAFKA_API_DESCRIBE_GROUPS = 16;
   */
  KAFKA_API_DESCRIBE_GROUPS = 16,

  /**
   * @generated from enum value: KAFKA_API_LIST_GROUPS = 17;
   */
  KAFKA_API_LIST_GROUPS = 17,

  /**
   * @generated from enum value: KAFKA_API_SASL_HANDSHAKE = 18;
   */
  KAFKA_API_SASL_HANDSHAKE = 18,

  /**
   * @generated from enum value: KAFKA_API_API_VERSIONS = 19;
   */
  KAFKA_API_API_VERSIONS = 19,

  /**
   * @generated from enum value: KAFKA_API_CREATE_TOPICS = 20;
   */
  KAFKA_API_CREATE_TOPICS = 20,

  /**
   * @generated from enum value: KAFKA_API_DELETE_TOPICS = 21;
   */
  KAFKA_API_DELETE_TOPICS = 21,
}

/**
 * Describes the enum redpanda.api.dataplane.v1.KafkaAPI.
 */
export const KafkaAPISchema: GenEnum<KafkaAPI> = /*@__PURE__*/
  enumDesc(file_redpanda_api_dataplane_v1_monitoring, 0);

/**
 * @generated from service redpanda.api.dataplane.v1.MonitoringService
 */
export const MonitoringService: GenService<{
  /**
   * @generated from rpc redpanda.api.dataplane.v1.MonitoringService.ListConnections
   */
  listConnections: {
    methodKind: "unary";
    input: typeof ListConnectionsRequestSchema;
    output: typeof ListConnectionsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_api_dataplane_v1_monitoring, 0);


// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/dataplane/v1alpha2/pipeline.proto (package redpanda.api.dataplane.v1alpha2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_redpanda_api_auth_v1_authorization } from "../../auth/v1/authorization_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/dataplane/v1alpha2/pipeline.proto.
 */
export const file_redpanda_api_dataplane_v1alpha2_pipeline: GenFile = /*@__PURE__*/
  fileDesc("Ci5yZWRwYW5kYS9hcGkvZGF0YXBsYW5lL3YxYWxwaGEyL3BpcGVsaW5lLnByb3RvEh9yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyIrAICghQaXBlbGluZRIqCgJpZBgBIAEoCUIe4EECukgYyAEBchMyEV5bQS1aYS16MC05LV8vXSskEjoKDGRpc3BsYXlfbmFtZRgCIAEoCUIk4EECukgeyAEBchkQAxiAATISXltBLVphLXowLTktXyAvXSskEh0KC2Rlc2NyaXB0aW9uGAMgASgJQgi6SAVyAxiAAhL3AQoLY29uZmlnX3lhbWwYBCABKAlC4QGSQdQBMtEBVGhlIFJlcGFuZGEgQ29ubmVjdCBwaXBlbGluZSBjb25maWd1cmF0aW9uIGluIFlBTUwgZm9ybWF0LiBTZWUgdGhlIFtSZWRwYW5kYSBDb25uZWN0IENvbmZpZ3VyYXRpb25dKGh0dHBzOi8vZG9jcy5yZWRwYW5kYS5jb20vcmVkcGFuZGEtY2xvdWQvZGV2ZWxvcC9jb25uZWN0L2NvbmZpZ3VyYXRpb24vYWJvdXQpIGRvY3VtZW50YXRpb24gZm9yIG1vcmUgZGV0YWlscy7gQQK6SAPIAQES/gEKCXJlc291cmNlcxgJIAEoCzIzLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuUGlwZWxpbmUuUmVzb3VyY2VzQrUBkkGxATKuAVRoZSByZXF1ZXN0ZWQgYW1vdW50IG9mIHJlc291cmNlcyBmb3IgdGhlIHBpcGVsaW5lLiBEZXBlbmRpbmcgb24gdGhlIGJhY2tlbmQsIHRoZSByZXNvdXJjZXMgbWlnaHQgYmUgZ3VhcmFudGVlZCwgb3IgbWlnaHQgYmUgdHdlYWtlZCBiYXNlZCBvbiB0aGUgdXRpbGl6YXRpb24gb2YgdGhlIHBpcGVsaW5lLhJDCgVzdGF0ZRgHIAEoDjIvLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuUGlwZWxpbmUuU3RhdGVCA+BBAxJFCgZzdGF0dXMYCCABKAsyMC5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLlBpcGVsaW5lLlN0YXR1c0ID4EEDGkwKCVJlc291cmNlcxIgCg1tZW1vcnlfc2hhcmVzGAEgASgJQgngQQK6SAPIAQESHQoKY3B1X3NoYXJlcxgCIAEoCUIJ4EECukgDyAEBGhcKBlN0YXR1cxINCgVlcnJvchgCIAEoCSKSAQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABISCg5TVEFURV9TVEFSVElORxABEhEKDVNUQVRFX1JVTk5JTkcQAhISCg5TVEFURV9TVE9QUElORxADEhEKDVNUQVRFX1NUT1BQRUQQBBIPCgtTVEFURV9FUlJPUhAFEhMKD1NUQVRFX0NPTVBMRVRFRBAGSgQIBRAGSgQIBhAHUgdyZXF1ZXN0UgVsaW1pdCLvAQoOUGlwZWxpbmVDcmVhdGUSOgoMZGlzcGxheV9uYW1lGAEgASgJQiTgQQK6SB7IAQFyGRADGIABMhJeW0EtWmEtejAtOS1fIC9dKyQSHQoLZGVzY3JpcHRpb24YAiABKAlCCLpIBXIDGIACEh4KC2NvbmZpZ195YW1sGAMgASgJQgngQQK6SAPIAQESRgoJcmVzb3VyY2VzGAYgASgLMjMucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5QaXBlbGluZS5SZXNvdXJjZXNKBAgEEAVKBAgFEAZSB3JlcXVlc3RSBWxpbWl0IloKFUNyZWF0ZVBpcGVsaW5lUmVxdWVzdBJBCghwaXBlbGluZRgBIAEoCzIvLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuUGlwZWxpbmVDcmVhdGUiVQoWQ3JlYXRlUGlwZWxpbmVSZXNwb25zZRI7CghwaXBlbGluZRgBIAEoCzIpLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuUGlwZWxpbmUiQAoSR2V0UGlwZWxpbmVSZXF1ZXN0EioKAmlkGAEgASgJQh7gQQK6SBjIAQFyEzIRXltBLVphLXowLTktXy9dKyQiUgoTR2V0UGlwZWxpbmVSZXNwb25zZRI7CghwaXBlbGluZRgBIAEoCzIpLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuUGlwZWxpbmUi2QIKFExpc3RQaXBlbGluZXNSZXF1ZXN0EkwKBmZpbHRlchgBIAEoCzI8LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuTGlzdFBpcGVsaW5lc1JlcXVlc3QuRmlsdGVyEp8BCglwYWdlX3NpemUYAiABKAVCiwGSQXUyYUxpbWl0IHRoZSBwYWdpbmF0ZWQgcmVzcG9uc2UgdG8gYSBudW1iZXIgb2YgaXRlbXMuIERlZmF1bHRzIHRvIDEwMC4gVXNlIC0xIHRvIGRpc2FibGUgcGFnaW5hdGlvbi5ZAAAAAABAj0BpAAAAAAAA8L+6SBAaDhjoByj///////////8BEhIKCnBhZ2VfdG9rZW4YAyABKAkaPQoGRmlsdGVyEjMKDW5hbWVfY29udGFpbnMYASABKAlCHLpIGXIXGIABMhJeW0EtWmEtejAtOS1fIC9dKyQibgoVTGlzdFBpcGVsaW5lc1Jlc3BvbnNlEjwKCXBpcGVsaW5lcxgBIAMoCzIpLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuUGlwZWxpbmUSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIvIBCg5QaXBlbGluZVVwZGF0ZRI6CgxkaXNwbGF5X25hbWUYASABKAlCJOBBArpIHsgBAXIZEAMYgAEyEl5bQS1aYS16MC05LV8gL10rJBIgCgtkZXNjcmlwdGlvbhgCIAEoCUILukgI0AEBcgMYgAISHgoLY29uZmlnX3lhbWwYAyABKAlCCeBBArpIA8gBARJGCglyZXNvdXJjZXMYBiABKAsyMy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLlBpcGVsaW5lLlJlc291cmNlc0oECAQQBUoECAUQBlIHcmVxdWVzdFIFbGltaXQikQEKFVVwZGF0ZVBpcGVsaW5lUmVxdWVzdBIqCgJpZBgBIAEoCUIe4EECukgYyAEBchMyEV5bQS1aYS16MC05LV8vXSskEkwKCHBpcGVsaW5lGAIgASgLMi8ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5QaXBlbGluZVVwZGF0ZUIJ4EECukgDyAEBIlUKFlVwZGF0ZVBpcGVsaW5lUmVzcG9uc2USOwoIcGlwZWxpbmUYASABKAsyKS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLlBpcGVsaW5lIkMKFURlbGV0ZVBpcGVsaW5lUmVxdWVzdBIqCgJpZBgBIAEoCUIe4EECukgYyAEBchMyEV5bQS1aYS16MC05LV8vXSskIhgKFkRlbGV0ZVBpcGVsaW5lUmVzcG9uc2UiQQoTU3RvcFBpcGVsaW5lUmVxdWVzdBIqCgJpZBgBIAEoCUIe4EECukgYyAEBchMyEV5bQS1aYS16MC05LV8vXSskIlMKFFN0b3BQaXBlbGluZVJlc3BvbnNlEjsKCHBpcGVsaW5lGAEgASgLMikucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5QaXBlbGluZSJCChRTdGFydFBpcGVsaW5lUmVxdWVzdBIqCgJpZBgBIAEoCUIe4EECukgYyAEBchMyEV5bQS1aYS16MC05LV8vXSskIlQKFVN0YXJ0UGlwZWxpbmVSZXNwb25zZRI7CghwaXBlbGluZRgBIAEoCzIpLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuUGlwZWxpbmUiJwolR2V0UGlwZWxpbmVTZXJ2aWNlQ29uZmlnU2NoZW1hUmVxdWVzdCI/CiZHZXRQaXBlbGluZVNlcnZpY2VDb25maWdTY2hlbWFSZXNwb25zZRIVCg1jb25maWdfc2NoZW1hGAEgASgJImUKElBpcGVsaW5lc0ZvclNlY3JldBIRCglzZWNyZXRfaWQYASABKAkSPAoJcGlwZWxpbmVzGAIgAygLMikucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5QaXBlbGluZSJRChxHZXRQaXBlbGluZXNGb3JTZWNyZXRSZXF1ZXN0EjEKCXNlY3JldF9pZBgBIAEoCUIe4EECukgYyAEBchMyEV5bQS1aXVtBLVowLTlfXSokInIKHUdldFBpcGVsaW5lc0ZvclNlY3JldFJlc3BvbnNlElEKFHBpcGVsaW5lc19mb3Jfc2VjcmV0GAEgASgLMjMucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5QaXBlbGluZXNGb3JTZWNyZXQiHgocR2V0UGlwZWxpbmVzQnlTZWNyZXRzUmVxdWVzdCJyCh1HZXRQaXBlbGluZXNCeVNlY3JldHNSZXNwb25zZRJRChRwaXBlbGluZXNfZm9yX3NlY3JldBgBIAMoCzIzLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuUGlwZWxpbmVzRm9yU2VjcmV0MpEhCg9QaXBlbGluZVNlcnZpY2US1wIKDkNyZWF0ZVBpcGVsaW5lEjYucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5DcmVhdGVQaXBlbGluZVJlcXVlc3QaNy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLkNyZWF0ZVBpcGVsaW5lUmVzcG9uc2Ui0wGSQYcBEiBDcmVhdGUgUmVkcGFuZGEgQ29ubmVjdCBwaXBlbGluZRonQ3JlYXRlIGEgbmV3IFJlZHBhbmRhIENvbm5lY3QgcGlwZWxpbmUuSjoKAzIwMRIzCgJPSxItCisaKS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLlBpcGVsaW5liqYdBAgCEASC0+STAjo6CHBpcGVsaW5lYghwaXBlbGluZSIkL3YxYWxwaGEyL3JlZHBhbmRhLWNvbm5lY3QvcGlwZWxpbmVzEvQCCgtHZXRQaXBlbGluZRIzLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuR2V0UGlwZWxpbmVSZXF1ZXN0GjQucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5HZXRQaXBlbGluZVJlc3BvbnNlIvkBkkGyARIdR2V0IFJlZHBhbmRhIENvbm5lY3QgcGlwZWxpbmUaKUdldCBhIHNwZWNpZmljIFJlZHBhbmRhIENvbm5lY3QgcGlwZWxpbmUuSjoKAzIwMBIzCgJPSxItCisaKS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLlBpcGVsaW5lSioKAzQwNBIjCglOb3QgRm91bmQSFgoUGhIuZ29vZ2xlLnJwYy5TdGF0dXOKph0ECAEQBILT5JMCNWIIcGlwZWxpbmUSKS92MWFscGhhMi9yZWRwYW5kYS1jb25uZWN0L3BpcGVsaW5lcy97aWR9Eu4CCg1MaXN0UGlwZWxpbmVzEjUucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5MaXN0UGlwZWxpbmVzUmVxdWVzdBo2LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuTGlzdFBpcGVsaW5lc1Jlc3BvbnNlIu0BkkG1ARIfTGlzdCBSZWRwYW5kYSBDb25uZWN0IHBpcGVsaW5lcxpJTGlzdCBSZWRwYW5kYSBDb25uZWN0IHBpcGVsaW5lcy4gT3B0aW9uYWw6IGZpbHRlciBiYXNlZCBvbiBwaXBlbGluZSBuYW1lLkpHCgMyMDASQAoCT0sSOgo4GjYucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5MaXN0UGlwZWxpbmVzUmVzcG9uc2WKph0ECAEQBILT5JMCJhIkL3YxYWxwaGEyL3JlZHBhbmRhLWNvbm5lY3QvcGlwZWxpbmVzEsADCg5VcGRhdGVQaXBlbGluZRI2LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuVXBkYXRlUGlwZWxpbmVSZXF1ZXN0GjcucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5VcGRhdGVQaXBlbGluZVJlc3BvbnNlIrwCkkHrARIiVXBkYXRlIGEgUmVkcGFuZGEgQ29ubmVjdCBwaXBlbGluZRqIAVVwZGF0ZSB0aGUgW2NvbmZpZ3VyYXRpb25dKGh0dHBzOi8vZG9jcy5yZWRwYW5kYS5jb20vcmVkcGFuZGEtY2xvdWQvZGV2ZWxvcC9jb25uZWN0L2NvbmZpZ3VyYXRpb24vYWJvdXQpIG9mIGEgUmVkcGFuZGEgQ29ubmVjdCBwaXBlbGluZS5KOgoDMjAwEjMKAk9LEi0KKxopLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuUGlwZWxpbmWKph0ECAIQBILT5JMCPzoIcGlwZWxpbmViCHBpcGVsaW5lGikvdjFhbHBoYTIvcmVkcGFuZGEtY29ubmVjdC9waXBlbGluZXMve2lkfRLKAgoORGVsZXRlUGlwZWxpbmUSNi5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLkRlbGV0ZVBpcGVsaW5lUmVxdWVzdBo3LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuRGVsZXRlUGlwZWxpbmVSZXNwb25zZSLGAZJBiQESIkRlbGV0ZSBhIFJlZHBhbmRhIENvbm5lY3QgcGlwZWxpbmUaI0RlbGV0ZSBhIFJlZHBhbmRhIENvbm5lY3QgcGlwZWxpbmUuShIKAzIwNBILCgdEZWxldGVkEgBKKgoDNDA0EiMKCU5vdCBGb3VuZBIWChQaEi5nb29nbGUucnBjLlN0YXR1c4qmHQQIAhAEgtPkkwIrKikvdjFhbHBoYTIvcmVkcGFuZGEtY29ubmVjdC9waXBlbGluZXMve2lkfRKFAwoMU3RvcFBpcGVsaW5lEjQucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5TdG9wUGlwZWxpbmVSZXF1ZXN0GjUucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5TdG9wUGlwZWxpbmVSZXNwb25zZSKHApJBuwESIVN0b3BzIGEgUmVkcGFuZGEgQ29ubmVjdCBwaXBlbGluZRopU3RvcCBhIHJ1bm5pbmcgUmVkcGFuZGEgQ29ubmVjdCBwaXBlbGluZS5KPwoDMjAwEjgKB1N0b3BwZWQSLQorGikucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5QaXBlbGluZUoqCgM0MDQSIwoJTm90IEZvdW5kEhYKFBoSLmdvb2dsZS5ycGMuU3RhdHVziqYdBAgCEASC0+STAjpiCHBpcGVsaW5lGi4vdjFhbHBoYTIvcmVkcGFuZGEtY29ubmVjdC9waXBlbGluZXMve2lkfS9zdG9wEooDCg1TdGFydFBpcGVsaW5lEjUucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5TdGFydFBpcGVsaW5lUmVxdWVzdBo2LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTIuU3RhcnRQaXBlbGluZVJlc3BvbnNlIokCkkG8ARIhU3RhcnQgYSBSZWRwYW5kYSBDb25uZWN0IHBpcGVsaW5lGipTdGFydCBhIHN0b3BwZWQgUmVkcGFuZGEgQ29ubmVjdCBwaXBlbGluZS5KPwoDMjAwEjgKB1N0YXJ0ZWQSLQorGikucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5QaXBlbGluZUoqCgM0MDQSIwoJTm90IEZvdW5kEhYKFBoSLmdvb2dsZS5ycGMuU3RhdHVziqYdBAgCEASC0+STAjtiCHBpcGVsaW5lGi8vdjFhbHBoYTIvcmVkcGFuZGEtY29ubmVjdC9waXBlbGluZXMve2lkfS9zdGFydBLIBAoeR2V0UGlwZWxpbmVTZXJ2aWNlQ29uZmlnU2NoZW1hEkYucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5HZXRQaXBlbGluZVNlcnZpY2VDb25maWdTY2hlbWFSZXF1ZXN0GkcucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5HZXRQaXBlbGluZVNlcnZpY2VDb25maWdTY2hlbWFSZXNwb25zZSKUA5JB1QISQVJldHJpZXZlIHRoZSBzY2hlbWEgZm9yIFJlZHBhbmRhIENvbm5lY3QgcGlwZWxpbmUgY29uZmlndXJhdGlvbnMuGrUBVGhlIGNvbmZpZ3VyYXRpb24gc2NoZW1hIGluY2x1ZGVzIGF2YWlsYWJsZSBbY29tcG9uZW50cyBhbmQgcHJvY2Vzc29yc10oaHR0cHM6Ly9kb2NzLnJlZHBhbmRhLmNvbS9yZWRwYW5kYS1jbG91ZC9kZXZlbG9wL2Nvbm5lY3QvY29tcG9uZW50cy9hYm91dCkgaW4gdGhpcyBSZWRwYW5kYSBDb25uZWN0IGluc3RhbmNlLkpYCgMyMDASUQoCT0sSSwpJGkcucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5HZXRQaXBlbGluZVNlcnZpY2VDb25maWdTY2hlbWFSZXNwb25zZYqmHQQIARAEgtPkkwItYgEqEigvdjFhbHBoYTIvcmVkcGFuZGEtY29ubmVjdC9jb25maWctc2NoZW1hEowDChVHZXRQaXBlbGluZXNGb3JTZWNyZXQSPS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLkdldFBpcGVsaW5lc0ZvclNlY3JldFJlcXVlc3QaPi5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLkdldFBpcGVsaW5lc0ZvclNlY3JldFJlc3BvbnNlIvMBkkGwARIpR2V0IFJlZHBhbmRhIENvbm5lY3QgcGlwZWxpbmVzIGZvciBzZWNyZXQaMkdldCBSZWRwYW5kYSBDb25uZWN0IHBpcGVsaW5lcyBmb3IgYSBnaXZlbiBzZWNyZXQuSk8KAzIwMBJICgJPSxJCCkAaPi5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLkdldFBpcGVsaW5lc0ZvclNlY3JldFJlc3BvbnNliqYdBAgBEASC0+STAjESLy92MWFscGhhMi9yZWRwYW5kYS1jb25uZWN0L3BpcGVsaW5lcy1mb3Itc2VjcmV0EoQDChVHZXRQaXBlbGluZXNCeVNlY3JldHMSPS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLkdldFBpcGVsaW5lc0J5U2VjcmV0c1JlcXVlc3QaPi5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyLkdldFBpcGVsaW5lc0J5U2VjcmV0c1Jlc3BvbnNlIusBkkGoARIpR2V0IFJlZHBhbmRhIENvbm5lY3QgcGlwZWxpbmVzIGJ5IHNlY3JldHMaKkdldCBSZWRwYW5kYSBDb25uZWN0IHBpcGVsaW5lcyBieSBzZWNyZXRzLkpPCgMyMDASSAoCT0sSQgpAGj4ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMi5HZXRQaXBlbGluZXNCeVNlY3JldHNSZXNwb25zZYqmHQQIARAEgtPkkwIxEi8vdjFhbHBoYTIvcmVkcGFuZGEtY29ubmVjdC9waXBlbGluZXMtYnktc2VjcmV0cxq1AZJBsQEKJFJlZHBhbmRhIENvbm5lY3QgUGlwZWxpbmUgKHYxYWxwaGEyKRKIAUNyZWF0ZSBhbmQgbWFuYWdlIFtSZWRwYW5kYSBDb25uZWN0XShodHRwczovL2RvY3MucmVkcGFuZGEuY29tL3JlZHBhbmRhLWNsb3VkL2RldmVsb3AvY29ubmVjdC9hYm91dCkgcGlwZWxpbmVzIGFuZCB0aGVpciBjb25maWd1cmF0aW9ucy5CvAIKI2NvbS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGEyQg1QaXBlbGluZVByb3RvUAFaZ2dpdGh1Yi5jb20vcmVkcGFuZGEtZGF0YS9jb25zb2xlL2JhY2tlbmQvcGtnL3Byb3RvZ2VuL3JlZHBhbmRhL2FwaS9kYXRhcGxhbmUvdjFhbHBoYTI7ZGF0YXBsYW5ldjFhbHBoYTKiAgNSQUSqAh9SZWRwYW5kYS5BcGkuRGF0YXBsYW5lLlYxYWxwaGEyygIfUmVkcGFuZGFcQXBpXERhdGFwbGFuZVxWMWFscGhhMuICK1JlZHBhbmRhXEFwaVxEYXRhcGxhbmVcVjFhbHBoYTJcR1BCTWV0YWRhdGHqAiJSZWRwYW5kYTo6QXBpOjpEYXRhcGxhbmU6OlYxYWxwaGEyYgZwcm90bzM", [file_buf_validate_validate, file_google_api_annotations, file_google_api_field_behavior, file_protoc_gen_openapiv2_options_annotations, file_redpanda_api_auth_v1_authorization]);

/**
 * Defines the pipeline resource.
 *
 * @generated from message redpanda.api.dataplane.v1alpha2.Pipeline
 */
export type Pipeline = Message<"redpanda.api.dataplane.v1alpha2.Pipeline"> & {
  /**
   * Pipeline ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * User-friendly pipeline name.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * Optional pipeline description.
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * The pipeline configuration in YAML.
   * See https://docs.redpanda.com/redpanda-connect/configuration/about/
   *
   * @generated from field: string config_yaml = 4;
   */
  configYaml: string;

  /**
   * The number of resources that are guaranteed to be assigned to the pipeline.
   *
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline.Resources resources = 9;
   */
  resources?: Pipeline_Resources;

  /**
   * The current pipeline state.
   *
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline.State state = 7;
   */
  state: Pipeline_State;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline.Status status = 8;
   */
  status?: Pipeline_Status;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.Pipeline.
 * Use `create(PipelineSchema)` to create a new message.
 */
export const PipelineSchema: GenMessage<Pipeline> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.Pipeline.Resources
 */
export type Pipeline_Resources = Message<"redpanda.api.dataplane.v1alpha2.Pipeline.Resources"> & {
  /**
   * `memory_shares` is a string specifying the amount of memory to allocate for
   * the pipeline.
   *
   * This follows the [Kubernetes quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/) format. Acceptable units
   * include:
   * - Decimal SI units: "K", "M", "G", "T", "P", "E" (e.g., "128M" for 128
   *   megabytes)
   * - Binary SI units: "Ki", "Mi", "Gi", "Ti", "Pi", "Ei" (e.g., "512Mi" for
   * 512 mebibytes) If you don't specify a unit, the value is interpreted as
   * bytes.
   *
   * @generated from field: string memory_shares = 1;
   */
  memoryShares: string;

  /**
   * `cpu_shares` is a string specifying the amount of CPU to allocate for the
   * pipeline.
   *
   * This follows the [Kubernetes quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/) format. Acceptable
   * units include:
   * - Decimal SI units: "m" (e.g., "500m" for 500 millicores, "2" for 2 cores)
   * CPU shares can be specified in millicores (1 core = 1000 millicores).
   * If you don't specify a unit, the value is interpreted as the number of cores.
   *
   * @generated from field: string cpu_shares = 2;
   */
  cpuShares: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.Pipeline.Resources.
 * Use `create(Pipeline_ResourcesSchema)` to create a new message.
 */
export const Pipeline_ResourcesSchema: GenMessage<Pipeline_Resources> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 0, 0);

/**
 * Pipeline status may contain an error message.
 *
 * @generated from message redpanda.api.dataplane.v1alpha2.Pipeline.Status
 */
export type Pipeline_Status = Message<"redpanda.api.dataplane.v1alpha2.Pipeline.Status"> & {
  /**
   * @generated from field: string error = 2;
   */
  error: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.Pipeline.Status.
 * Use `create(Pipeline_StatusSchema)` to create a new message.
 */
export const Pipeline_StatusSchema: GenMessage<Pipeline_Status> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 0, 1);

/**
 * State of the pipeline.
 *
 * @generated from enum redpanda.api.dataplane.v1alpha2.Pipeline.State
 */
export enum Pipeline_State {
  /**
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * The pipeline is starting.
   *
   * @generated from enum value: STATE_STARTING = 1;
   */
  STARTING = 1,

  /**
   * The pipeline is running.
   *
   * @generated from enum value: STATE_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * The pipeline is in the process of stopping.
   *
   * @generated from enum value: STATE_STOPPING = 3;
   */
  STOPPING = 3,

  /**
   * The pipeline is stopped and in paused state.
   *
   * @generated from enum value: STATE_STOPPED = 4;
   */
  STOPPED = 4,

  /**
   * The pipeline encountered an error. See [Error Handling](https://docs.redpanda.com/redpanda-cloud/develop/connect/configuration/error_handling/) for further guidance.
   *
   * @generated from enum value: STATE_ERROR = 5;
   */
  ERROR = 5,

  /**
   * The pipeline has completed the job successfully.
   *
   * @generated from enum value: STATE_COMPLETED = 6;
   */
  COMPLETED = 6,
}

/**
 * Describes the enum redpanda.api.dataplane.v1alpha2.Pipeline.State.
 */
export const Pipeline_StateSchema: GenEnum<Pipeline_State> = /*@__PURE__*/
  enumDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 0, 0);

/**
 * PipelineCreate contains the details for the pipeline creation request.
 *
 * @generated from message redpanda.api.dataplane.v1alpha2.PipelineCreate
 */
export type PipelineCreate = Message<"redpanda.api.dataplane.v1alpha2.PipelineCreate"> & {
  /**
   * User-friendly pipeline name.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * Pipeline description.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The Repanda Connect pipeline configuration in YAML format. See the [Redpanda Connect Configuration](https://docs.redpanda.com/redpanda-cloud/develop/connect/configuration/about) documentation for more details.
   *
   * @generated from field: string config_yaml = 3;
   */
  configYaml: string;

  /**
   * The number of resources that are guaranteed to be assigned to the pipeline.
   *
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline.Resources resources = 6;
   */
  resources?: Pipeline_Resources;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.PipelineCreate.
 * Use `create(PipelineCreateSchema)` to create a new message.
 */
export const PipelineCreateSchema: GenMessage<PipelineCreate> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 1);

/**
 * CreatePipelineRequest is the request of CreatePipeline.
 *
 * @generated from message redpanda.api.dataplane.v1alpha2.CreatePipelineRequest
 */
export type CreatePipelineRequest = Message<"redpanda.api.dataplane.v1alpha2.CreatePipelineRequest"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha2.PipelineCreate pipeline = 1;
   */
  pipeline?: PipelineCreate;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.CreatePipelineRequest.
 * Use `create(CreatePipelineRequestSchema)` to create a new message.
 */
export const CreatePipelineRequestSchema: GenMessage<CreatePipelineRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 2);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.CreatePipelineResponse
 */
export type CreatePipelineResponse = Message<"redpanda.api.dataplane.v1alpha2.CreatePipelineResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline pipeline = 1;
   */
  pipeline?: Pipeline;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.CreatePipelineResponse.
 * Use `create(CreatePipelineResponseSchema)` to create a new message.
 */
export const CreatePipelineResponseSchema: GenMessage<CreatePipelineResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 3);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.GetPipelineRequest
 */
export type GetPipelineRequest = Message<"redpanda.api.dataplane.v1alpha2.GetPipelineRequest"> & {
  /**
   * Pipeline ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.GetPipelineRequest.
 * Use `create(GetPipelineRequestSchema)` to create a new message.
 */
export const GetPipelineRequestSchema: GenMessage<GetPipelineRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 4);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.GetPipelineResponse
 */
export type GetPipelineResponse = Message<"redpanda.api.dataplane.v1alpha2.GetPipelineResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline pipeline = 1;
   */
  pipeline?: Pipeline;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.GetPipelineResponse.
 * Use `create(GetPipelineResponseSchema)` to create a new message.
 */
export const GetPipelineResponseSchema: GenMessage<GetPipelineResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 5);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.ListPipelinesRequest
 */
export type ListPipelinesRequest = Message<"redpanda.api.dataplane.v1alpha2.ListPipelinesRequest"> & {
  /**
   * List filter.
   *
   * @generated from field: redpanda.api.dataplane.v1alpha2.ListPipelinesRequest.Filter filter = 1;
   */
  filter?: ListPipelinesRequest_Filter;

  /**
   * Limit the paginated response to a number of items.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Value of the next_page_token field returned by the previous response.
   * If not provided, the system assumes the first page is requested.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.ListPipelinesRequest.
 * Use `create(ListPipelinesRequestSchema)` to create a new message.
 */
export const ListPipelinesRequestSchema: GenMessage<ListPipelinesRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 6);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.ListPipelinesRequest.Filter
 */
export type ListPipelinesRequest_Filter = Message<"redpanda.api.dataplane.v1alpha2.ListPipelinesRequest.Filter"> & {
  /**
   * Substring match on pipeline name. Case-sensitive.
   *
   * @generated from field: string name_contains = 1;
   */
  nameContains: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.ListPipelinesRequest.Filter.
 * Use `create(ListPipelinesRequest_FilterSchema)` to create a new message.
 */
export const ListPipelinesRequest_FilterSchema: GenMessage<ListPipelinesRequest_Filter> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 6, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.ListPipelinesResponse
 */
export type ListPipelinesResponse = Message<"redpanda.api.dataplane.v1alpha2.ListPipelinesResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.dataplane.v1alpha2.Pipeline pipelines = 1;
   */
  pipelines: Pipeline[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.ListPipelinesResponse.
 * Use `create(ListPipelinesResponseSchema)` to create a new message.
 */
export const ListPipelinesResponseSchema: GenMessage<ListPipelinesResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 7);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.PipelineUpdate
 */
export type PipelineUpdate = Message<"redpanda.api.dataplane.v1alpha2.PipelineUpdate"> & {
  /**
   * User-friendly pipeline name.
   *
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * Pipeline description.
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * The Repanda Connect pipeline configuration in YAML format. See the [Redpanda Connect Configuration](https://docs.redpanda.com/redpanda-cloud/develop/connect/configuration/about) documentation for more details.
   *
   * @generated from field: string config_yaml = 3;
   */
  configYaml: string;

  /**
   * The number of resources that are guaranteed to be assigned to the pipeline.
   *
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline.Resources resources = 6;
   */
  resources?: Pipeline_Resources;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.PipelineUpdate.
 * Use `create(PipelineUpdateSchema)` to create a new message.
 */
export const PipelineUpdateSchema: GenMessage<PipelineUpdate> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 8);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.UpdatePipelineRequest
 */
export type UpdatePipelineRequest = Message<"redpanda.api.dataplane.v1alpha2.UpdatePipelineRequest"> & {
  /**
   * Pipeline ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: redpanda.api.dataplane.v1alpha2.PipelineUpdate pipeline = 2;
   */
  pipeline?: PipelineUpdate;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.UpdatePipelineRequest.
 * Use `create(UpdatePipelineRequestSchema)` to create a new message.
 */
export const UpdatePipelineRequestSchema: GenMessage<UpdatePipelineRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 9);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.UpdatePipelineResponse
 */
export type UpdatePipelineResponse = Message<"redpanda.api.dataplane.v1alpha2.UpdatePipelineResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline pipeline = 1;
   */
  pipeline?: Pipeline;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.UpdatePipelineResponse.
 * Use `create(UpdatePipelineResponseSchema)` to create a new message.
 */
export const UpdatePipelineResponseSchema: GenMessage<UpdatePipelineResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 10);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.DeletePipelineRequest
 */
export type DeletePipelineRequest = Message<"redpanda.api.dataplane.v1alpha2.DeletePipelineRequest"> & {
  /**
   * Pipeline ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.DeletePipelineRequest.
 * Use `create(DeletePipelineRequestSchema)` to create a new message.
 */
export const DeletePipelineRequestSchema: GenMessage<DeletePipelineRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 11);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.DeletePipelineResponse
 */
export type DeletePipelineResponse = Message<"redpanda.api.dataplane.v1alpha2.DeletePipelineResponse"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.DeletePipelineResponse.
 * Use `create(DeletePipelineResponseSchema)` to create a new message.
 */
export const DeletePipelineResponseSchema: GenMessage<DeletePipelineResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 12);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.StopPipelineRequest
 */
export type StopPipelineRequest = Message<"redpanda.api.dataplane.v1alpha2.StopPipelineRequest"> & {
  /**
   * Pipeline ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.StopPipelineRequest.
 * Use `create(StopPipelineRequestSchema)` to create a new message.
 */
export const StopPipelineRequestSchema: GenMessage<StopPipelineRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 13);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.StopPipelineResponse
 */
export type StopPipelineResponse = Message<"redpanda.api.dataplane.v1alpha2.StopPipelineResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline pipeline = 1;
   */
  pipeline?: Pipeline;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.StopPipelineResponse.
 * Use `create(StopPipelineResponseSchema)` to create a new message.
 */
export const StopPipelineResponseSchema: GenMessage<StopPipelineResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 14);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.StartPipelineRequest
 */
export type StartPipelineRequest = Message<"redpanda.api.dataplane.v1alpha2.StartPipelineRequest"> & {
  /**
   * Pipeline ID.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.StartPipelineRequest.
 * Use `create(StartPipelineRequestSchema)` to create a new message.
 */
export const StartPipelineRequestSchema: GenMessage<StartPipelineRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 15);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.StartPipelineResponse
 */
export type StartPipelineResponse = Message<"redpanda.api.dataplane.v1alpha2.StartPipelineResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha2.Pipeline pipeline = 1;
   */
  pipeline?: Pipeline;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.StartPipelineResponse.
 * Use `create(StartPipelineResponseSchema)` to create a new message.
 */
export const StartPipelineResponseSchema: GenMessage<StartPipelineResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 16);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.GetPipelineServiceConfigSchemaRequest
 */
export type GetPipelineServiceConfigSchemaRequest = Message<"redpanda.api.dataplane.v1alpha2.GetPipelineServiceConfigSchemaRequest"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.GetPipelineServiceConfigSchemaRequest.
 * Use `create(GetPipelineServiceConfigSchemaRequestSchema)` to create a new message.
 */
export const GetPipelineServiceConfigSchemaRequestSchema: GenMessage<GetPipelineServiceConfigSchemaRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 17);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.GetPipelineServiceConfigSchemaResponse
 */
export type GetPipelineServiceConfigSchemaResponse = Message<"redpanda.api.dataplane.v1alpha2.GetPipelineServiceConfigSchemaResponse"> & {
  /**
   * JSON schema of the configuration components that are allowed for Connect pipelines.
   *
   * @generated from field: string config_schema = 1;
   */
  configSchema: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.GetPipelineServiceConfigSchemaResponse.
 * Use `create(GetPipelineServiceConfigSchemaResponseSchema)` to create a new message.
 */
export const GetPipelineServiceConfigSchemaResponseSchema: GenMessage<GetPipelineServiceConfigSchemaResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 18);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.PipelinesForSecret
 */
export type PipelinesForSecret = Message<"redpanda.api.dataplane.v1alpha2.PipelinesForSecret"> & {
  /**
   * @generated from field: string secret_id = 1;
   */
  secretId: string;

  /**
   * @generated from field: repeated redpanda.api.dataplane.v1alpha2.Pipeline pipelines = 2;
   */
  pipelines: Pipeline[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.PipelinesForSecret.
 * Use `create(PipelinesForSecretSchema)` to create a new message.
 */
export const PipelinesForSecretSchema: GenMessage<PipelinesForSecret> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 19);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.GetPipelinesForSecretRequest
 */
export type GetPipelinesForSecretRequest = Message<"redpanda.api.dataplane.v1alpha2.GetPipelinesForSecretRequest"> & {
  /**
   * Secret ID.
   *
   * @generated from field: string secret_id = 1;
   */
  secretId: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.GetPipelinesForSecretRequest.
 * Use `create(GetPipelinesForSecretRequestSchema)` to create a new message.
 */
export const GetPipelinesForSecretRequestSchema: GenMessage<GetPipelinesForSecretRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 20);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.GetPipelinesForSecretResponse
 */
export type GetPipelinesForSecretResponse = Message<"redpanda.api.dataplane.v1alpha2.GetPipelinesForSecretResponse"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha2.PipelinesForSecret pipelines_for_secret = 1;
   */
  pipelinesForSecret?: PipelinesForSecret;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.GetPipelinesForSecretResponse.
 * Use `create(GetPipelinesForSecretResponseSchema)` to create a new message.
 */
export const GetPipelinesForSecretResponseSchema: GenMessage<GetPipelinesForSecretResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 21);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.GetPipelinesBySecretsRequest
 */
export type GetPipelinesBySecretsRequest = Message<"redpanda.api.dataplane.v1alpha2.GetPipelinesBySecretsRequest"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.GetPipelinesBySecretsRequest.
 * Use `create(GetPipelinesBySecretsRequestSchema)` to create a new message.
 */
export const GetPipelinesBySecretsRequestSchema: GenMessage<GetPipelinesBySecretsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 22);

/**
 * @generated from message redpanda.api.dataplane.v1alpha2.GetPipelinesBySecretsResponse
 */
export type GetPipelinesBySecretsResponse = Message<"redpanda.api.dataplane.v1alpha2.GetPipelinesBySecretsResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.dataplane.v1alpha2.PipelinesForSecret pipelines_for_secret = 1;
   */
  pipelinesForSecret: PipelinesForSecret[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha2.GetPipelinesBySecretsResponse.
 * Use `create(GetPipelinesBySecretsResponseSchema)` to create a new message.
 */
export const GetPipelinesBySecretsResponseSchema: GenMessage<GetPipelinesBySecretsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 23);

/**
 * PipelineService is the service for Redpanda Connect.
 * It exposes the API for creating and managing Redpanda Connect pipelines and their configurations.
 *
 * @generated from service redpanda.api.dataplane.v1alpha2.PipelineService
 */
export const PipelineService: GenService<{
  /**
   * CreatePipeline creates a Redpanda Connect pipeline in the Redpanda cluster.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.CreatePipeline
   */
  createPipeline: {
    methodKind: "unary";
    input: typeof CreatePipelineRequestSchema;
    output: typeof CreatePipelineResponseSchema;
  },
  /**
   * GetPipeline gets a specific Redpanda Connect pipeline.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.GetPipeline
   */
  getPipeline: {
    methodKind: "unary";
    input: typeof GetPipelineRequestSchema;
    output: typeof GetPipelineResponseSchema;
  },
  /**
   * ListPipelines implements the list pipelines method which lists the pipelines
   * in the Redpanda cluster.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.ListPipelines
   */
  listPipelines: {
    methodKind: "unary";
    input: typeof ListPipelinesRequestSchema;
    output: typeof ListPipelinesResponseSchema;
  },
  /**
   * UpdatePipeline updates a specific Redpanda Connect pipeline configuration.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.UpdatePipeline
   */
  updatePipeline: {
    methodKind: "unary";
    input: typeof UpdatePipelineRequestSchema;
    output: typeof UpdatePipelineResponseSchema;
  },
  /**
   * DeletePipeline deletes a specific Redpanda Connect pipeline.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.DeletePipeline
   */
  deletePipeline: {
    methodKind: "unary";
    input: typeof DeletePipelineRequestSchema;
    output: typeof DeletePipelineResponseSchema;
  },
  /**
   * StopPipeline stops a specific Redpanda Connect pipeline.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.StopPipeline
   */
  stopPipeline: {
    methodKind: "unary";
    input: typeof StopPipelineRequestSchema;
    output: typeof StopPipelineResponseSchema;
  },
  /**
   * StartPipeline starts a specific Redpanda Connect pipeline that has been previously stopped.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.StartPipeline
   */
  startPipeline: {
    methodKind: "unary";
    input: typeof StartPipelineRequestSchema;
    output: typeof StartPipelineResponseSchema;
  },
  /**
   * The configuration schema includes available [components and processors](https://docs.redpanda.com/redpanda-cloud/develop/connect/components/about) in this Redpanda Connect instance.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.GetPipelineServiceConfigSchema
   */
  getPipelineServiceConfigSchema: {
    methodKind: "unary";
    input: typeof GetPipelineServiceConfigSchemaRequestSchema;
    output: typeof GetPipelineServiceConfigSchemaResponseSchema;
  },
  /**
   * GetPipelinesForSecret implements the get pipelines for secret method which lists the pipelines
   * in the Redpanda cluster for the given secret.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.GetPipelinesForSecret
   */
  getPipelinesForSecret: {
    methodKind: "unary";
    input: typeof GetPipelinesForSecretRequestSchema;
    output: typeof GetPipelinesForSecretResponseSchema;
  },
  /**
   * GetPipelinesBySecrets implements the get pipelines by secrets method which lists the pipelines
   * in the Redpanda cluster for all secrets.
   *
   * @generated from rpc redpanda.api.dataplane.v1alpha2.PipelineService.GetPipelinesBySecrets
   */
  getPipelinesBySecrets: {
    methodKind: "unary";
    input: typeof GetPipelinesBySecretsRequestSchema;
    output: typeof GetPipelinesBySecretsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_api_dataplane_v1alpha2_pipeline, 0);


// @generated by protoc-gen-connect-query v1.4.0 with parameter "target=ts,import_extension=,js_import_style=legacy_commonjs"
// @generated from file redpanda/api/dataplane/v1alpha2/secret.proto (package redpanda.api.dataplane.v1alpha2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { CreateConnectSecretRequest, CreateConnectSecretResponse, CreateSecretRequest, CreateSecretResponse, DeleteConnectSecretRequest, DeleteConnectSecretResponse, DeleteSecretRequest, DeleteSecretResponse, GetConnectSecretRequest, GetConnectSecretResponse, GetSecretRequest, GetSecretResponse, ListConnectSecretsRequest, ListConnectSecretsResponse, ListSecretScopesRequest, ListSecretScopesResponse, ListSecretsRequest, ListSecretsResponse, UpdateConnectSecretRequest, UpdateConnectSecretResponse, UpdateSecretRequest, UpdateSecretResponse } from "./secret_pb";

/**
 * GetSecret retrieves the specific secret.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.GetSecret
 */
export const getSecret = {
  localName: "getSecret",
  name: "GetSecret",
  kind: MethodKind.Unary,
  I: GetSecretRequest,
  O: GetSecretResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * ListSecrets lists the secrets based on optional filter.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.ListSecrets
 */
export const listSecrets = {
  localName: "listSecrets",
  name: "ListSecrets",
  kind: MethodKind.Unary,
  I: ListSecretsRequest,
  O: ListSecretsResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * CreateSecret creates the secret.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.CreateSecret
 */
export const createSecret = {
  localName: "createSecret",
  name: "CreateSecret",
  kind: MethodKind.Unary,
  I: CreateSecretRequest,
  O: CreateSecretResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * UpdateSecret updates the secret.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.UpdateSecret
 */
export const updateSecret = {
  localName: "updateSecret",
  name: "UpdateSecret",
  kind: MethodKind.Unary,
  I: UpdateSecretRequest,
  O: UpdateSecretResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * DeleteSecret deletes the secret.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.DeleteSecret
 */
export const deleteSecret = {
  localName: "deleteSecret",
  name: "DeleteSecret",
  kind: MethodKind.Unary,
  I: DeleteSecretRequest,
  O: DeleteSecretResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * ListSecretScopes lists the supported secret scopes.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.ListSecretScopes
 */
export const listSecretScopes = {
  localName: "listSecretScopes",
  name: "ListSecretScopes",
  kind: MethodKind.Unary,
  I: ListSecretScopesRequest,
  O: ListSecretScopesResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * GetConnectSecret retrieves the specific secret for a specific Connect.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.GetConnectSecret
 */
export const getConnectSecret = {
  localName: "getConnectSecret",
  name: "GetConnectSecret",
  kind: MethodKind.Unary,
  I: GetConnectSecretRequest,
  O: GetConnectSecretResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * ListConnectSecrets lists the Connect secrets based on optional filter.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.ListConnectSecrets
 */
export const listConnectSecrets = {
  localName: "listConnectSecrets",
  name: "ListConnectSecrets",
  kind: MethodKind.Unary,
  I: ListConnectSecretsRequest,
  O: ListConnectSecretsResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * CreateConnectSecret creates the secret for a Connect.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.CreateConnectSecret
 */
export const createConnectSecret = {
  localName: "createConnectSecret",
  name: "CreateConnectSecret",
  kind: MethodKind.Unary,
  I: CreateConnectSecretRequest,
  O: CreateConnectSecretResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * UpdateConnectSecret updates the Connect secret.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.UpdateConnectSecret
 */
export const updateConnectSecret = {
  localName: "updateConnectSecret",
  name: "UpdateConnectSecret",
  kind: MethodKind.Unary,
  I: UpdateConnectSecretRequest,
  O: UpdateConnectSecretResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

/**
 * DeleteSecret deletes the secret.
 *
 * @generated from rpc redpanda.api.dataplane.v1alpha2.SecretService.DeleteConnectSecret
 */
export const deleteConnectSecret = {
  localName: "deleteConnectSecret",
  name: "DeleteConnectSecret",
  kind: MethodKind.Unary,
  I: DeleteConnectSecretRequest,
  O: DeleteConnectSecretResponse,
  service: {
    typeName: "redpanda.api.dataplane.v1alpha2.SecretService"
  }
} as const;

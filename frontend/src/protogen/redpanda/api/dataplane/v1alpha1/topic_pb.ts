// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/dataplane/v1alpha1/topic.proto (package redpanda.api.dataplane.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_redpanda_api_auth_v1_authorization } from "../../auth/v1/authorization_pb";
import type { ConfigAlterOperation, ConfigSource, ConfigSynonym, ConfigType } from "./common_pb";
import { file_redpanda_api_dataplane_v1alpha1_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/dataplane/v1alpha1/topic.proto.
 */
export const file_redpanda_api_dataplane_v1alpha1_topic: GenFile = /*@__PURE__*/
  fileDesc("CityZWRwYW5kYS9hcGkvZGF0YXBsYW5lL3YxYWxwaGExL3RvcGljLnByb3RvEh9yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExItwCCgVUb3BpYxrSAgoNQ29uZmlndXJhdGlvbhIMCgRuYW1lGAEgASgJEjkKBHR5cGUYAiABKA4yKy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLkNvbmZpZ1R5cGUSEgoFdmFsdWUYAyABKAlIAIgBARI9CgZzb3VyY2UYBCABKA4yLS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLkNvbmZpZ1NvdXJjZRIRCglyZWFkX29ubHkYBSABKAgSEQoJc2Vuc2l0aXZlGAYgASgIEkcKD2NvbmZpZ19zeW5vbnltcxgHIAMoCzIuLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuQ29uZmlnU3lub255bRIaCg1kb2N1bWVudGF0aW9uGAggASgJSAGIAQFCCAoGX3ZhbHVlQhAKDl9kb2N1bWVudGF0aW9uIpUFChJDcmVhdGVUb3BpY1JlcXVlc3QSUAoFdG9waWMYASABKAsyOS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLkNyZWF0ZVRvcGljUmVxdWVzdC5Ub3BpY0IGukgDyAEBEhUKDXZhbGlkYXRlX29ubHkYAiABKAgalQQKBVRvcGljEi8KBG5hbWUYASABKAlCIbpIHsgBAXIZEAEY+QEyEl5bYS16QS1aMC05Ll9cLV0qJBIuCg9wYXJ0aXRpb25fY291bnQYAiABKAVCELpIDRoLKP///////////wFIAIgBARIzChJyZXBsaWNhdGlvbl9mYWN0b3IYAyABKAVCErpIDxoNGAUo////////////AUgBiAEBEmgKE3JlcGxpY2FfYXNzaWdubWVudHMYBCADKAsySy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLkNyZWF0ZVRvcGljUmVxdWVzdC5Ub3BpYy5SZXBsaWNhQXNzaWdubWVudBJRCgdjb25maWdzGAUgAygLMkAucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMS5DcmVhdGVUb3BpY1JlcXVlc3QuVG9waWMuQ29uZmlnGk4KBkNvbmZpZxImCgRuYW1lGAEgASgJQhi6SBVyExABGP8BMgxeW2EtejAtOS5dKyQSEgoFdmFsdWUYAiABKAlIAIgBAUIICgZfdmFsdWUaPgoRUmVwbGljYUFzc2lnbm1lbnQSFAoMcGFydGl0aW9uX2lkGAEgASgFEhMKC3JlcGxpY2FfaWRzGAIgAygFQhIKEF9wYXJ0aXRpb25fY291bnRCFQoTX3JlcGxpY2F0aW9uX2ZhY3RvciJYChNDcmVhdGVUb3BpY1Jlc3BvbnNlEgwKBG5hbWUYASABKAkSFwoPcGFydGl0aW9uX2NvdW50GAIgASgFEhoKEnJlcGxpY2F0aW9uX2ZhY3RvchgDIAEoBSLTAgoRTGlzdFRvcGljc1JlcXVlc3QSSQoGZmlsdGVyGAEgASgLMjkucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMS5MaXN0VG9waWNzUmVxdWVzdC5GaWx0ZXISnwEKCXBhZ2Vfc2l6ZRgCIAEoBUKLAZJBdTJhTGltaXQgdGhlIHBhZ2luYXRlZCByZXNwb25zZSB0byBhIG51bWJlciBvZiBpdGVtcy4gRGVmYXVsdHMgdG8gMTAwLiBVc2UgLTEgdG8gZGlzYWJsZSBwYWdpbmF0aW9uLlkAAAAAAECPQGkAAAAAAADwv7pIEBoOGOgHKP///////////wESEgoKcGFnZV90b2tlbhgDIAEoCRo9CgZGaWx0ZXISMwoNbmFtZV9jb250YWlucxgBIAEoCUIcukgZchcY+QEyEl5bYS16QS1aMC05Ll9cLV0qJCLWAQoSTGlzdFRvcGljc1Jlc3BvbnNlEkkKBnRvcGljcxgBIAMoCzI5LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuTGlzdFRvcGljc1Jlc3BvbnNlLlRvcGljEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCRpcCgVUb3BpYxIMCgRuYW1lGAEgASgJEhAKCGludGVybmFsGAIgASgIEhcKD3BhcnRpdGlvbl9jb3VudBgDIAEoBRIaChJyZXBsaWNhdGlvbl9mYWN0b3IYBCABKAUiRQoSRGVsZXRlVG9waWNSZXF1ZXN0Ei8KBG5hbWUYASABKAlCIbpIHsgBAXIZEAEY+QEyEl5bYS16QS1aMC05Ll9cLV0qJCIVChNEZWxldGVUb3BpY1Jlc3BvbnNlIlYKHUdldFRvcGljQ29uZmlndXJhdGlvbnNSZXF1ZXN0EjUKCnRvcGljX25hbWUYASABKAlCIbpIHsgBAXIZEAEY+QEyEl5bYS16QS1aMC05Ll9cLV0qJCJuCh5HZXRUb3BpY0NvbmZpZ3VyYXRpb25zUmVzcG9uc2USTAoOY29uZmlndXJhdGlvbnMYASADKAsyNC5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLlRvcGljLkNvbmZpZ3VyYXRpb24igQMKIFVwZGF0ZVRvcGljQ29uZmlndXJhdGlvbnNSZXF1ZXN0EjUKCnRvcGljX25hbWUYASABKAlCIbpIHsgBAXIZEAEY+QEyEl5bYS16QS1aMC05Ll9cLV0qJBJ6Cg5jb25maWd1cmF0aW9ucxgCIAMoCzJVLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuVXBkYXRlVG9waWNDb25maWd1cmF0aW9uc1JlcXVlc3QuVXBkYXRlQ29uZmlndXJhdGlvbkILukgIyAEBkgECCAEaqQEKE1VwZGF0ZUNvbmZpZ3VyYXRpb24SGwoEbmFtZRgBIAEoCUINukgKyAEBcgUQARj5ARISCgV2YWx1ZRgCIAEoCUgAiAEBElcKCW9wZXJhdGlvbhgDIAEoDjI1LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuQ29uZmlnQWx0ZXJPcGVyYXRpb25CDbpICsgBAYIBBBABIABCCAoGX3ZhbHVlInEKIVVwZGF0ZVRvcGljQ29uZmlndXJhdGlvbnNSZXNwb25zZRJMCg5jb25maWd1cmF0aW9ucxgBIAMoCzI0LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuVG9waWMuQ29uZmlndXJhdGlvbiLcAQodU2V0VG9waWNDb25maWd1cmF0aW9uc1JlcXVlc3QSEgoKdG9waWNfbmFtZRgBIAEoCRJnCg5jb25maWd1cmF0aW9ucxgCIAMoCzJPLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuU2V0VG9waWNDb25maWd1cmF0aW9uc1JlcXVlc3QuU2V0Q29uZmlndXJhdGlvbho+ChBTZXRDb25maWd1cmF0aW9uEgwKBG5hbWUYASABKAkSEgoFdmFsdWUYAiABKAlIAIgBAUIICgZfdmFsdWUibgoeU2V0VG9waWNDb25maWd1cmF0aW9uc1Jlc3BvbnNlEkwKDmNvbmZpZ3VyYXRpb25zGAEgAygLMjQucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMS5Ub3BpYy5Db25maWd1cmF0aW9uMv4TCgxUb3BpY1NlcnZpY2US0gIKC0NyZWF0ZVRvcGljEjMucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMS5DcmVhdGVUb3BpY1JlcXVlc3QaNC5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLkNyZWF0ZVRvcGljUmVzcG9uc2Ui1wGIAgGSQakBEgxDcmVhdGUgVG9waWMaVUNyZWF0ZSBhIFt0b3BpY10oaHR0cHM6Ly9kb2NzLnJlZHBhbmRhLmNvbS9yZWRwYW5kYS1jbG91ZC9nZXQtc3RhcnRlZC9jcmVhdGUtdG9waWMvKS5KQgoDMjAxEjsKDVRvcGljIGNyZWF0ZWQSKgooGiYucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMS5Ub3BpY4qmHQQIAhABgtPkkwIZOgV0b3BpYyIQL3YxYWxwaGExL3RvcGljcxLTAgoKTGlzdFRvcGljcxIyLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuTGlzdFRvcGljc1JlcXVlc3QaMy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLkxpc3RUb3BpY3NSZXNwb25zZSLbAYgCAZJBtAESC0xpc3QgVG9waWNzGl9MaXN0IHRvcGljcywgd2l0aCBwYXJ0aXRpb24gY291bnQgYW5kIHJlcGxpY2F0aW9uIGZhY3Rvci4gT3B0aW9uYWw6IGZpbHRlciBiYXNlZCBvbiB0b3BpYyBuYW1lLkpECgMyMDASPQoCT0sSNwo1GjMucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMS5MaXN0VG9waWNzUmVzcG9uc2WKph0ECAEQAYLT5JMCEhIQL3YxYWxwaGExL3RvcGljcxLQAgoLRGVsZXRlVG9waWMSMy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLkRlbGV0ZVRvcGljUmVxdWVzdBo0LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuRGVsZXRlVG9waWNSZXNwb25zZSLVAYgCAZJBpwESDERlbGV0ZSBUb3BpYxovRGVsZXRlIHRoZSBLYWZrYSB0b3BpYyB3aXRoIHRoZSByZXF1ZXN0ZWQgbmFtZS5KJQoDMjA0Eh4KGlRvcGljIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5EgBKPwoDNDA0EjgKHlJlcXVlc3RlZCB0b3BpYyBkb2VzIG5vdCBleGlzdBIWChQaEi5nb29nbGUucnBjLlN0YXR1c4qmHQQIAhABgtPkkwIZKhcvdjFhbHBoYTEvdG9waWNzL3tuYW1lfRKrAwoWR2V0VG9waWNDb25maWd1cmF0aW9ucxI+LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuR2V0VG9waWNDb25maWd1cmF0aW9uc1JlcXVlc3QaPy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLkdldFRvcGljQ29uZmlndXJhdGlvbnNSZXNwb25zZSKPAogCAZJBvAESGEdldCBUb3BpYyBDb25maWd1cmF0aW9ucxoiR2V0IGtleS12YWx1ZSBjb25maWdzIGZvciBhIHRvcGljLkpQCgMyMDASSQoCT0sSQwpBGj8ucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMS5HZXRUb3BpY0NvbmZpZ3VyYXRpb25zUmVzcG9uc2VKKgoDNDA0EiMKCU5vdCBGb3VuZBIWChQaEi5nb29nbGUucnBjLlN0YXR1c4qmHQQIARABgtPkkwI+Yg5jb25maWd1cmF0aW9ucxIsL3YxYWxwaGExL3RvcGljcy97dG9waWNfbmFtZX0vY29uZmlndXJhdGlvbnMS0wMKGVVwZGF0ZVRvcGljQ29uZmlndXJhdGlvbnMSQS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLlVwZGF0ZVRvcGljQ29uZmlndXJhdGlvbnNSZXF1ZXN0GkIucmVkcGFuZGEuYXBpLmRhdGFwbGFuZS52MWFscGhhMS5VcGRhdGVUb3BpY0NvbmZpZ3VyYXRpb25zUmVzcG9uc2UirgKIAgGSQcsBEhpVcGRhdGUgVG9waWMgQ29uZmlndXJhdGlvbhosVXBkYXRlIGEgc3Vic2V0IG9mIHRoZSB0b3BpYyBjb25maWd1cmF0aW9ucy5KUwoDMjAwEkwKAk9LEkYKRBpCLnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuVXBkYXRlVG9waWNDb25maWd1cmF0aW9uc1Jlc3BvbnNlSioKAzQwNBIjCglOb3QgRm91bmQSFgoUGhIuZ29vZ2xlLnJwYy5TdGF0dXOKph0ECAIQAYLT5JMCTjoOY29uZmlndXJhdGlvbnNiDmNvbmZpZ3VyYXRpb25zMiwvdjFhbHBoYTEvdG9waWNzL3t0b3BpY19uYW1lfS9jb25maWd1cmF0aW9ucxLEBAoWU2V0VG9waWNDb25maWd1cmF0aW9ucxI+LnJlZHBhbmRhLmFwaS5kYXRhcGxhbmUudjFhbHBoYTEuU2V0VG9waWNDb25maWd1cmF0aW9uc1JlcXVlc3QaPy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLlNldFRvcGljQ29uZmlndXJhdGlvbnNSZXNwb25zZSKoA4gCAZJBxQISGFNldCBUb3BpYyBDb25maWd1cmF0aW9ucxqqAVVwZGF0ZSB0aGUgZW50aXJlIHNldCBvZiBrZXktdmFsdWUgY29uZmlndXJhdGlvbnMgZm9yIGEgdG9waWMuIENvbmZpZyBlbnRyaWVzIHRoYXQgYXJlIG5vdCBwcm92aWRlZCBpbiB0aGUgcmVxdWVzdCBhcmUgcmVtb3ZlZCBhbmQgd2lsbCBmYWxsIGJhY2sgdG8gdGhlaXIgZGVmYXVsdCB2YWx1ZXMuSlAKAzIwMBJJCgJPSxJDCkEaPy5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExLlNldFRvcGljQ29uZmlndXJhdGlvbnNSZXNwb25zZUoqCgM0MDQSIwoJTm90IEZvdW5kEhYKFBoSLmdvb2dsZS5ycGMuU3RhdHVziqYdBAgCEAGC0+STAk46DmNvbmZpZ3VyYXRpb25zYg5jb25maWd1cmF0aW9ucxosL3YxYWxwaGExL3RvcGljcy97dG9waWNfbmFtZX0vY29uZmlndXJhdGlvbnMaJYgCAZJBHxIdTWFuYWdlIFJlZHBhbmRhIENsb3VkIHRvcGljcy5CuQIKI2NvbS5yZWRwYW5kYS5hcGkuZGF0YXBsYW5lLnYxYWxwaGExQgpUb3BpY1Byb3RvUAFaZ2dpdGh1Yi5jb20vcmVkcGFuZGEtZGF0YS9jb25zb2xlL2JhY2tlbmQvcGtnL3Byb3RvZ2VuL3JlZHBhbmRhL2FwaS9kYXRhcGxhbmUvdjFhbHBoYTE7ZGF0YXBsYW5ldjFhbHBoYTGiAgNSQUSqAh9SZWRwYW5kYS5BcGkuRGF0YXBsYW5lLlYxYWxwaGExygIfUmVkcGFuZGFcQXBpXERhdGFwbGFuZVxWMWFscGhhMeICK1JlZHBhbmRhXEFwaVxEYXRhcGxhbmVcVjFhbHBoYTFcR1BCTWV0YWRhdGHqAiJSZWRwYW5kYTo6QXBpOjpEYXRhcGxhbmU6OlYxYWxwaGExYgZwcm90bzM", [file_buf_validate_validate, file_google_api_annotations, file_protoc_gen_openapiv2_options_annotations, file_redpanda_api_auth_v1_authorization, file_redpanda_api_dataplane_v1alpha1_common]);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.Topic
 */
export type Topic = Message<"redpanda.api.dataplane.v1alpha1.Topic"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.Topic.
 * Use `create(TopicSchema)` to create a new message.
 */
export const TopicSchema: GenMessage<Topic> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.Topic.Configuration
 */
export type Topic_Configuration = Message<"redpanda.api.dataplane.v1alpha1.Topic.Configuration"> & {
  /**
   * A topic-level config key (e.g. `segment.bytes`).
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Config data type.
   *
   * @generated from field: redpanda.api.dataplane.v1alpha1.ConfigType type = 2;
   */
  type: ConfigType;

  /**
   * A topic-level config value (e.g. 1073741824).
   *
   * @generated from field: optional string value = 3;
   */
  value?: string;

  /**
   * Where the config entry is from.
   *
   * @generated from field: redpanda.api.dataplane.v1alpha1.ConfigSource source = 4;
   */
  source: ConfigSource;

  /**
   * Whether the config is read-only, or is dynamic and can be altered.
   *
   * @generated from field: bool read_only = 5;
   */
  readOnly: boolean;

  /**
   * Whether this is a sensitive config key and value.
   *
   * @generated from field: bool sensitive = 6;
   */
  sensitive: boolean;

  /**
   * If no config value is set at the topic level, it will inherit the value
   * set at the broker or cluster level. `name` is the corresponding config
   * key whose value is inherited. `source` indicates whether the inherited
   * config is default, broker, etc.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1alpha1.ConfigSynonym config_synonyms = 7;
   */
  configSynonyms: ConfigSynonym[];

  /**
   * Config documentation.
   *
   * @generated from field: optional string documentation = 8;
   */
  documentation?: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.Topic.Configuration.
 * Use `create(Topic_ConfigurationSchema)` to create a new message.
 */
export const Topic_ConfigurationSchema: GenMessage<Topic_Configuration> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.CreateTopicRequest
 */
export type CreateTopicRequest = Message<"redpanda.api.dataplane.v1alpha1.CreateTopicRequest"> & {
  /**
   * The topic to create.
   *
   * @generated from field: redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic topic = 1;
   */
  topic?: CreateTopicRequest_Topic;

  /**
   * If true, makes this request a dry run; everything is validated but
   * no topics are actually created.
   *
   * @generated from field: bool validate_only = 2;
   */
  validateOnly: boolean;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.CreateTopicRequest.
 * Use `create(CreateTopicRequestSchema)` to create a new message.
 */
export const CreateTopicRequestSchema: GenMessage<CreateTopicRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 1);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic
 */
export type CreateTopicRequest_Topic = Message<"redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic"> & {
  /**
   * Name of topic.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The number of partitions to give the topic. If specifying
   * partitions manually (see `replica_assignments`), set to -1.
   * Or, to use the cluster default partition count, set to null.
   *
   * @generated from field: optional int32 partition_count = 2;
   */
  partitionCount?: number;

  /**
   * The number of replicas every partition must have.
   * If specifying partitions manually (see `replica_assignments`), set to -1.
   * Or, to use the cluster default replication factor, set to null.
   *
   * @generated from field: optional int32 replication_factor = 3;
   */
  replicationFactor?: number;

  /**
   * Manually specify broker ID assignments for partition replicas. If manually assigning replicas, both `replication_factor` and
   * `partition_count` must be -1.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic.ReplicaAssignment replica_assignments = 4;
   */
  replicaAssignments: CreateTopicRequest_Topic_ReplicaAssignment[];

  /**
   * An array of key-value config pairs for a topic.
   * These correspond to Kafka topic-level configs.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic.Config configs = 5;
   */
  configs: CreateTopicRequest_Topic_Config[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic.
 * Use `create(CreateTopicRequest_TopicSchema)` to create a new message.
 */
export const CreateTopicRequest_TopicSchema: GenMessage<CreateTopicRequest_Topic> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 1, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic.Config
 */
export type CreateTopicRequest_Topic_Config = Message<"redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic.Config"> & {
  /**
   * A topic-level config key (e.g. `segment.bytes`).
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A topic-level config value (e.g. 1073741824).
   *
   * @generated from field: optional string value = 2;
   */
  value?: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic.Config.
 * Use `create(CreateTopicRequest_Topic_ConfigSchema)` to create a new message.
 */
export const CreateTopicRequest_Topic_ConfigSchema: GenMessage<CreateTopicRequest_Topic_Config> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 1, 0, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic.ReplicaAssignment
 */
export type CreateTopicRequest_Topic_ReplicaAssignment = Message<"redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic.ReplicaAssignment"> & {
  /**
   * A partition to create.
   *
   * @generated from field: int32 partition_id = 1;
   */
  partitionId: number;

  /**
   * The broker IDs the partition replicas are assigned to.
   *
   * @generated from field: repeated int32 replica_ids = 2;
   */
  replicaIds: number[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.CreateTopicRequest.Topic.ReplicaAssignment.
 * Use `create(CreateTopicRequest_Topic_ReplicaAssignmentSchema)` to create a new message.
 */
export const CreateTopicRequest_Topic_ReplicaAssignmentSchema: GenMessage<CreateTopicRequest_Topic_ReplicaAssignment> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 1, 0, 1);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.CreateTopicResponse
 */
export type CreateTopicResponse = Message<"redpanda.api.dataplane.v1alpha1.CreateTopicResponse"> & {
  /**
   * Name of topic.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The number of partitions created for the topic.
   * This field has a default value of -1, which may be returned if the broker
   * does not support v5+ of this request which added support for returning
   * this information.
   *
   * @generated from field: int32 partition_count = 2;
   */
  partitionCount: number;

  /**
   * The number of replicas per topic partition.
   * This field has a default of -1, which may be returned if the broker
   * does not support v5+ of this request which added support for returning
   * this information.
   *
   * @generated from field: int32 replication_factor = 3;
   */
  replicationFactor: number;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.CreateTopicResponse.
 * Use `create(CreateTopicResponseSchema)` to create a new message.
 */
export const CreateTopicResponseSchema: GenMessage<CreateTopicResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 2);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.ListTopicsRequest
 */
export type ListTopicsRequest = Message<"redpanda.api.dataplane.v1alpha1.ListTopicsRequest"> & {
  /**
   * @generated from field: redpanda.api.dataplane.v1alpha1.ListTopicsRequest.Filter filter = 1;
   */
  filter?: ListTopicsRequest_Filter;

  /**
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.ListTopicsRequest.
 * Use `create(ListTopicsRequestSchema)` to create a new message.
 */
export const ListTopicsRequestSchema: GenMessage<ListTopicsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 3);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.ListTopicsRequest.Filter
 */
export type ListTopicsRequest_Filter = Message<"redpanda.api.dataplane.v1alpha1.ListTopicsRequest.Filter"> & {
  /**
   * Substring match on topic name. Case-sensitive.
   *
   * @generated from field: string name_contains = 1;
   */
  nameContains: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.ListTopicsRequest.Filter.
 * Use `create(ListTopicsRequest_FilterSchema)` to create a new message.
 */
export const ListTopicsRequest_FilterSchema: GenMessage<ListTopicsRequest_Filter> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 3, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.ListTopicsResponse
 */
export type ListTopicsResponse = Message<"redpanda.api.dataplane.v1alpha1.ListTopicsResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.dataplane.v1alpha1.ListTopicsResponse.Topic topics = 1;
   */
  topics: ListTopicsResponse_Topic[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.ListTopicsResponse.
 * Use `create(ListTopicsResponseSchema)` to create a new message.
 */
export const ListTopicsResponseSchema: GenMessage<ListTopicsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 4);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.ListTopicsResponse.Topic
 */
export type ListTopicsResponse_Topic = Message<"redpanda.api.dataplane.v1alpha1.ListTopicsResponse.Topic"> & {
  /**
   * Topic name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Whether topic is internal only.
   *
   * @generated from field: bool internal = 2;
   */
  internal: boolean;

  /**
   * Topic partition count.
   *
   * @generated from field: int32 partition_count = 3;
   */
  partitionCount: number;

  /**
   * Topic replication factor.
   *
   * @generated from field: int32 replication_factor = 4;
   */
  replicationFactor: number;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.ListTopicsResponse.Topic.
 * Use `create(ListTopicsResponse_TopicSchema)` to create a new message.
 */
export const ListTopicsResponse_TopicSchema: GenMessage<ListTopicsResponse_Topic> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 4, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.DeleteTopicRequest
 */
export type DeleteTopicRequest = Message<"redpanda.api.dataplane.v1alpha1.DeleteTopicRequest"> & {
  /**
   * Topic name.
   *
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.DeleteTopicRequest.
 * Use `create(DeleteTopicRequestSchema)` to create a new message.
 */
export const DeleteTopicRequestSchema: GenMessage<DeleteTopicRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 5);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.DeleteTopicResponse
 */
export type DeleteTopicResponse = Message<"redpanda.api.dataplane.v1alpha1.DeleteTopicResponse"> & {
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.DeleteTopicResponse.
 * Use `create(DeleteTopicResponseSchema)` to create a new message.
 */
export const DeleteTopicResponseSchema: GenMessage<DeleteTopicResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 6);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.GetTopicConfigurationsRequest
 */
export type GetTopicConfigurationsRequest = Message<"redpanda.api.dataplane.v1alpha1.GetTopicConfigurationsRequest"> & {
  /**
   * Topic name
   *
   * @generated from field: string topic_name = 1;
   */
  topicName: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.GetTopicConfigurationsRequest.
 * Use `create(GetTopicConfigurationsRequestSchema)` to create a new message.
 */
export const GetTopicConfigurationsRequestSchema: GenMessage<GetTopicConfigurationsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 7);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.GetTopicConfigurationsResponse
 */
export type GetTopicConfigurationsResponse = Message<"redpanda.api.dataplane.v1alpha1.GetTopicConfigurationsResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.dataplane.v1alpha1.Topic.Configuration configurations = 1;
   */
  configurations: Topic_Configuration[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.GetTopicConfigurationsResponse.
 * Use `create(GetTopicConfigurationsResponseSchema)` to create a new message.
 */
export const GetTopicConfigurationsResponseSchema: GenMessage<GetTopicConfigurationsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 8);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsRequest
 */
export type UpdateTopicConfigurationsRequest = Message<"redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsRequest"> & {
  /**
   * Topic name
   *
   * @generated from field: string topic_name = 1;
   */
  topicName: string;

  /**
   * @generated from field: repeated redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsRequest.UpdateConfiguration configurations = 2;
   */
  configurations: UpdateTopicConfigurationsRequest_UpdateConfiguration[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsRequest.
 * Use `create(UpdateTopicConfigurationsRequestSchema)` to create a new message.
 */
export const UpdateTopicConfigurationsRequestSchema: GenMessage<UpdateTopicConfigurationsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 9);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsRequest.UpdateConfiguration
 */
export type UpdateTopicConfigurationsRequest_UpdateConfiguration = Message<"redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsRequest.UpdateConfiguration"> & {
  /**
   * A topic-level config key (e.g. `segment.bytes`).
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A topic-level config value (e.g. 1073741824).
   *
   * @generated from field: optional string value = 2;
   */
  value?: string;

  /**
   * The update operation to apply to the topic config.
   *
   * @generated from field: redpanda.api.dataplane.v1alpha1.ConfigAlterOperation operation = 3;
   */
  operation: ConfigAlterOperation;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsRequest.UpdateConfiguration.
 * Use `create(UpdateTopicConfigurationsRequest_UpdateConfigurationSchema)` to create a new message.
 */
export const UpdateTopicConfigurationsRequest_UpdateConfigurationSchema: GenMessage<UpdateTopicConfigurationsRequest_UpdateConfiguration> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 9, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsResponse
 */
export type UpdateTopicConfigurationsResponse = Message<"redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsResponse"> & {
  /**
   * Topic's complete set of configurations after applying this partial patch.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1alpha1.Topic.Configuration configurations = 1;
   */
  configurations: Topic_Configuration[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.UpdateTopicConfigurationsResponse.
 * Use `create(UpdateTopicConfigurationsResponseSchema)` to create a new message.
 */
export const UpdateTopicConfigurationsResponseSchema: GenMessage<UpdateTopicConfigurationsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 10);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsRequest
 */
export type SetTopicConfigurationsRequest = Message<"redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsRequest"> & {
  /**
   * Name of topic.
   *
   * @generated from field: string topic_name = 1;
   */
  topicName: string;

  /**
   * @generated from field: repeated redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsRequest.SetConfiguration configurations = 2;
   */
  configurations: SetTopicConfigurationsRequest_SetConfiguration[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsRequest.
 * Use `create(SetTopicConfigurationsRequestSchema)` to create a new message.
 */
export const SetTopicConfigurationsRequestSchema: GenMessage<SetTopicConfigurationsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 11);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsRequest.SetConfiguration
 */
export type SetTopicConfigurationsRequest_SetConfiguration = Message<"redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsRequest.SetConfiguration"> & {
  /**
   * A topic-level config key (e.g. `segment.bytes`).
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * A topic-level config value (e.g. 1073741824).
   *
   * @generated from field: optional string value = 2;
   */
  value?: string;
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsRequest.SetConfiguration.
 * Use `create(SetTopicConfigurationsRequest_SetConfigurationSchema)` to create a new message.
 */
export const SetTopicConfigurationsRequest_SetConfigurationSchema: GenMessage<SetTopicConfigurationsRequest_SetConfiguration> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 11, 0);

/**
 * @generated from message redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsResponse
 */
export type SetTopicConfigurationsResponse = Message<"redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsResponse"> & {
  /**
   * Topic's complete set of configurations after this update.
   *
   * @generated from field: repeated redpanda.api.dataplane.v1alpha1.Topic.Configuration configurations = 1;
   */
  configurations: Topic_Configuration[];
};

/**
 * Describes the message redpanda.api.dataplane.v1alpha1.SetTopicConfigurationsResponse.
 * Use `create(SetTopicConfigurationsResponseSchema)` to create a new message.
 */
export const SetTopicConfigurationsResponseSchema: GenMessage<SetTopicConfigurationsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_dataplane_v1alpha1_topic, 12);

/**
 * @generated from service redpanda.api.dataplane.v1alpha1.TopicService
 * @deprecated
 */
export const TopicService: GenService<{
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha1.TopicService.CreateTopic
   * @deprecated
   */
  createTopic: {
    methodKind: "unary";
    input: typeof CreateTopicRequestSchema;
    output: typeof CreateTopicResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha1.TopicService.ListTopics
   * @deprecated
   */
  listTopics: {
    methodKind: "unary";
    input: typeof ListTopicsRequestSchema;
    output: typeof ListTopicsResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha1.TopicService.DeleteTopic
   * @deprecated
   */
  deleteTopic: {
    methodKind: "unary";
    input: typeof DeleteTopicRequestSchema;
    output: typeof DeleteTopicResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha1.TopicService.GetTopicConfigurations
   * @deprecated
   */
  getTopicConfigurations: {
    methodKind: "unary";
    input: typeof GetTopicConfigurationsRequestSchema;
    output: typeof GetTopicConfigurationsResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha1.TopicService.UpdateTopicConfigurations
   * @deprecated
   */
  updateTopicConfigurations: {
    methodKind: "unary";
    input: typeof UpdateTopicConfigurationsRequestSchema;
    output: typeof UpdateTopicConfigurationsResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.dataplane.v1alpha1.TopicService.SetTopicConfigurations
   * @deprecated
   */
  setTopicConfigurations: {
    methodKind: "unary";
    input: typeof SetTopicConfigurationsRequestSchema;
    output: typeof SetTopicConfigurationsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_api_dataplane_v1alpha1_topic, 0);


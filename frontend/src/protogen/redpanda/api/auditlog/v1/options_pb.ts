// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/auditlog/v1/options.proto (package redpanda.api.auditlog.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { FieldOptions, MethodOptions, ServiceOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/auditlog/v1/options.proto.
 */
export const file_redpanda_api_auditlog_v1_options: GenFile = /*@__PURE__*/
  fileDesc("CiZyZWRwYW5kYS9hcGkvYXVkaXRsb2cvdjEvb3B0aW9ucy5wcm90bxIYcmVkcGFuZGEuYXBpLmF1ZGl0bG9nLnYxIiUKElNlcnZpY2VBdWRpdENvbmZpZxIPCgdlbmFibGVkGAEgASgIIjUKEU1ldGhvZEF1ZGl0Q29uZmlnEhQKB2VuYWJsZWQYASABKAhIAIgBAUIKCghfZW5hYmxlZCp5CgtBdWRpdFBvbGljeRIcChhBVURJVF9QT0xJQ1lfVU5TUEVDSUZJRUQQABIWChJBVURJVF9QT0xJQ1lfTkVWRVIQARIZChVBVURJVF9QT0xJQ1lfUkVEQUNURUQQAhIZChVBVURJVF9QT0xJQ1lfU1RBTkRBUkQQAzo8CglzZW5zaXRpdmUSHS5nb29nbGUucHJvdG9idWYuRmllbGRPcHRpb25zGNt4IAEoCFIJc2Vuc2l0aXZlOmgKB3NlcnZpY2USHy5nb29nbGUucHJvdG9idWYuU2VydmljZU9wdGlvbnMY3HggASgLMiwucmVkcGFuZGEuYXBpLmF1ZGl0bG9nLnYxLlNlcnZpY2VBdWRpdENvbmZpZ1IHc2VydmljZTpoCgZtZXRob2QSHi5nb29nbGUucHJvdG9idWYuTWV0aG9kT3B0aW9ucxjUhgMgASgLMisucmVkcGFuZGEuYXBpLmF1ZGl0bG9nLnYxLk1ldGhvZEF1ZGl0Q29uZmlnUgZtZXRob2SIAQE6aQoMYXVkaXRfcG9saWN5Eh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucxjVhgMgASgOMiUucmVkcGFuZGEuYXBpLmF1ZGl0bG9nLnYxLkF1ZGl0UG9saWN5UgthdWRpdFBvbGljeUKMAgocY29tLnJlZHBhbmRhLmFwaS5hdWRpdGxvZy52MUIMT3B0aW9uc1Byb3RvUAFaW2J1Zi5idWlsZC9nZW4vZ28vcmVkcGFuZGFkYXRhL2NvbW1vbi9wcm90b2NvbGJ1ZmZlcnMvZ28vcmVkcGFuZGEvYXBpL2F1ZGl0bG9nL3YxO2F1ZGl0bG9ndjGiAgNSQUGqAhhSZWRwYW5kYS5BcGkuQXVkaXRsb2cuVjHKAhhSZWRwYW5kYVxBcGlcQXVkaXRsb2dcVjHiAiRSZWRwYW5kYVxBcGlcQXVkaXRsb2dcVjFcR1BCTWV0YWRhdGHqAhtSZWRwYW5kYTo6QXBpOjpBdWRpdGxvZzo6VjFiBnByb3RvMw", [file_google_protobuf_descriptor]);

/**
 * Service-level audit configuration message
 *
 * @generated from message redpanda.api.auditlog.v1.ServiceAuditConfig
 */
export type ServiceAuditConfig = Message<"redpanda.api.auditlog.v1.ServiceAuditConfig"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message redpanda.api.auditlog.v1.ServiceAuditConfig.
 * Use `create(ServiceAuditConfigSchema)` to create a new message.
 */
export const ServiceAuditConfigSchema: GenMessage<ServiceAuditConfig> = /*@__PURE__*/
  messageDesc(file_redpanda_api_auditlog_v1_options, 0);

/**
 * Method-level audit configuration message
 *
 * @generated from message redpanda.api.auditlog.v1.MethodAuditConfig
 */
export type MethodAuditConfig = Message<"redpanda.api.auditlog.v1.MethodAuditConfig"> & {
  /**
   * @generated from field: optional bool enabled = 1;
   */
  enabled?: boolean;
};

/**
 * Describes the message redpanda.api.auditlog.v1.MethodAuditConfig.
 * Use `create(MethodAuditConfigSchema)` to create a new message.
 */
export const MethodAuditConfigSchema: GenMessage<MethodAuditConfig> = /*@__PURE__*/
  messageDesc(file_redpanda_api_auditlog_v1_options, 1);

/**
 * Field-level audit policy
 *
 * @generated from enum redpanda.api.auditlog.v1.AuditPolicy
 */
export enum AuditPolicy {
  /**
   * Defaults to STANDARD for opted-in messages
   *
   * @generated from enum value: AUDIT_POLICY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Field excluded from audit logs
   *
   * @generated from enum value: AUDIT_POLICY_NEVER = 1;
   */
  NEVER = 1,

  /**
   * Field present but value redacted
   *
   * @generated from enum value: AUDIT_POLICY_REDACTED = 2;
   */
  REDACTED = 2,

  /**
   * Field logged as-is (default)
   *
   * @generated from enum value: AUDIT_POLICY_STANDARD = 3;
   */
  STANDARD = 3,
}

/**
 * Describes the enum redpanda.api.auditlog.v1.AuditPolicy.
 */
export const AuditPolicySchema: GenEnum<AuditPolicy> = /*@__PURE__*/
  enumDesc(file_redpanda_api_auditlog_v1_options, 0);

/**
 * @generated from extension: bool sensitive = 15451;
 */
export const sensitive: GenExtension<FieldOptions, boolean> = /*@__PURE__*/
  extDesc(file_redpanda_api_auditlog_v1_options, 0);

/**
 * @generated from extension: redpanda.api.auditlog.v1.ServiceAuditConfig service = 15452;
 */
export const service: GenExtension<ServiceOptions, ServiceAuditConfig> = /*@__PURE__*/
  extDesc(file_redpanda_api_auditlog_v1_options, 1);

/**
 * @generated from extension: optional redpanda.api.auditlog.v1.MethodAuditConfig method = 50004;
 */
export const method: GenExtension<MethodOptions, MethodAuditConfig> = /*@__PURE__*/
  extDesc(file_redpanda_api_auditlog_v1_options, 2);

/**
 * @generated from extension: redpanda.api.auditlog.v1.AuditPolicy audit_policy = 50005;
 */
export const audit_policy: GenExtension<FieldOptions, AuditPolicy> = /*@__PURE__*/
  extDesc(file_redpanda_api_auditlog_v1_options, 3);


// @generated by protoc-gen-connect-query v1.4.0 with parameter "target=ts,import_extension=,js_import_style=legacy_commonjs"
// @generated from file redpanda/api/console/v1alpha1/security.proto (package redpanda.api.console.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { CreateRoleRequest, CreateRoleResponse, DeleteRoleRequest, DeleteRoleResponse, GetRoleRequest, GetRoleResponse, ListRoleMembersRequest, ListRoleMembersResponse, ListRolesRequest, ListRolesResponse, UpdateRoleMembershipRequest, UpdateRoleMembershipResponse } from "./security_pb";

/**
 * ListRoles lists all the roles based on optional filter.
 *
 * @generated from rpc redpanda.api.console.v1alpha1.SecurityService.ListRoles
 */
export const listRoles = {
  localName: "listRoles",
  name: "ListRoles",
  kind: MethodKind.Unary,
  I: ListRolesRequest,
  O: ListRolesResponse,
  service: {
    typeName: "redpanda.api.console.v1alpha1.SecurityService"
  }
} as const;

/**
 * @generated from rpc redpanda.api.console.v1alpha1.SecurityService.CreateRole
 */
export const createRole = {
  localName: "createRole",
  name: "CreateRole",
  kind: MethodKind.Unary,
  I: CreateRoleRequest,
  O: CreateRoleResponse,
  service: {
    typeName: "redpanda.api.console.v1alpha1.SecurityService"
  }
} as const;

/**
 * GetRole retrieves the specific role.
 *
 * @generated from rpc redpanda.api.console.v1alpha1.SecurityService.GetRole
 */
export const getRole = {
  localName: "getRole",
  name: "GetRole",
  kind: MethodKind.Unary,
  I: GetRoleRequest,
  O: GetRoleResponse,
  service: {
    typeName: "redpanda.api.console.v1alpha1.SecurityService"
  }
} as const;

/**
 * DeleteRole deletes the role from the system.
 *
 * @generated from rpc redpanda.api.console.v1alpha1.SecurityService.DeleteRole
 */
export const deleteRole = {
  localName: "deleteRole",
  name: "DeleteRole",
  kind: MethodKind.Unary,
  I: DeleteRoleRequest,
  O: DeleteRoleResponse,
  service: {
    typeName: "redpanda.api.console.v1alpha1.SecurityService"
  }
} as const;

/**
 * ListRoleMembership lists all the members assigned to a role based on optional filter.
 *
 * @generated from rpc redpanda.api.console.v1alpha1.SecurityService.ListRoleMembers
 */
export const listRoleMembers = {
  localName: "listRoleMembers",
  name: "ListRoleMembers",
  kind: MethodKind.Unary,
  I: ListRoleMembersRequest,
  O: ListRoleMembersResponse,
  service: {
    typeName: "redpanda.api.console.v1alpha1.SecurityService"
  }
} as const;

/**
 * UpdateRoleMembership updates role membership.
 * Partially update role membership, adding or removing from a role
 * ONLY those members listed in the “add” or “remove” fields, respectively.
 * Adding a member that is already assigned to the role (or removing one that is not) is a no-op,
 * and the rest of the members will be added and removed and reported.
 *
 * @generated from rpc redpanda.api.console.v1alpha1.SecurityService.UpdateRoleMembership
 */
export const updateRoleMembership = {
  localName: "updateRoleMembership",
  name: "UpdateRoleMembership",
  kind: MethodKind.Unary,
  I: UpdateRoleMembershipRequest,
  O: UpdateRoleMembershipResponse,
  service: {
    typeName: "redpanda.api.console.v1alpha1.SecurityService"
  }
} as const;

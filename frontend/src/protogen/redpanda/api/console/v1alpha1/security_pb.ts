// @generated by protoc-gen-es v1.6.0 with parameter "target=ts,import_extension="
// @generated from file redpanda/api/console/v1alpha1/security.proto (package redpanda.api.console.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { CreateRoleRequest as CreateRoleRequest$1, CreateRoleResponse as CreateRoleResponse$1, DeleteRoleRequest as DeleteRoleRequest$1, DeleteRoleResponse as DeleteRoleResponse$1, GetRoleRequest as GetRoleRequest$1, GetRoleResponse as GetRoleResponse$1, ListRoleMembersRequest as ListRoleMembersRequest$1, ListRoleMembersResponse as ListRoleMembersResponse$1, ListRolesRequest as ListRolesRequest$1, ListRolesResponse as ListRolesResponse$1, UpdateRoleMembershipRequest as UpdateRoleMembershipRequest$1, UpdateRoleMembershipResponse as UpdateRoleMembershipResponse$1 } from "../../dataplane/v1/security_pb";

/**
 * ListRolesRequest is the request for ListRoles.
 *
 * @generated from message redpanda.api.console.v1alpha1.ListRolesRequest
 */
export class ListRolesRequest extends Message<ListRolesRequest> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.ListRolesRequest request = 1;
   */
  request?: ListRolesRequest$1;

  constructor(data?: PartialMessage<ListRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.ListRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request", kind: "message", T: ListRolesRequest$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRolesRequest {
    return new ListRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRolesRequest {
    return new ListRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRolesRequest {
    return new ListRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListRolesRequest | PlainMessage<ListRolesRequest> | undefined, b: ListRolesRequest | PlainMessage<ListRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListRolesRequest, a, b);
  }
}

/**
 * ListRolesResponse is the response for ListRoles.
 *
 * @generated from message redpanda.api.console.v1alpha1.ListRolesResponse
 */
export class ListRolesResponse extends Message<ListRolesResponse> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.ListRolesResponse response = 1;
   */
  response?: ListRolesResponse$1;

  constructor(data?: PartialMessage<ListRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.ListRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "response", kind: "message", T: ListRolesResponse$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRolesResponse {
    return new ListRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRolesResponse {
    return new ListRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRolesResponse {
    return new ListRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListRolesResponse | PlainMessage<ListRolesResponse> | undefined, b: ListRolesResponse | PlainMessage<ListRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListRolesResponse, a, b);
  }
}

/**
 * CreateRoleRequest is the request for CreateRole.
 *
 * @generated from message redpanda.api.console.v1alpha1.CreateRoleRequest
 */
export class CreateRoleRequest extends Message<CreateRoleRequest> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.CreateRoleRequest request = 1;
   */
  request?: CreateRoleRequest$1;

  constructor(data?: PartialMessage<CreateRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.CreateRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request", kind: "message", T: CreateRoleRequest$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRoleRequest {
    return new CreateRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRoleRequest {
    return new CreateRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRoleRequest {
    return new CreateRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateRoleRequest | PlainMessage<CreateRoleRequest> | undefined, b: CreateRoleRequest | PlainMessage<CreateRoleRequest> | undefined): boolean {
    return proto3.util.equals(CreateRoleRequest, a, b);
  }
}

/**
 * CreateRoleResponse is the response for CreateRole.
 *
 * @generated from message redpanda.api.console.v1alpha1.CreateRoleResponse
 */
export class CreateRoleResponse extends Message<CreateRoleResponse> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.CreateRoleResponse response = 1;
   */
  response?: CreateRoleResponse$1;

  constructor(data?: PartialMessage<CreateRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.CreateRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "response", kind: "message", T: CreateRoleResponse$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRoleResponse {
    return new CreateRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRoleResponse {
    return new CreateRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRoleResponse {
    return new CreateRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateRoleResponse | PlainMessage<CreateRoleResponse> | undefined, b: CreateRoleResponse | PlainMessage<CreateRoleResponse> | undefined): boolean {
    return proto3.util.equals(CreateRoleResponse, a, b);
  }
}

/**
 * GetRoleRequest is the request for GetRole.
 *
 * @generated from message redpanda.api.console.v1alpha1.GetRoleRequest
 */
export class GetRoleRequest extends Message<GetRoleRequest> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.GetRoleRequest request = 1;
   */
  request?: GetRoleRequest$1;

  constructor(data?: PartialMessage<GetRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.GetRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request", kind: "message", T: GetRoleRequest$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoleRequest {
    return new GetRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoleRequest {
    return new GetRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoleRequest {
    return new GetRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetRoleRequest | PlainMessage<GetRoleRequest> | undefined, b: GetRoleRequest | PlainMessage<GetRoleRequest> | undefined): boolean {
    return proto3.util.equals(GetRoleRequest, a, b);
  }
}

/**
 * GetRoleResponse is the response to GetRole.
 *
 * @generated from message redpanda.api.console.v1alpha1.GetRoleResponse
 */
export class GetRoleResponse extends Message<GetRoleResponse> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.GetRoleResponse response = 1;
   */
  response?: GetRoleResponse$1;

  constructor(data?: PartialMessage<GetRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.GetRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "response", kind: "message", T: GetRoleResponse$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoleResponse {
    return new GetRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoleResponse {
    return new GetRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoleResponse {
    return new GetRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetRoleResponse | PlainMessage<GetRoleResponse> | undefined, b: GetRoleResponse | PlainMessage<GetRoleResponse> | undefined): boolean {
    return proto3.util.equals(GetRoleResponse, a, b);
  }
}

/**
 * DeleteRoleRequest is the request for DeleteRole.
 *
 * @generated from message redpanda.api.console.v1alpha1.DeleteRoleRequest
 */
export class DeleteRoleRequest extends Message<DeleteRoleRequest> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.DeleteRoleRequest request = 1;
   */
  request?: DeleteRoleRequest$1;

  constructor(data?: PartialMessage<DeleteRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.DeleteRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request", kind: "message", T: DeleteRoleRequest$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoleRequest {
    return new DeleteRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoleRequest {
    return new DeleteRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoleRequest {
    return new DeleteRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRoleRequest | PlainMessage<DeleteRoleRequest> | undefined, b: DeleteRoleRequest | PlainMessage<DeleteRoleRequest> | undefined): boolean {
    return proto3.util.equals(DeleteRoleRequest, a, b);
  }
}

/**
 * DeleteRoleResponse is the response for DeleteRole.
 *
 * @generated from message redpanda.api.console.v1alpha1.DeleteRoleResponse
 */
export class DeleteRoleResponse extends Message<DeleteRoleResponse> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.DeleteRoleResponse response = 1;
   */
  response?: DeleteRoleResponse$1;

  constructor(data?: PartialMessage<DeleteRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.DeleteRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "response", kind: "message", T: DeleteRoleResponse$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoleResponse {
    return new DeleteRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoleResponse {
    return new DeleteRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoleResponse {
    return new DeleteRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRoleResponse | PlainMessage<DeleteRoleResponse> | undefined, b: DeleteRoleResponse | PlainMessage<DeleteRoleResponse> | undefined): boolean {
    return proto3.util.equals(DeleteRoleResponse, a, b);
  }
}

/**
 * List role members for a role. That is user principals assigned to that role.
 *
 * @generated from message redpanda.api.console.v1alpha1.ListRoleMembersRequest
 */
export class ListRoleMembersRequest extends Message<ListRoleMembersRequest> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.ListRoleMembersRequest request = 1;
   */
  request?: ListRoleMembersRequest$1;

  constructor(data?: PartialMessage<ListRoleMembersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.ListRoleMembersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request", kind: "message", T: ListRoleMembersRequest$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRoleMembersRequest {
    return new ListRoleMembersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRoleMembersRequest {
    return new ListRoleMembersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRoleMembersRequest {
    return new ListRoleMembersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListRoleMembersRequest | PlainMessage<ListRoleMembersRequest> | undefined, b: ListRoleMembersRequest | PlainMessage<ListRoleMembersRequest> | undefined): boolean {
    return proto3.util.equals(ListRoleMembersRequest, a, b);
  }
}

/**
 * ListRoleMembersResponse is the response for ListRoleMembers.
 *
 * @generated from message redpanda.api.console.v1alpha1.ListRoleMembersResponse
 */
export class ListRoleMembersResponse extends Message<ListRoleMembersResponse> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.ListRoleMembersResponse response = 1;
   */
  response?: ListRoleMembersResponse$1;

  constructor(data?: PartialMessage<ListRoleMembersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.ListRoleMembersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "response", kind: "message", T: ListRoleMembersResponse$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRoleMembersResponse {
    return new ListRoleMembersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRoleMembersResponse {
    return new ListRoleMembersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRoleMembersResponse {
    return new ListRoleMembersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListRoleMembersResponse | PlainMessage<ListRoleMembersResponse> | undefined, b: ListRoleMembersResponse | PlainMessage<ListRoleMembersResponse> | undefined): boolean {
    return proto3.util.equals(ListRoleMembersResponse, a, b);
  }
}

/**
 * UpdateRoleMembershipRequest is the request to UpdateRoleMembership.
 *
 * @generated from message redpanda.api.console.v1alpha1.UpdateRoleMembershipRequest
 */
export class UpdateRoleMembershipRequest extends Message<UpdateRoleMembershipRequest> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.UpdateRoleMembershipRequest request = 1;
   */
  request?: UpdateRoleMembershipRequest$1;

  constructor(data?: PartialMessage<UpdateRoleMembershipRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.UpdateRoleMembershipRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "request", kind: "message", T: UpdateRoleMembershipRequest$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoleMembershipRequest {
    return new UpdateRoleMembershipRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoleMembershipRequest {
    return new UpdateRoleMembershipRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoleMembershipRequest {
    return new UpdateRoleMembershipRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoleMembershipRequest | PlainMessage<UpdateRoleMembershipRequest> | undefined, b: UpdateRoleMembershipRequest | PlainMessage<UpdateRoleMembershipRequest> | undefined): boolean {
    return proto3.util.equals(UpdateRoleMembershipRequest, a, b);
  }
}

/**
 * UpdateRoleMembershipResponse is the response for UpdateRoleMembership.
 *
 * @generated from message redpanda.api.console.v1alpha1.UpdateRoleMembershipResponse
 */
export class UpdateRoleMembershipResponse extends Message<UpdateRoleMembershipResponse> {
  /**
   * @generated from field: redpanda.api.dataplane.v1.UpdateRoleMembershipResponse response = 1;
   */
  response?: UpdateRoleMembershipResponse$1;

  constructor(data?: PartialMessage<UpdateRoleMembershipResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "redpanda.api.console.v1alpha1.UpdateRoleMembershipResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "response", kind: "message", T: UpdateRoleMembershipResponse$1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoleMembershipResponse {
    return new UpdateRoleMembershipResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoleMembershipResponse {
    return new UpdateRoleMembershipResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoleMembershipResponse {
    return new UpdateRoleMembershipResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoleMembershipResponse | PlainMessage<UpdateRoleMembershipResponse> | undefined, b: UpdateRoleMembershipResponse | PlainMessage<UpdateRoleMembershipResponse> | undefined): boolean {
    return proto3.util.equals(UpdateRoleMembershipResponse, a, b);
  }
}


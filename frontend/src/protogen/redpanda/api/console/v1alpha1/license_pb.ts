// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/console/v1alpha1/license.proto (package redpanda.api.console.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_redpanda_api_auth_v1_authorization } from "../../auth/v1/authorization_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/console/v1alpha1/license.proto.
 */
export const file_redpanda_api_console_v1alpha1_license: GenFile = /*@__PURE__*/
  fileDesc("CityZWRwYW5kYS9hcGkvY29uc29sZS92MWFscGhhMS9saWNlbnNlLnByb3RvEh1yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMSLHAgoHTGljZW5zZRI9CgZzb3VyY2UYASABKA4yLS5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5MaWNlbnNlLlNvdXJjZRI5CgR0eXBlGAIgASgOMisucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuTGljZW5zZS5UeXBlEhIKCmV4cGlyZXNfYXQYAyABKAMiVwoGU291cmNlEhYKElNPVVJDRV9VTlNQRUNJRklFRBAAEhsKF1NPVVJDRV9SRURQQU5EQV9DT05TT0xFEAESGAoUU09VUkNFX1JFRFBBTkRBX0NPUkUQAiJVCgRUeXBlEhQKEFRZUEVfVU5TUEVDSUZJRUQQABISCg5UWVBFX0NPTU1VTklUWRABEg4KClRZUEVfVFJJQUwQAhITCg9UWVBFX0VOVEVSUFJJU0UQAyIVChNMaXN0TGljZW5zZXNSZXF1ZXN0InsKFExpc3RMaWNlbnNlc1Jlc3BvbnNlEjgKCGxpY2Vuc2VzGAEgAygLMiYucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuTGljZW5zZRIRCgl2aW9sYXRpb24YAiABKAgSFgoOcmVxdWlyZV9nYXRpbmcYAyABKAgiMwoRU2V0TGljZW5zZVJlcXVlc3QSHgoHbGljZW5zZRgBIAEoCUINukgKyAEBcgUQIBiACCJNChJTZXRMaWNlbnNlUmVzcG9uc2USNwoHbGljZW5zZRgBIAEoCzImLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkxpY2Vuc2UiHwodTGlzdEVudGVycHJpc2VGZWF0dXJlc1JlcXVlc3QiowMKHkxpc3RFbnRlcnByaXNlRmVhdHVyZXNSZXNwb25zZRJjCg5saWNlbnNlX3N0YXR1cxgBIAEoDjJLLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkxpc3RFbnRlcnByaXNlRmVhdHVyZXNSZXNwb25zZS5MaWNlbnNlU3RhdHVzEhEKCXZpb2xhdGlvbhgCIAEoCBJXCghmZWF0dXJlcxgDIAMoCzJFLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkxpc3RFbnRlcnByaXNlRmVhdHVyZXNSZXNwb25zZS5GZWF0dXJlGigKB0ZlYXR1cmUSDAoEbmFtZRgBIAEoCRIPCgdlbmFibGVkGAIgASgIIoUBCg1MaWNlbnNlU3RhdHVzEh4KGkxJQ0VOU0VfU1RBVFVTX1VOU1BFQ0lGSUVEEAASGAoUTElDRU5TRV9TVEFUVVNfVkFMSUQQARIaChZMSUNFTlNFX1NUQVRVU19FWFBJUkVEEAISHgoaTElDRU5TRV9TVEFUVVNfTk9UX1BSRVNFTlQQAzKzAwoOTGljZW5zZVNlcnZpY2USgQEKDExpc3RMaWNlbnNlcxIyLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkxpc3RMaWNlbnNlc1JlcXVlc3QaMy5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5MaXN0TGljZW5zZXNSZXNwb25zZSIIiqYdBAgBEAMSewoKU2V0TGljZW5zZRIwLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLlNldExpY2Vuc2VSZXF1ZXN0GjEucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuU2V0TGljZW5zZVJlc3BvbnNlIgiKph0ECAMQAxKfAQoWTGlzdEVudGVycHJpc2VGZWF0dXJlcxI8LnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkxpc3RFbnRlcnByaXNlRmVhdHVyZXNSZXF1ZXN0Gj0ucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuTGlzdEVudGVycHJpc2VGZWF0dXJlc1Jlc3BvbnNlIgiKph0ECAEQA0KtAgohY29tLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExQgxMaWNlbnNlUHJvdG9QAVpjZ2l0aHViLmNvbS9yZWRwYW5kYS1kYXRhL2NvbnNvbGUvYmFja2VuZC9wa2cvcHJvdG9nZW4vcmVkcGFuZGEvYXBpL2NvbnNvbGUvdjFhbHBoYTE7Y29uc29sZXYxYWxwaGExogIDUkFDqgIdUmVkcGFuZGEuQXBpLkNvbnNvbGUuVjFhbHBoYTHKAh1SZWRwYW5kYVxBcGlcQ29uc29sZVxWMWFscGhhMeICKVJlZHBhbmRhXEFwaVxDb25zb2xlXFYxYWxwaGExXEdQQk1ldGFkYXRh6gIgUmVkcGFuZGE6OkFwaTo6Q29uc29sZTo6VjFhbHBoYTFiBnByb3RvMw", [file_buf_validate_validate, file_redpanda_api_auth_v1_authorization]);

/**
 * @generated from message redpanda.api.console.v1alpha1.License
 */
export type License = Message<"redpanda.api.console.v1alpha1.License"> & {
  /**
   * Source is where the license is used (e.g. Redpanda Cluster, Console).
   *
   * @generated from field: redpanda.api.console.v1alpha1.License.Source source = 1;
   */
  source: License_Source;

  /**
   * Type is the type of license (community, trial, enterprise).
   *
   * @generated from field: redpanda.api.console.v1alpha1.License.Type type = 2;
   */
  type: License_Type;

  /**
   * UnixEpochSeconds is the timestamp when the license is going to expire.
   *
   * @generated from field: int64 expires_at = 3;
   */
  expiresAt: bigint;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.License.
 * Use `create(LicenseSchema)` to create a new message.
 */
export const LicenseSchema: GenMessage<License> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_license, 0);

/**
 * @generated from enum redpanda.api.console.v1alpha1.License.Source
 */
export enum License_Source {
  /**
   * @generated from enum value: SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SOURCE_REDPANDA_CONSOLE = 1;
   */
  REDPANDA_CONSOLE = 1,

  /**
   * @generated from enum value: SOURCE_REDPANDA_CORE = 2;
   */
  REDPANDA_CORE = 2,
}

/**
 * Describes the enum redpanda.api.console.v1alpha1.License.Source.
 */
export const License_SourceSchema: GenEnum<License_Source> = /*@__PURE__*/
  enumDesc(file_redpanda_api_console_v1alpha1_license, 0, 0);

/**
 * @generated from enum redpanda.api.console.v1alpha1.License.Type
 */
export enum License_Type {
  /**
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TYPE_COMMUNITY = 1;
   */
  COMMUNITY = 1,

  /**
   * @generated from enum value: TYPE_TRIAL = 2;
   */
  TRIAL = 2,

  /**
   * @generated from enum value: TYPE_ENTERPRISE = 3;
   */
  ENTERPRISE = 3,
}

/**
 * Describes the enum redpanda.api.console.v1alpha1.License.Type.
 */
export const License_TypeSchema: GenEnum<License_Type> = /*@__PURE__*/
  enumDesc(file_redpanda_api_console_v1alpha1_license, 0, 1);

/**
 * @generated from message redpanda.api.console.v1alpha1.ListLicensesRequest
 */
export type ListLicensesRequest = Message<"redpanda.api.console.v1alpha1.ListLicensesRequest"> & {
};

/**
 * Describes the message redpanda.api.console.v1alpha1.ListLicensesRequest.
 * Use `create(ListLicensesRequestSchema)` to create a new message.
 */
export const ListLicensesRequestSchema: GenMessage<ListLicensesRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_license, 1);

/**
 * @generated from message redpanda.api.console.v1alpha1.ListLicensesResponse
 */
export type ListLicensesResponse = Message<"redpanda.api.console.v1alpha1.ListLicensesResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.console.v1alpha1.License licenses = 1;
   */
  licenses: License[];

  /**
   * @generated from field: bool violation = 2;
   */
  violation: boolean;

  /**
   * @generated from field: bool require_gating = 3;
   */
  requireGating: boolean;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.ListLicensesResponse.
 * Use `create(ListLicensesResponseSchema)` to create a new message.
 */
export const ListLicensesResponseSchema: GenMessage<ListLicensesResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_license, 2);

/**
 * @generated from message redpanda.api.console.v1alpha1.SetLicenseRequest
 */
export type SetLicenseRequest = Message<"redpanda.api.console.v1alpha1.SetLicenseRequest"> & {
  /**
   * @generated from field: string license = 1;
   */
  license: string;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.SetLicenseRequest.
 * Use `create(SetLicenseRequestSchema)` to create a new message.
 */
export const SetLicenseRequestSchema: GenMessage<SetLicenseRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_license, 3);

/**
 * @generated from message redpanda.api.console.v1alpha1.SetLicenseResponse
 */
export type SetLicenseResponse = Message<"redpanda.api.console.v1alpha1.SetLicenseResponse"> & {
  /**
   * @generated from field: redpanda.api.console.v1alpha1.License license = 1;
   */
  license?: License;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.SetLicenseResponse.
 * Use `create(SetLicenseResponseSchema)` to create a new message.
 */
export const SetLicenseResponseSchema: GenMessage<SetLicenseResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_license, 4);

/**
 * @generated from message redpanda.api.console.v1alpha1.ListEnterpriseFeaturesRequest
 */
export type ListEnterpriseFeaturesRequest = Message<"redpanda.api.console.v1alpha1.ListEnterpriseFeaturesRequest"> & {
};

/**
 * Describes the message redpanda.api.console.v1alpha1.ListEnterpriseFeaturesRequest.
 * Use `create(ListEnterpriseFeaturesRequestSchema)` to create a new message.
 */
export const ListEnterpriseFeaturesRequestSchema: GenMessage<ListEnterpriseFeaturesRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_license, 5);

/**
 * @generated from message redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse
 */
export type ListEnterpriseFeaturesResponse = Message<"redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse"> & {
  /**
   * LicenseStatus reports the status of the installed license in the Redpanda cluster.
   *
   * @generated from field: redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse.LicenseStatus license_status = 1;
   */
  licenseStatus: ListEnterpriseFeaturesResponse_LicenseStatus;

  /**
   * Violation is true if license_status is not 'valid' AND one or more enterprise features are enabled
   *
   * @generated from field: bool violation = 2;
   */
  violation: boolean;

  /**
   * Features is a ist of enterprise features (name and whether in use)
   *
   * @generated from field: repeated redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse.Feature features = 3;
   */
  features: ListEnterpriseFeaturesResponse_Feature[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse.
 * Use `create(ListEnterpriseFeaturesResponseSchema)` to create a new message.
 */
export const ListEnterpriseFeaturesResponseSchema: GenMessage<ListEnterpriseFeaturesResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_license, 6);

/**
 * Feature is an enterprise feature and a bool indicating whether it's in use.
 *
 * @generated from message redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse.Feature
 */
export type ListEnterpriseFeaturesResponse_Feature = Message<"redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse.Feature"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse.Feature.
 * Use `create(ListEnterpriseFeaturesResponse_FeatureSchema)` to create a new message.
 */
export const ListEnterpriseFeaturesResponse_FeatureSchema: GenMessage<ListEnterpriseFeaturesResponse_Feature> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_license, 6, 0);

/**
 * @generated from enum redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse.LicenseStatus
 */
export enum ListEnterpriseFeaturesResponse_LicenseStatus {
  /**
   * @generated from enum value: LICENSE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: LICENSE_STATUS_VALID = 1;
   */
  VALID = 1,

  /**
   * @generated from enum value: LICENSE_STATUS_EXPIRED = 2;
   */
  EXPIRED = 2,

  /**
   * @generated from enum value: LICENSE_STATUS_NOT_PRESENT = 3;
   */
  NOT_PRESENT = 3,
}

/**
 * Describes the enum redpanda.api.console.v1alpha1.ListEnterpriseFeaturesResponse.LicenseStatus.
 */
export const ListEnterpriseFeaturesResponse_LicenseStatusSchema: GenEnum<ListEnterpriseFeaturesResponse_LicenseStatus> = /*@__PURE__*/
  enumDesc(file_redpanda_api_console_v1alpha1_license, 6, 0);

/**
 * @generated from service redpanda.api.console.v1alpha1.LicenseService
 */
export const LicenseService: GenService<{
  /**
   * ListLicenses lists all the roles based on optional filter.
   *
   * @generated from rpc redpanda.api.console.v1alpha1.LicenseService.ListLicenses
   */
  listLicenses: {
    methodKind: "unary";
    input: typeof ListLicensesRequestSchema;
    output: typeof ListLicensesResponseSchema;
  },
  /**
   * SetLicense installs a new license on the Redpanda cluster.
   * This endpoint only works if the Redpanda Admin API is configured.
   *
   * @generated from rpc redpanda.api.console.v1alpha1.LicenseService.SetLicense
   */
  setLicense: {
    methodKind: "unary";
    input: typeof SetLicenseRequestSchema;
    output: typeof SetLicenseResponseSchema;
  },
  /**
   * ListEnterpriseFeatures reports the license status and Redpanda enterprise features in use.
   * This can only be reported if the Redpanda Admin API is configured and supports this request.
   *
   * @generated from rpc redpanda.api.console.v1alpha1.LicenseService.ListEnterpriseFeatures
   */
  listEnterpriseFeatures: {
    methodKind: "unary";
    input: typeof ListEnterpriseFeaturesRequestSchema;
    output: typeof ListEnterpriseFeaturesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_api_console_v1alpha1_license, 0);


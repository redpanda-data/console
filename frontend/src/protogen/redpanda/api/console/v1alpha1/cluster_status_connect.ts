// @generated by protoc-gen-connect-es v1.2.0 with parameter "target=ts,import_extension="
// @generated from file redpanda/api/console/v1alpha1/cluster_status.proto (package redpanda.api.console.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetConsoleInfoRequest, GetConsoleInfoResponse, GetKafkaAuthorizerInfoRequest, GetKafkaAuthorizerInfoResponse, GetKafkaConnectInfoRequest, GetKafkaConnectInfoResponse, GetKafkaInfoRequest, GetKafkaInfoResponse, GetRedpandaInfoRequest, GetRedpandaInfoResponse, GetRedpandaPartitionBalancerStatusRequest, GetRedpandaPartitionBalancerStatusResponse, GetSchemaRegistryInfoRequest, GetSchemaRegistryInfoResponse } from "./cluster_status_pb";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ClusterStatusService provides atomic endpoints to retrieve status
 * information for each cluster component. Each RPC returns a complete
 * resource or a proper gRPC error if the underlying check failed.
 *
 * @generated from service redpanda.api.console.v1alpha1.ClusterStatusService
 */
export const ClusterStatusService = {
  typeName: "redpanda.api.console.v1alpha1.ClusterStatusService",
  methods: {
    /**
     * GetKafkaInfo returns general Kafka cluster information that can be
     * retrieved via the Kafka API.
     *
     * @generated from rpc redpanda.api.console.v1alpha1.ClusterStatusService.GetKafkaInfo
     */
    getKafkaInfo: {
      name: "GetKafkaInfo",
      I: GetKafkaInfoRequest,
      O: GetKafkaInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetKafkaAuthorizerInfo returns information about Kafka's authorizer.
     * If the authorizer cannot be queried (for example due to permission errors),
     * this RPC should return a gRPC error.
     *
     * @generated from rpc redpanda.api.console.v1alpha1.ClusterStatusService.GetKafkaAuthorizerInfo
     */
    getKafkaAuthorizerInfo: {
      name: "GetKafkaAuthorizerInfo",
      I: GetKafkaAuthorizerInfoRequest,
      O: GetKafkaAuthorizerInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetRedpandaInfo returns information from the Redpanda admin API.
     *
     * @generated from rpc redpanda.api.console.v1alpha1.ClusterStatusService.GetRedpandaInfo
     */
    getRedpandaInfo: {
      name: "GetRedpandaInfo",
      I: GetRedpandaInfoRequest,
      O: GetRedpandaInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc redpanda.api.console.v1alpha1.ClusterStatusService.GetRedpandaPartitionBalancerStatus
     */
    getRedpandaPartitionBalancerStatus: {
      name: "GetRedpandaPartitionBalancerStatus",
      I: GetRedpandaPartitionBalancerStatusRequest,
      O: GetRedpandaPartitionBalancerStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetConsoleInfo returns version and build information about the Console.
     *
     * @generated from rpc redpanda.api.console.v1alpha1.ClusterStatusService.GetConsoleInfo
     */
    getConsoleInfo: {
      name: "GetConsoleInfo",
      I: GetConsoleInfoRequest,
      O: GetConsoleInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetKafkaConnectInfo returns information about the configured Kafka Connect clusters.
     *
     * @generated from rpc redpanda.api.console.v1alpha1.ClusterStatusService.GetKafkaConnectInfo
     */
    getKafkaConnectInfo: {
      name: "GetKafkaConnectInfo",
      I: GetKafkaConnectInfoRequest,
      O: GetKafkaConnectInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetSchemaRegistryInfo returns information about the Schema Registry.
     *
     * @generated from rpc redpanda.api.console.v1alpha1.ClusterStatusService.GetSchemaRegistryInfo
     */
    getSchemaRegistryInfo: {
      name: "GetSchemaRegistryInfo",
      I: GetSchemaRegistryInfoRequest,
      O: GetSchemaRegistryInfoResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;


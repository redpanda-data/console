// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/api/console/v1alpha1/debug_bundle.proto (package redpanda.api.console.v1alpha1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_redpanda_api_auth_v1_authorization } from "../../auth/v1/authorization_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/api/console/v1alpha1/debug_bundle.proto.
 */
export const file_redpanda_api_console_v1alpha1_debug_bundle: GenFile = /*@__PURE__*/
  fileDesc("CjByZWRwYW5kYS9hcGkvY29uc29sZS92MWFscGhhMS9kZWJ1Z19idW5kbGUucHJvdG8SHXJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExIoUCCglTQ1JBTUF1dGgSHwoIdXNlcm5hbWUYASABKAlCDbpICsgBAXIFEAEYgAESHwoIcGFzc3dvcmQYAiABKAlCDbpICsgBAXIFEAEYgAESVAoJbWVjaGFuaXNtGAMgASgOMjIucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuU0NSQU1BdXRoLk1lY2hhbmlzbUINukgKyAEBggEEEAEgACJgCglNZWNoYW5pc20SGQoVTUVDSEFOSVNNX1VOU1BFQ0lGSUVEEAASGwoXTUVDSEFOSVNNX1NDUkFNX1NIQV8yNTYQARIbChdNRUNIQU5JU01fU0NSQU1fU0hBXzUxMhACIpMFChhDcmVhdGVEZWJ1Z0J1bmRsZVJlcXVlc3QSOQoFc2NyYW0YASABKAsyKC5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5TQ1JBTUF1dGhIABISCgpicm9rZXJfaWRzGAMgAygFEjEKIGNvbnRyb2xsZXJfbG9nc19zaXplX2xpbWl0X2J5dGVzGAQgASgFQge6SAQaAigAEi8KGWNwdV9wcm9maWxlcl93YWl0X3NlY29uZHMYBSABKAVCB7pIBBoCKA9IAYgBARIuCgpsb2dzX3NpbmNlGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBImChVsb2dzX3NpemVfbGltaXRfYnl0ZXMYByABKAVCB7pIBBoCKAASLgoKbG9nc191bnRpbBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKQoYbWV0cmljc19pbnRlcnZhbF9zZWNvbmRzGAkgASgFQge6SAQaAigAEiAKD21ldHJpY3Nfc2FtcGxlcxgKIAEoBUIHukgEGgIoABITCgt0bHNfZW5hYmxlZBgLIAEoCBIgChh0bHNfaW5zZWN1cmVfc2tpcF92ZXJpZnkYDCABKAgSLgoJbmFtZXNwYWNlGA0gASgJQhu6SBhyFhj9ATIRXihbYS16QS1aMC05LV0qKSQSRAoObGFiZWxfc2VsZWN0b3IYDiADKAsyLC5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5MYWJlbFNlbGVjdG9yEhIKCnBhcnRpdGlvbnMYDyADKAlCEAoOYXV0aGVudGljYXRpb25CHAoaX2NwdV9wcm9maWxlcl93YWl0X3NlY29uZHMiyAEKDUxhYmVsU2VsZWN0b3ISbwoDa2V5GAEgASgJQmK6SF9yXRi9AjJYXlthLXpBLVowLTldKFthLXpBLVowLTlcLV8uXSpbYS16QS1aMC05XSk/KC9bYS16QS1aMC05XShbYS16QS1aMC05XC1fLl0qW2EtekEtWjAtOV0pPyk/JBJGCgV2YWx1ZRgCIAEoCUI3ukg0cjIYPzIuXihbYS16QS1aMC05XShbYS16QS1aMC05XC1fLl0qW2EtekEtWjAtOV0pPyk/JCIrChlDcmVhdGVEZWJ1Z0J1bmRsZVJlc3BvbnNlEg4KBmpvYl9pZBgBIAEoCSIxChtHZXREZWJ1Z0J1bmRsZVN0YXR1c1JlcXVlc3QSEgoKYnJva2VyX2lkcxgBIAMoBSLlAgoRRGVidWdCdW5kbGVTdGF0dXMSEQoJYnJva2VyX2lkGAEgASgFEg4KBmpvYl9pZBgCIAEoCRJHCgZzdGF0dXMYAyABKA4yNy5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5EZWJ1Z0J1bmRsZVN0YXR1cy5TdGF0dXMSLgoKY3JlYXRlZF9hdBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoIZmlsZW5hbWUYBSABKAkSEgoKc2l6ZV9ieXRlcxgGIAEoAxIOCgZzdGRvdXQYByADKAkSDgoGc3RkZXJyGAggAygJIm4KBlN0YXR1cxIWChJTVEFUVVNfVU5TUEVDSUZJRUQQABISCg5TVEFUVVNfUlVOTklORxABEhIKDlNUQVRVU19TVUNDRVNTEAISEgoOU1RBVFVTX0VYUElSRUQQAxIQCgxTVEFUVVNfRVJST1IQBCKQAwocR2V0RGVidWdCdW5kbGVTdGF0dXNSZXNwb25zZRJsCg9icm9rZXJfc3RhdHVzZXMYASADKAsyUy5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5HZXREZWJ1Z0J1bmRsZVN0YXR1c1Jlc3BvbnNlLkRlYnVnQnVuZGxlQnJva2VyU3RhdHVzEhkKEWhhc19kZWJ1Z19wcm9jZXNzGAIgASgIGuYBChdEZWJ1Z0J1bmRsZUJyb2tlclN0YXR1cxIRCglicm9rZXJfaWQYASABKAUSEgoKYnJva2VyX3VybBgCIAEoCRITCgtzcGVjdWxhdGl2ZRgDIAEoCBI7CgVlcnJvchgEIAEoCzIqLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkJ1bmRsZUVycm9ySAASSQoNYnVuZGxlX3N0YXR1cxgFIAEoCzIwLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkRlYnVnQnVuZGxlU3RhdHVzSABCBwoFdmFsdWUi2QIKH0NhbmNlbERlYnVnQnVuZGxlUHJvY2Vzc1JlcXVlc3QSoQIKBmpvYl9pZBgBIAEoCUKQAuBBArpIA8gBAcJIgwIKpQEKC3N0cmluZy51dWlkEhp2YWx1ZSBtdXN0IGJlIGEgdmFsaWQgVVVJRBp6IXJ1bGVzLnV1aWQgfHwgdGhpcyA9PSAnJyB8fCB0aGlzLm1hdGNoZXMoJ15bMC05YS1mQS1GXXs4fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXs0fS1bMC05YS1mQS1GXXsxMn0kJykKWQoRc3RyaW5nLnV1aWRfZW1wdHkSKXZhbHVlIGlzIGVtcHR5LCB3aGljaCBpcyBub3QgYSB2YWxpZCBVVUlEGhkhcnVsZXMudXVpZCB8fCB0aGlzICE9ICcnEhIKCmJyb2tlcl9pZHMYAiADKAUiXgogQ2FuY2VsRGVidWdCdW5kbGVQcm9jZXNzUmVzcG9uc2USOgoGZXJyb3JzGAEgAygLMioucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuQnVuZGxlRXJyb3IigAEKHERlbGV0ZURlYnVnQnVuZGxlRmlsZVJlcXVlc3QSEgoKZGVsZXRlX2FsbBgBIAEoCBJMCgVmaWxlcxgCIAMoCzI9LnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkRlbGV0ZURlYnVnQnVuZGxlRmlsZUZvckJyb2tlciJFCh5EZWxldGVEZWJ1Z0J1bmRsZUZpbGVGb3JCcm9rZXISEQoJYnJva2VyX2lkGAEgASgFEhAKCGZpbGVuYW1lGAIgASgJIlsKHURlbGV0ZURlYnVnQnVuZGxlRmlsZVJlc3BvbnNlEjoKBmVycm9ycxgBIAMoCzIqLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkJ1bmRsZUVycm9yIpgBCgtCdW5kbGVFcnJvchIRCglicm9rZXJfaWQYASABKAUSEgoKYnJva2VyX3VybBgCIAEoCRITCgtzcGVjdWxhdGl2ZRgDIAEoCBI8CgRjb2RlGAQgASgOMi4ucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuQnVuZGxlRXJyb3JDb2RlEg8KB21lc3NhZ2UYBSABKAkiGQoXR2V0Q2x1c3RlckhlYWx0aFJlcXVlc3Qi9AMKGEdldENsdXN0ZXJIZWFsdGhSZXNwb25zZRISCgppc19oZWFsdGh5GAEgASgIEkkKEXVuaGVhbHRoeV9yZWFzb25zGAIgAygOMi4ucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuVW5oZWFsdGh5UmVhc29uEhoKDWNvbnRyb2xsZXJfaWQYAyABKAVIAIgBARIWCg5hbGxfYnJva2VyX2lkcxgEIAMoBRIaChJvZmZsaW5lX2Jyb2tlcl9pZHMYBSADKAUSIwobYnJva2VyX2lkc19pbl9yZWNvdmVyeV9tb2RlGAYgAygFEiMKG2xlYWRlcmxlc3NfcGFydGl0aW9uc19jb3VudBgHIAEoBRJNChVsZWFkZXJsZXNzX3BhcnRpdGlvbnMYCCADKAsyLi5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5Ub3BpY1BhcnRpdGlvbnMSKQohdW5kZXJfcmVwbGljYXRlZF9wYXJ0aXRpb25zX2NvdW50GAkgASgFElMKG3VuZGVyX3JlcGxpY2F0ZWRfcGFydGl0aW9ucxgKIAMoCzIuLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLlRvcGljUGFydGl0aW9uc0IQCg5fY29udHJvbGxlcl9pZCI8Cg9Ub3BpY1BhcnRpdGlvbnMSEgoKdG9waWNfbmFtZRgBIAEoCRIVCg1wYXJ0aXRpb25faWRzGAIgAygFKqYDCg9CdW5kbGVFcnJvckNvZGUSGAoUQlVORExFX0VSUk9SX0NPREVfT0sQABItCilCVU5ETEVfRVJST1JfQ09ERV9QUk9DRVNTX0FMUkVBRFlfUlVOTklORxABEikKJUJVTkRMRV9FUlJPUl9DT0RFX1BST0NFU1NfTk9UX1JVTk5JTkcQAhIoCiRCVU5ETEVfRVJST1JfQ09ERV9JTlZBTElEX1BBUkFNRVRFUlMQAxIkCiBCVU5ETEVfRVJST1JfQ09ERV9JTlRFUk5BTF9FUlJPUhAEEiQKIEJVTkRMRV9FUlJPUl9DT0RFX1BST0NFU1NfRkFJTEVEEAUSJAogQlVORExFX0VSUk9SX0NPREVfSU5WQUxJRF9KT0JfSUQQBhIpCiVCVU5ETEVfRVJST1JfQ09ERV9QUk9DRVNTX05PVF9TVEFSVEVEEAcSLAooQlVORExFX0VSUk9SX0NPREVfUlBLX0JJTkFSWV9OT1RfUFJFU0VOVBAIEioKJkJVTkRMRV9FUlJPUl9DT0RFX0RFQlVHX0JVTkRMRV9FWFBJUkVEEAkqhQIKD1VuaGVhbHRoeVJlYXNvbhIgChxVTkhFQUxUSFlfUkVBU09OX1VOU1BFQ0lGSUVEEAASHwobVU5IRUFMVEhZX1JFQVNPTl9OT0RFU19ET1dOEAESKgomVU5IRUFMVEhZX1JFQVNPTl9MRUFERVJMRVNTX1BBUlRJVElPTlMQAhIwCixVTkhFQUxUSFlfUkVBU09OX1VOREVSX1JFUExJQ0FURURfUEFSVElUSU9OUxADEioKJlVOSEVBTFRIWV9SRUFTT05fTk9fRUxFQ1RFRF9DT05UUk9MTEVSEAQSJQohVU5IRUFMVEhZX1JFQVNPTl9OT19IRUFMVEhfUkVQT1JUEAUymgYKEkRlYnVnQnVuZGxlU2VydmljZRKNAQoQR2V0Q2x1c3RlckhlYWx0aBI2LnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkdldENsdXN0ZXJIZWFsdGhSZXF1ZXN0GjcucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuR2V0Q2x1c3RlckhlYWx0aFJlc3BvbnNlIgiKph0ECAEQAxKQAQoRQ3JlYXRlRGVidWdCdW5kbGUSNy5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5DcmVhdGVEZWJ1Z0J1bmRsZVJlcXVlc3QaOC5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5DcmVhdGVEZWJ1Z0J1bmRsZVJlc3BvbnNlIgiKph0ECAMQAxKZAQoUR2V0RGVidWdCdW5kbGVTdGF0dXMSOi5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5HZXREZWJ1Z0J1bmRsZVN0YXR1c1JlcXVlc3QaOy5yZWRwYW5kYS5hcGkuY29uc29sZS52MWFscGhhMS5HZXREZWJ1Z0J1bmRsZVN0YXR1c1Jlc3BvbnNlIgiKph0ECAMQAxKlAQoYQ2FuY2VsRGVidWdCdW5kbGVQcm9jZXNzEj4ucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuQ2FuY2VsRGVidWdCdW5kbGVQcm9jZXNzUmVxdWVzdBo/LnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkNhbmNlbERlYnVnQnVuZGxlUHJvY2Vzc1Jlc3BvbnNlIgiKph0ECAMQAxKcAQoVRGVsZXRlRGVidWdCdW5kbGVGaWxlEjsucmVkcGFuZGEuYXBpLmNvbnNvbGUudjFhbHBoYTEuRGVsZXRlRGVidWdCdW5kbGVGaWxlUmVxdWVzdBo8LnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExLkRlbGV0ZURlYnVnQnVuZGxlRmlsZVJlc3BvbnNlIgiKph0ECAMQA0KxAgohY29tLnJlZHBhbmRhLmFwaS5jb25zb2xlLnYxYWxwaGExQhBEZWJ1Z0J1bmRsZVByb3RvUAFaY2dpdGh1Yi5jb20vcmVkcGFuZGEtZGF0YS9jb25zb2xlL2JhY2tlbmQvcGtnL3Byb3RvZ2VuL3JlZHBhbmRhL2FwaS9jb25zb2xlL3YxYWxwaGExO2NvbnNvbGV2MWFscGhhMaICA1JBQ6oCHVJlZHBhbmRhLkFwaS5Db25zb2xlLlYxYWxwaGExygIdUmVkcGFuZGFcQXBpXENvbnNvbGVcVjFhbHBoYTHiAilSZWRwYW5kYVxBcGlcQ29uc29sZVxWMWFscGhhMVxHUEJNZXRhZGF0YeoCIFJlZHBhbmRhOjpBcGk6OkNvbnNvbGU6OlYxYWxwaGExYgZwcm90bzM", [file_buf_validate_validate, file_google_api_field_behavior, file_google_protobuf_timestamp, file_redpanda_api_auth_v1_authorization]);

/**
 * SCRAM Auth settings.
 *
 * @generated from message redpanda.api.console.v1alpha1.SCRAMAuth
 */
export type SCRAMAuth = Message<"redpanda.api.console.v1alpha1.SCRAMAuth"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: redpanda.api.console.v1alpha1.SCRAMAuth.Mechanism mechanism = 3;
   */
  mechanism: SCRAMAuth_Mechanism;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.SCRAMAuth.
 * Use `create(SCRAMAuthSchema)` to create a new message.
 */
export const SCRAMAuthSchema: GenMessage<SCRAMAuth> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 0);

/**
 * @generated from enum redpanda.api.console.v1alpha1.SCRAMAuth.Mechanism
 */
export enum SCRAMAuth_Mechanism {
  /**
   * @generated from enum value: MECHANISM_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: MECHANISM_SCRAM_SHA_256 = 1;
   */
  SCRAM_SHA_256 = 1,

  /**
   * @generated from enum value: MECHANISM_SCRAM_SHA_512 = 2;
   */
  SCRAM_SHA_512 = 2,
}

/**
 * Describes the enum redpanda.api.console.v1alpha1.SCRAMAuth.Mechanism.
 */
export const SCRAMAuth_MechanismSchema: GenEnum<SCRAMAuth_Mechanism> = /*@__PURE__*/
  enumDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 0, 0);

/**
 * Request to start the creation of debug bundle process with given configuration parameters.
 *
 * @generated from message redpanda.api.console.v1alpha1.CreateDebugBundleRequest
 */
export type CreateDebugBundleRequest = Message<"redpanda.api.console.v1alpha1.CreateDebugBundleRequest"> & {
  /**
   * Optional authentication settings to use for the request.
   *
   * @generated from oneof redpanda.api.console.v1alpha1.CreateDebugBundleRequest.authentication
   */
  authentication: {
    /**
     * @generated from field: redpanda.api.console.v1alpha1.SCRAMAuth scram = 1;
     */
    value: SCRAMAuth;
    case: "scram";
  } | { case: undefined; value?: undefined };

  /**
   * Optional broker IDs. Do not set / leave empty to create for all.
   *
   * @generated from field: repeated int32 broker_ids = 3;
   */
  brokerIds: number[];

  /**
   * The size limit of the controller logs that can be stored in the bundle.
   *
   * @generated from field: int32 controller_logs_size_limit_bytes = 4;
   */
  controllerLogsSizeLimitBytes: number;

  /**
   * For how long to collect samples for the CPU profiler
   *
   * @generated from field: optional int32 cpu_profiler_wait_seconds = 5;
   */
  cpuProfilerWaitSeconds?: number;

  /**
   * Include logs dated from specified date onward.
   *
   * @generated from field: google.protobuf.Timestamp logs_since = 6;
   */
  logsSince?: Timestamp;

  /**
   * Read the logs until the given size is reached.
   *
   * @generated from field: int32 logs_size_limit_bytes = 7;
   */
  logsSizeLimitBytes: number;

  /**
   * Include logs older than the specified date.
   *
   * @generated from field: google.protobuf.Timestamp logs_until = 8;
   */
  logsUntil?: Timestamp;

  /**
   * Interval between metrics snapshots.
   *
   * @generated from field: int32 metrics_interval_seconds = 9;
   */
  metricsIntervalSeconds: number;

  /**
   * Interval between metrics snapshots.
   *
   * @generated from field: int32 metrics_samples = 10;
   */
  metricsSamples: number;

  /**
   * @generated from field: bool tls_enabled = 11;
   */
  tlsEnabled: boolean;

  /**
   * @generated from field: bool tls_insecure_skip_verify = 12;
   */
  tlsInsecureSkipVerify: boolean;

  /**
   * @generated from field: string namespace = 13;
   */
  namespace: string;

  /**
   * Label selector configuration properties.
   *
   * @generated from field: repeated redpanda.api.console.v1alpha1.LabelSelector label_selector = 14;
   */
  labelSelector: LabelSelector[];

  /**
   * Partitions. When provided, rpk saves extra admin API requests for those partitions.
   * Optional.
   * In format {namespace/}topic/{partition ids} where namespace is optional and will be replaced with "kafka" if not provided.
   * Partition IDs is comma separated numbers.
   * kafka/foo/1,2,3. also there can be multiple of those so
   * ['kafka/foo/1,2,3', 'private/baz/3.4.5']
   *
   * @generated from field: repeated string partitions = 15;
   */
  partitions: string[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.CreateDebugBundleRequest.
 * Use `create(CreateDebugBundleRequestSchema)` to create a new message.
 */
export const CreateDebugBundleRequestSchema: GenMessage<CreateDebugBundleRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 1);

/**
 * @generated from message redpanda.api.console.v1alpha1.LabelSelector
 */
export type LabelSelector = Message<"redpanda.api.console.v1alpha1.LabelSelector"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.LabelSelector.
 * Use `create(LabelSelectorSchema)` to create a new message.
 */
export const LabelSelectorSchema: GenMessage<LabelSelector> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 2);

/**
 * Response to CreateDebugBundle.
 *
 * @generated from message redpanda.api.console.v1alpha1.CreateDebugBundleResponse
 */
export type CreateDebugBundleResponse = Message<"redpanda.api.console.v1alpha1.CreateDebugBundleResponse"> & {
  /**
   * Job ID. UUID.
   *
   * @generated from field: string job_id = 1;
   */
  jobId: string;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.CreateDebugBundleResponse.
 * Use `create(CreateDebugBundleResponseSchema)` to create a new message.
 */
export const CreateDebugBundleResponseSchema: GenMessage<CreateDebugBundleResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 3);

/**
 * Gets status of debug bundle progress.
 *
 * @generated from message redpanda.api.console.v1alpha1.GetDebugBundleStatusRequest
 */
export type GetDebugBundleStatusRequest = Message<"redpanda.api.console.v1alpha1.GetDebugBundleStatusRequest"> & {
  /**
   * Optional broker IDs to get. If not set / empty get all.
   *
   * @generated from field: repeated int32 broker_ids = 1;
   */
  brokerIds: number[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.GetDebugBundleStatusRequest.
 * Use `create(GetDebugBundleStatusRequestSchema)` to create a new message.
 */
export const GetDebugBundleStatusRequestSchema: GenMessage<GetDebugBundleStatusRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 4);

/**
 * @generated from message redpanda.api.console.v1alpha1.DebugBundleStatus
 */
export type DebugBundleStatus = Message<"redpanda.api.console.v1alpha1.DebugBundleStatus"> & {
  /**
   * The broker ID.
   *
   * @generated from field: int32 broker_id = 1;
   */
  brokerId: number;

  /**
   * The job UUID of this process.
   *
   * @generated from field: string job_id = 2;
   */
  jobId: string;

  /**
   * The status of the job.
   *
   * @generated from field: redpanda.api.console.v1alpha1.DebugBundleStatus.Status status = 3;
   */
  status: DebugBundleStatus_Status;

  /**
   * When the job was started.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * Path in API to get the file.
   *
   * @generated from field: string filename = 5;
   */
  filename: string;

  /**
   * Size of the debug bundle zip file.
   *
   * @generated from field: int64 size_bytes = 6;
   */
  sizeBytes: bigint;

  /**
   * Only filled in once the process completes.  Content of stdout from rpk.
   *
   * @generated from field: repeated string stdout = 7;
   */
  stdout: string[];

  /**
   * Only filled in once the process completes.  Content of stderr from rpk.
   *
   * @generated from field: repeated string stderr = 8;
   */
  stderr: string[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.DebugBundleStatus.
 * Use `create(DebugBundleStatusSchema)` to create a new message.
 */
export const DebugBundleStatusSchema: GenMessage<DebugBundleStatus> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 5);

/**
 * @generated from enum redpanda.api.console.v1alpha1.DebugBundleStatus.Status
 */
export enum DebugBundleStatus_Status {
  /**
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATUS_RUNNING = 1;
   */
  RUNNING = 1,

  /**
   * @generated from enum value: STATUS_SUCCESS = 2;
   */
  SUCCESS = 2,

  /**
   * There is a cluster config that permits users to set a TTL on the generated bundle.
   * By default there is no expiration, but a user can set it to say "expire 1 day after it's generated" so once that day passes,
   * the service will clean up the bundle from disk and mark that job as expired.
   *
   * @generated from enum value: STATUS_EXPIRED = 3;
   */
  EXPIRED = 3,

  /**
   * @generated from enum value: STATUS_ERROR = 4;
   */
  ERROR = 4,
}

/**
 * Describes the enum redpanda.api.console.v1alpha1.DebugBundleStatus.Status.
 */
export const DebugBundleStatus_StatusSchema: GenEnum<DebugBundleStatus_Status> = /*@__PURE__*/
  enumDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 5, 0);

/**
 * The response to GetDebugBundleStatus.
 *
 * @generated from message redpanda.api.console.v1alpha1.GetDebugBundleStatusResponse
 */
export type GetDebugBundleStatusResponse = Message<"redpanda.api.console.v1alpha1.GetDebugBundleStatusResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.console.v1alpha1.GetDebugBundleStatusResponse.DebugBundleBrokerStatus broker_statuses = 1;
   */
  brokerStatuses: GetDebugBundleStatusResponse_DebugBundleBrokerStatus[];

  /**
   * true if any of the brokers have debug bundle process
   * status regardless of error state
   * false if we get "debug bundle process not started" error
   * for all brokers
   *
   * @generated from field: bool has_debug_process = 2;
   */
  hasDebugProcess: boolean;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.GetDebugBundleStatusResponse.
 * Use `create(GetDebugBundleStatusResponseSchema)` to create a new message.
 */
export const GetDebugBundleStatusResponseSchema: GenMessage<GetDebugBundleStatusResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 6);

/**
 * @generated from message redpanda.api.console.v1alpha1.GetDebugBundleStatusResponse.DebugBundleBrokerStatus
 */
export type GetDebugBundleStatusResponse_DebugBundleBrokerStatus = Message<"redpanda.api.console.v1alpha1.GetDebugBundleStatusResponse.DebugBundleBrokerStatus"> & {
  /**
   * The broker ID.
   *
   * @generated from field: int32 broker_id = 1;
   */
  brokerId: number;

  /**
   * The broker URL used to get the status.
   *
   * @generated from field: string broker_url = 2;
   */
  brokerUrl: string;

  /**
   * Whether the broker URL was determined speculatively.
   *
   * @generated from field: bool speculative = 3;
   */
  speculative: boolean;

  /**
   * The value of the status, either Bundle Error or status.
   *
   * @generated from oneof redpanda.api.console.v1alpha1.GetDebugBundleStatusResponse.DebugBundleBrokerStatus.value
   */
  value: {
    /**
     * @generated from field: redpanda.api.console.v1alpha1.BundleError error = 4;
     */
    value: BundleError;
    case: "error";
  } | {
    /**
     * @generated from field: redpanda.api.console.v1alpha1.DebugBundleStatus bundle_status = 5;
     */
    value: DebugBundleStatus;
    case: "bundleStatus";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.api.console.v1alpha1.GetDebugBundleStatusResponse.DebugBundleBrokerStatus.
 * Use `create(GetDebugBundleStatusResponse_DebugBundleBrokerStatusSchema)` to create a new message.
 */
export const GetDebugBundleStatusResponse_DebugBundleBrokerStatusSchema: GenMessage<GetDebugBundleStatusResponse_DebugBundleBrokerStatus> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 6, 0);

/**
 * @generated from message redpanda.api.console.v1alpha1.CancelDebugBundleProcessRequest
 */
export type CancelDebugBundleProcessRequest = Message<"redpanda.api.console.v1alpha1.CancelDebugBundleProcessRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * Optional broker IDs. Do not set / empty for all.
   *
   * @generated from field: repeated int32 broker_ids = 2;
   */
  brokerIds: number[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.CancelDebugBundleProcessRequest.
 * Use `create(CancelDebugBundleProcessRequestSchema)` to create a new message.
 */
export const CancelDebugBundleProcessRequestSchema: GenMessage<CancelDebugBundleProcessRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 7);

/**
 * Response for CancelDebugBundleProcess.
 *
 * @generated from message redpanda.api.console.v1alpha1.CancelDebugBundleProcessResponse
 */
export type CancelDebugBundleProcessResponse = Message<"redpanda.api.console.v1alpha1.CancelDebugBundleProcessResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.console.v1alpha1.BundleError errors = 1;
   */
  errors: BundleError[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.CancelDebugBundleProcessResponse.
 * Use `create(CancelDebugBundleProcessResponseSchema)` to create a new message.
 */
export const CancelDebugBundleProcessResponseSchema: GenMessage<CancelDebugBundleProcessResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 8);

/**
 * Request for DeleteDebugBundleFile.
 *
 * @generated from message redpanda.api.console.v1alpha1.DeleteDebugBundleFileRequest
 */
export type DeleteDebugBundleFileRequest = Message<"redpanda.api.console.v1alpha1.DeleteDebugBundleFileRequest"> & {
  /**
   * optionally delete all
   * overrides individual settings
   *
   * @generated from field: bool delete_all = 1;
   */
  deleteAll: boolean;

  /**
   * @generated from field: repeated redpanda.api.console.v1alpha1.DeleteDebugBundleFileForBroker files = 2;
   */
  files: DeleteDebugBundleFileForBroker[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.DeleteDebugBundleFileRequest.
 * Use `create(DeleteDebugBundleFileRequestSchema)` to create a new message.
 */
export const DeleteDebugBundleFileRequestSchema: GenMessage<DeleteDebugBundleFileRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 9);

/**
 * Parameters for DeleteDebugBundleFileRequest.
 *
 * @generated from message redpanda.api.console.v1alpha1.DeleteDebugBundleFileForBroker
 */
export type DeleteDebugBundleFileForBroker = Message<"redpanda.api.console.v1alpha1.DeleteDebugBundleFileForBroker"> & {
  /**
   * @generated from field: int32 broker_id = 1;
   */
  brokerId: number;

  /**
   * @generated from field: string filename = 2;
   */
  filename: string;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.DeleteDebugBundleFileForBroker.
 * Use `create(DeleteDebugBundleFileForBrokerSchema)` to create a new message.
 */
export const DeleteDebugBundleFileForBrokerSchema: GenMessage<DeleteDebugBundleFileForBroker> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 10);

/**
 * Response for DeleteDebugBundleFile.
 *
 * @generated from message redpanda.api.console.v1alpha1.DeleteDebugBundleFileResponse
 */
export type DeleteDebugBundleFileResponse = Message<"redpanda.api.console.v1alpha1.DeleteDebugBundleFileResponse"> & {
  /**
   * @generated from field: repeated redpanda.api.console.v1alpha1.BundleError errors = 1;
   */
  errors: BundleError[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.DeleteDebugBundleFileResponse.
 * Use `create(DeleteDebugBundleFileResponseSchema)` to create a new message.
 */
export const DeleteDebugBundleFileResponseSchema: GenMessage<DeleteDebugBundleFileResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 11);

/**
 * Error details for various responses and operations.
 *
 * @generated from message redpanda.api.console.v1alpha1.BundleError
 */
export type BundleError = Message<"redpanda.api.console.v1alpha1.BundleError"> & {
  /**
   * The broker ID.
   *
   * @generated from field: int32 broker_id = 1;
   */
  brokerId: number;

  /**
   * The broker URL used to get the status.
   *
   * @generated from field: string broker_url = 2;
   */
  brokerUrl: string;

  /**
   * Whether the broker URL was determined speculatively.
   *
   * @generated from field: bool speculative = 3;
   */
  speculative: boolean;

  /**
   * The error code.
   *
   * @generated from field: redpanda.api.console.v1alpha1.BundleErrorCode code = 4;
   */
  code: BundleErrorCode;

  /**
   * Additional information
   *
   * @generated from field: string message = 5;
   */
  message: string;
};

/**
 * Describes the message redpanda.api.console.v1alpha1.BundleError.
 * Use `create(BundleErrorSchema)` to create a new message.
 */
export const BundleErrorSchema: GenMessage<BundleError> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 12);

/**
 * Request for GetClusterHealth call.
 *
 * @generated from message redpanda.api.console.v1alpha1.GetClusterHealthRequest
 */
export type GetClusterHealthRequest = Message<"redpanda.api.console.v1alpha1.GetClusterHealthRequest"> & {
};

/**
 * Describes the message redpanda.api.console.v1alpha1.GetClusterHealthRequest.
 * Use `create(GetClusterHealthRequestSchema)` to create a new message.
 */
export const GetClusterHealthRequestSchema: GenMessage<GetClusterHealthRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 13);

/**
 * Response for GetClusterHealth call.
 *
 * @generated from message redpanda.api.console.v1alpha1.GetClusterHealthResponse
 */
export type GetClusterHealthResponse = Message<"redpanda.api.console.v1alpha1.GetClusterHealthResponse"> & {
  /**
   * whether cluster is health or not
   *
   * @generated from field: bool is_healthy = 1;
   */
  isHealthy: boolean;

  /**
   * @generated from field: repeated redpanda.api.console.v1alpha1.UnhealthyReason unhealthy_reasons = 2;
   */
  unhealthyReasons: UnhealthyReason[];

  /**
   * optional controller ID.
   * if cluster has no controller the property will not be present.
   *
   * @generated from field: optional int32 controller_id = 3;
   */
  controllerId?: number;

  /**
   * @generated from field: repeated int32 all_broker_ids = 4;
   */
  allBrokerIds: number[];

  /**
   * @generated from field: repeated int32 offline_broker_ids = 5;
   */
  offlineBrokerIds: number[];

  /**
   * @generated from field: repeated int32 broker_ids_in_recovery_mode = 6;
   */
  brokerIdsInRecoveryMode: number[];

  /**
   * @generated from field: int32 leaderless_partitions_count = 7;
   */
  leaderlessPartitionsCount: number;

  /**
   * @generated from field: repeated redpanda.api.console.v1alpha1.TopicPartitions leaderless_partitions = 8;
   */
  leaderlessPartitions: TopicPartitions[];

  /**
   * @generated from field: int32 under_replicated_partitions_count = 9;
   */
  underReplicatedPartitionsCount: number;

  /**
   * @generated from field: repeated redpanda.api.console.v1alpha1.TopicPartitions under_replicated_partitions = 10;
   */
  underReplicatedPartitions: TopicPartitions[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.GetClusterHealthResponse.
 * Use `create(GetClusterHealthResponseSchema)` to create a new message.
 */
export const GetClusterHealthResponseSchema: GenMessage<GetClusterHealthResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 14);

/**
 * @generated from message redpanda.api.console.v1alpha1.TopicPartitions
 */
export type TopicPartitions = Message<"redpanda.api.console.v1alpha1.TopicPartitions"> & {
  /**
   * @generated from field: string topic_name = 1;
   */
  topicName: string;

  /**
   * @generated from field: repeated int32 partition_ids = 2;
   */
  partitionIds: number[];
};

/**
 * Describes the message redpanda.api.console.v1alpha1.TopicPartitions.
 * Use `create(TopicPartitionsSchema)` to create a new message.
 */
export const TopicPartitionsSchema: GenMessage<TopicPartitions> = /*@__PURE__*/
  messageDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 15);

/**
 * Error code enum.
 * https://github.com/redpanda-data/redpanda/blob/dev/src/v/debug_bundle/error.h#L22
 *
 * @generated from enum redpanda.api.console.v1alpha1.BundleErrorCode
 */
export enum BundleErrorCode {
  /**
   * buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
   * OK. No Error.
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_OK = 0;
   */
  OK = 0,

  /**
   * Debug bundle process already running
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_PROCESS_ALREADY_RUNNING = 1;
   */
  PROCESS_ALREADY_RUNNING = 1,

  /**
   * Debug bundle process not running.
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_PROCESS_NOT_RUNNING = 2;
   */
  PROCESS_NOT_RUNNING = 2,

  /**
   * Invalid parameters.
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_INVALID_PARAMETERS = 3;
   */
  INVALID_PARAMETERS = 3,

  /**
   * Internal error.
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_INTERNAL_ERROR = 4;
   */
  INTERNAL_ERROR = 4,

  /**
   * Debug process failed.
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_PROCESS_FAILED = 5;
   */
  PROCESS_FAILED = 5,

  /**
   * Job ID not recognized.
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_INVALID_JOB_ID = 6;
   */
  INVALID_JOB_ID = 6,

  /**
   * Debug bundle process was never started.
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_PROCESS_NOT_STARTED = 7;
   */
  PROCESS_NOT_STARTED = 7,

  /**
   * rpk binary not found
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_RPK_BINARY_NOT_PRESENT = 8;
   */
  RPK_BINARY_NOT_PRESENT = 8,

  /**
   * Debug bundle expired.
   *
   * @generated from enum value: BUNDLE_ERROR_CODE_DEBUG_BUNDLE_EXPIRED = 9;
   */
  DEBUG_BUNDLE_EXPIRED = 9,
}

/**
 * Describes the enum redpanda.api.console.v1alpha1.BundleErrorCode.
 */
export const BundleErrorCodeSchema: GenEnum<BundleErrorCode> = /*@__PURE__*/
  enumDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 0);

/**
 * @generated from enum redpanda.api.console.v1alpha1.UnhealthyReason
 */
export enum UnhealthyReason {
  /**
   * @generated from enum value: UNHEALTHY_REASON_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: UNHEALTHY_REASON_NODES_DOWN = 1;
   */
  NODES_DOWN = 1,

  /**
   * @generated from enum value: UNHEALTHY_REASON_LEADERLESS_PARTITIONS = 2;
   */
  LEADERLESS_PARTITIONS = 2,

  /**
   * @generated from enum value: UNHEALTHY_REASON_UNDER_REPLICATED_PARTITIONS = 3;
   */
  UNDER_REPLICATED_PARTITIONS = 3,

  /**
   * @generated from enum value: UNHEALTHY_REASON_NO_ELECTED_CONTROLLER = 4;
   */
  NO_ELECTED_CONTROLLER = 4,

  /**
   * @generated from enum value: UNHEALTHY_REASON_NO_HEALTH_REPORT = 5;
   */
  NO_HEALTH_REPORT = 5,
}

/**
 * Describes the enum redpanda.api.console.v1alpha1.UnhealthyReason.
 */
export const UnhealthyReasonSchema: GenEnum<UnhealthyReason> = /*@__PURE__*/
  enumDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 1);

/**
 * @generated from service redpanda.api.console.v1alpha1.DebugBundleService
 */
export const DebugBundleService: GenService<{
  /**
   * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.GetClusterHealth
   */
  getClusterHealth: {
    methodKind: "unary";
    input: typeof GetClusterHealthRequestSchema;
    output: typeof GetClusterHealthResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.CreateDebugBundle
   */
  createDebugBundle: {
    methodKind: "unary";
    input: typeof CreateDebugBundleRequestSchema;
    output: typeof CreateDebugBundleResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.GetDebugBundleStatus
   */
  getDebugBundleStatus: {
    methodKind: "unary";
    input: typeof GetDebugBundleStatusRequestSchema;
    output: typeof GetDebugBundleStatusResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.CancelDebugBundleProcess
   */
  cancelDebugBundleProcess: {
    methodKind: "unary";
    input: typeof CancelDebugBundleProcessRequestSchema;
    output: typeof CancelDebugBundleProcessResponseSchema;
  },
  /**
   * @generated from rpc redpanda.api.console.v1alpha1.DebugBundleService.DeleteDebugBundleFile
   */
  deleteDebugBundleFile: {
    methodKind: "unary";
    input: typeof DeleteDebugBundleFileRequestSchema;
    output: typeof DeleteDebugBundleFileResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_api_console_v1alpha1_debug_bundle, 0);


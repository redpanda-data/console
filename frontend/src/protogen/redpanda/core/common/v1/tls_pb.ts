// Copyright 2025 Redpanda Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/core/common/v1/tls.proto (package redpanda.core.common.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_redpanda_core_pbgen_options } from "../../pbgen/options_pb";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/core/common/v1/tls.proto.
 */
export const file_redpanda_core_common_v1_tls: GenFile = /*@__PURE__*/
  fileDesc("CiFyZWRwYW5kYS9jb3JlL2NvbW1vbi92MS90bHMucHJvdG8SF3JlZHBhbmRhLmNvcmUuY29tbW9uLnYxItsBCgtUTFNTZXR0aW5ncxIPCgdlbmFibGVkGAMgASgIEkUKEXRsc19maWxlX3NldHRpbmdzGAEgASgLMigucmVkcGFuZGEuY29yZS5jb21tb24udjEuVExTRmlsZVNldHRpbmdzSAASQwoQdGxzX3BlbV9zZXR0aW5ncxgCIAEoCzInLnJlZHBhbmRhLmNvcmUuY29tbW9uLnYxLlRMU1BFTVNldHRpbmdzSAASHwoXZG9fbm90X3NldF9zbmlfaG9zdG5hbWUYBCABKAhCDgoMdGxzX3NldHRpbmdzIkcKD1RMU0ZpbGVTZXR0aW5ncxIPCgdjYV9wYXRoGAEgASgJEhAKCGtleV9wYXRoGAIgASgJEhEKCWNlcnRfcGF0aBgDIAEoCSJaCg5UTFNQRU1TZXR0aW5ncxIKCgJjYRgBIAEoCRIQCgNrZXkYAiABKAlCA+BBBBIcCg9rZXlfZmluZ2VycHJpbnQYAyABKAlCA+BBAxIMCgRjZXJ0GAQgASgJQo8CChtjb20ucmVkcGFuZGEuY29yZS5jb21tb24udjFCCFRsc1Byb3RvUAFaVmJ1Zi5idWlsZC9nZW4vZ28vcmVkcGFuZGFkYXRhL2NvcmUvcHJvdG9jb2xidWZmZXJzL2dvL3JlZHBhbmRhL2NvcmUvY29tbW9uL3YxO2NvbW1vbnYxogIDUkNDqgIXUmVkcGFuZGEuQ29yZS5Db21tb24uVjHKAhdSZWRwYW5kYVxDb3JlXENvbW1vblxWMeICI1JlZHBhbmRhXENvcmVcQ29tbW9uXFYxXEdQQk1ldGFkYXRh6gIaUmVkcGFuZGE6OkNvcmU6OkNvbW1vbjo6VjHqkhkNcHJvdG86OmNvbW1vbmIGcHJvdG8z", [file_redpanda_core_pbgen_options, file_google_api_field_behavior]);

/**
 * TLS settings
 *
 * @generated from message redpanda.core.common.v1.TLSSettings
 */
export type TLSSettings = Message<"redpanda.core.common.v1.TLSSettings"> & {
  /**
   * Whether or not TLS is enabled
   *
   * @generated from field: bool enabled = 3;
   */
  enabled: boolean;

  /**
   * May provide TLS as a set of files or PEM values
   *
   * @generated from oneof redpanda.core.common.v1.TLSSettings.tls_settings
   */
  tlsSettings: {
    /**
     * Certificates and keys are provided as files
     *
     * @generated from field: redpanda.core.common.v1.TLSFileSettings tls_file_settings = 1;
     */
    value: TLSFileSettings;
    case: "tlsFileSettings";
  } | {
    /**
     * Certificates and keys are provided in PEM format
     *
     * @generated from field: redpanda.core.common.v1.TLSPEMSettings tls_pem_settings = 2;
     */
    value: TLSPEMSettings;
    case: "tlsPemSettings";
  } | { case: undefined; value?: undefined };

  /**
   * If true, the SNI hostname will not be provided when TLS is used
   *
   * @generated from field: bool do_not_set_sni_hostname = 4;
   */
  doNotSetSniHostname: boolean;
};

/**
 * Describes the message redpanda.core.common.v1.TLSSettings.
 * Use `create(TLSSettingsSchema)` to create a new message.
 */
export const TLSSettingsSchema: GenMessage<TLSSettings> = /*@__PURE__*/
  messageDesc(file_redpanda_core_common_v1_tls, 0);

/**
 * TLS file settings
 *
 * @generated from message redpanda.core.common.v1.TLSFileSettings
 */
export type TLSFileSettings = Message<"redpanda.core.common.v1.TLSFileSettings"> & {
  /**
   * Path to the CA
   *
   * @generated from field: string ca_path = 1;
   */
  caPath: string;

  /**
   * Key and Cert are optional but if one is provided, then both must be
   * Path to the key
   *
   * @generated from field: string key_path = 2;
   */
  keyPath: string;

  /**
   * Path to the cert
   *
   * @generated from field: string cert_path = 3;
   */
  certPath: string;
};

/**
 * Describes the message redpanda.core.common.v1.TLSFileSettings.
 * Use `create(TLSFileSettingsSchema)` to create a new message.
 */
export const TLSFileSettingsSchema: GenMessage<TLSFileSettings> = /*@__PURE__*/
  messageDesc(file_redpanda_core_common_v1_tls, 1);

/**
 * Used when providing the TLS information in PEM format
 *
 * @generated from message redpanda.core.common.v1.TLSPEMSettings
 */
export type TLSPEMSettings = Message<"redpanda.core.common.v1.TLSPEMSettings"> & {
  /**
   * The CA
   *
   * @generated from field: string ca = 1;
   */
  ca: string;

  /**
   * Key and Cert are optional but if one is provided, then both must be
   * The key
   *
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * The SHA-256 of the key, in base64 format
   *
   * @generated from field: string key_fingerprint = 3;
   */
  keyFingerprint: string;

  /**
   * The cert
   *
   * @generated from field: string cert = 4;
   */
  cert: string;
};

/**
 * Describes the message redpanda.core.common.v1.TLSPEMSettings.
 * Use `create(TLSPEMSettingsSchema)` to create a new message.
 */
export const TLSPEMSettingsSchema: GenMessage<TLSPEMSettings> = /*@__PURE__*/
  messageDesc(file_redpanda_core_common_v1_tls, 2);


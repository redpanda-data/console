cache_resources:
  - label: "postgres_cache"
    sql:
      driver: "postgres"
      dsn: ${secrets.POSTGRES_DSN}
      table: "checkpoint_git_input"
      key_column: "key"
      value_column: "commit_sha"
      init_statement: |
        CREATE TABLE IF NOT EXISTS checkpoint_git_input (
          key TEXT PRIMARY KEY,
          commit_sha TEXT
        )
      set_suffix: ON CONFLICT (key) DO UPDATE SET commit_sha=EXCLUDED.commit_sha

input:
  git:
    repository_url: ${REPOSITORY_URL}
    branch: "${REPOSITORY_BRANCH}"
    poll_interval: "10s"
    include_patterns: ["${INCLUDE_GLOB_PATTERN}"]
    max_file_size: 1048576
    checkpoint_cache: "postgres_cache"
    checkpoint_key: "${AGENT_ID}/${REPOSITORY_URL}/${REPOSITORY_BRANCH}"
    auth:
      token:
        value: ${secrets.PERSONAL_ACCESS_TOKEN}

pipeline:
  processors:
    - mapping: |
        root = if @git_is_binary == true {
          deleted()
        }

output:
  kafka_franz:
    seed_brokers: ["${REDPANDA_BROKERS}"]
    sasl:
      - username: ${USERNAME}
        password: ${secrets.KAFKA_PASSWORD}
        mechanism: ${SASL_MECHANISM}
    tls:
      enabled: true
    topic: ${TOPIC}
    key: ${!meta("git_file_path")}
    metadata:
      include_patterns: [".*"]

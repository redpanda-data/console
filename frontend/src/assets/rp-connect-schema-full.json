{
  "bloblang-functions": [
    {
      "category": "Message Info",
      "impure": false,
      "name": "batch_index",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "batch_size",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "content",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Deprecated",
      "impure": true,
      "name": "count",
      "params": {
        "named": [
          {
            "name": "name",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "deprecated"
    },
    {
      "category": "General",
      "impure": false,
      "name": "counter",
      "params": {
        "named": [
          {
            "default": 1,
            "name": "min",
            "no_dynamic": false,
            "scalars_to_literal": true,
            "type": "query expression"
          },
          {
            "default": 9223372036854775807,
            "name": "max",
            "no_dynamic": false,
            "scalars_to_literal": true,
            "type": "query expression"
          },
          {
            "is_optional": true,
            "name": "set",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "category": "General",
      "impure": false,
      "name": "deleted",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Environment",
      "impure": true,
      "name": "env",
      "params": {
        "named": [
          {
            "name": "name",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "default": false,
            "name": "no_cache",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "error",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "error_source_label",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "error_source_name",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "error_source_path",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "errored",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Fake Data Generation",
      "impure": false,
      "name": "fake",
      "params": {
        "named": [
          {
            "default": "",
            "name": "function",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "category": "Environment",
      "impure": true,
      "name": "file",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "default": false,
            "name": "no_cache",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "Environment",
      "impure": true,
      "name": "file_rel",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "default": false,
            "name": "no_cache",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "Environment",
      "impure": true,
      "name": "hostname",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "json",
      "params": {
        "named": [
          {
            "default": "",
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "General",
      "impure": false,
      "name": "ksuid",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Deprecated",
      "impure": false,
      "name": "meta",
      "params": {
        "named": [
          {
            "default": "",
            "name": "key",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "deprecated"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "metadata",
      "params": {
        "named": [
          {
            "default": "",
            "name": "key",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "General",
      "impure": false,
      "name": "nanoid",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "length",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          },
          {
            "is_optional": true,
            "name": "alphabet",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "",
      "impure": false,
      "name": "nothing",
      "params": {},
      "status": "hidden"
    },
    {
      "category": "Environment",
      "impure": false,
      "name": "now",
      "params": {},
      "status": "stable"
    },
    {
      "category": "General",
      "impure": false,
      "name": "pi",
      "params": {},
      "status": "stable"
    },
    {
      "category": "General",
      "impure": false,
      "name": "random_int",
      "params": {
        "named": [
          {
            "default": {
              "Value": 0
            },
            "name": "seed",
            "no_dynamic": false,
            "scalars_to_literal": true,
            "type": "query expression"
          },
          {
            "default": 0,
            "name": "min",
            "no_dynamic": true,
            "scalars_to_literal": false,
            "type": "integer"
          },
          {
            "default": 9223372036854775806,
            "name": "max",
            "no_dynamic": true,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "General",
      "impure": false,
      "name": "range",
      "params": {
        "named": [
          {
            "name": "start",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          },
          {
            "name": "stop",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          },
          {
            "default": 1,
            "name": "step",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "Deprecated",
      "impure": false,
      "name": "root_meta",
      "params": {
        "named": [
          {
            "default": "",
            "name": "key",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "deprecated"
    },
    {
      "category": "General",
      "impure": false,
      "name": "snowflake_id",
      "params": {
        "named": [
          {
            "default": 1,
            "name": "node_id",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "General",
      "impure": false,
      "name": "throw",
      "params": {
        "named": [
          {
            "name": "why",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "Environment",
      "impure": false,
      "name": "timestamp_unix",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Environment",
      "impure": false,
      "name": "timestamp_unix_micro",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Environment",
      "impure": false,
      "name": "timestamp_unix_milli",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Environment",
      "impure": false,
      "name": "timestamp_unix_nano",
      "params": {},
      "status": "stable"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "tracing_id",
      "params": {},
      "status": "experimental"
    },
    {
      "category": "Message Info",
      "impure": false,
      "name": "tracing_span",
      "params": {},
      "status": "experimental"
    },
    {
      "category": "General",
      "impure": false,
      "name": "ulid",
      "params": {
        "named": [
          {
            "default": "crockford",
            "name": "encoding",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "default": "secure_random",
            "name": "random_source",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "category": "General",
      "impure": false,
      "name": "uuid_v4",
      "params": {},
      "status": "stable"
    },
    {
      "category": "General",
      "impure": false,
      "name": "uuid_v7",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "time",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "timestamp"
          }
        ]
      },
      "status": "stable"
    },
    {
      "category": "",
      "impure": false,
      "name": "var",
      "params": {
        "named": [
          {
            "name": "name",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "hidden"
    }
  ],
  "bloblang-methods": [
    {
      "impure": false,
      "name": "abs",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "all",
      "params": {
        "named": [
          {
            "name": "test",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "any",
      "params": {
        "named": [
          {
            "name": "test",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "append",
      "params": {
        "variadic": true
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "apply",
      "params": {
        "named": [
          {
            "name": "mapping",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "array",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "assign",
      "params": {
        "named": [
          {
            "name": "with",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "unknown"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "bitwise_and",
      "params": {
        "named": [
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "bitwise_or",
      "params": {
        "named": [
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "bitwise_xor",
      "params": {
        "named": [
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "bloblang",
      "params": {
        "named": [
          {
            "name": "mapping",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "bool",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "default",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "bytes",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "capitalize",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "catch",
      "params": {
        "named": [
          {
            "name": "fallback",
            "no_dynamic": false,
            "scalars_to_literal": true,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "ceil",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "collapse",
      "params": {
        "named": [
          {
            "default": false,
            "name": "include_empty",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "compare_argon2",
      "params": {
        "named": [
          {
            "name": "hashed_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "compare_bcrypt",
      "params": {
        "named": [
          {
            "name": "hashed_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "compress",
      "params": {
        "named": [
          {
            "name": "algorithm",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "default": -1,
            "name": "level",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "concat",
      "params": {
        "variadic": true
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "contains",
      "params": {
        "named": [
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "unknown"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "cos",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "decode",
      "params": {
        "named": [
          {
            "name": "scheme",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "decompress",
      "params": {
        "named": [
          {
            "name": "algorithm",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "decrypt_aes",
      "params": {
        "named": [
          {
            "name": "scheme",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "name": "key",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "name": "iv",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "diff",
      "params": {
        "named": [
          {
            "name": "other",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "unknown"
          }
        ]
      },
      "status": "beta",
      "version": "4.25.0"
    },
    {
      "impure": false,
      "name": "encode",
      "params": {
        "named": [
          {
            "name": "scheme",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "encrypt_aes",
      "params": {
        "named": [
          {
            "name": "scheme",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "name": "key",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "name": "iv",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "enumerated",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "escape_html",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "escape_url_query",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "exists",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "explode",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "filepath_join",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "filepath_split",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "filter",
      "params": {
        "named": [
          {
            "name": "test",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "find",
      "params": {
        "named": [
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "unknown"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "find_all",
      "params": {
        "named": [
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "unknown"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "find_all_by",
      "params": {
        "named": [
          {
            "name": "query",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "find_by",
      "params": {
        "named": [
          {
            "name": "query",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "flatten",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "float32",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "float64",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "floor",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "fold",
      "params": {
        "named": [
          {
            "name": "initial",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "unknown"
          },
          {
            "name": "query",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "format",
      "params": {
        "variadic": true
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "format_json",
      "params": {
        "named": [
          {
            "default": "    ",
            "name": "indent",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "default": false,
            "name": "no_indent",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          },
          {
            "default": true,
            "name": "escape_html",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "format_msgpack",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "format_timestamp",
      "params": {
        "named": [
          {
            "default": "2006-01-02T15:04:05.999999999Z07:00",
            "name": "format",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "is_optional": true,
            "name": "tz",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "deprecated"
    },
    {
      "impure": false,
      "name": "format_timestamp_strftime",
      "params": {
        "named": [
          {
            "name": "format",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "is_optional": true,
            "name": "tz",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "deprecated"
    },
    {
      "impure": false,
      "name": "format_timestamp_unix",
      "params": {},
      "status": "deprecated"
    },
    {
      "impure": false,
      "name": "format_timestamp_unix_micro",
      "params": {},
      "status": "deprecated"
    },
    {
      "impure": false,
      "name": "format_timestamp_unix_milli",
      "params": {},
      "status": "deprecated"
    },
    {
      "impure": false,
      "name": "format_timestamp_unix_nano",
      "params": {},
      "status": "deprecated"
    },
    {
      "impure": false,
      "name": "format_xml",
      "params": {
        "named": [
          {
            "default": "    ",
            "name": "indent",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "default": false,
            "name": "no_indent",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          },
          {
            "is_optional": true,
            "name": "root_tag",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "format_yaml",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "from",
      "params": {
        "named": [
          {
            "name": "index",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "from_all",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "geoip_anonymous_ip",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "impure": false,
      "name": "geoip_asn",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "impure": false,
      "name": "geoip_city",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "impure": false,
      "name": "geoip_connection_type",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "impure": false,
      "name": "geoip_country",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "impure": false,
      "name": "geoip_domain",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "impure": false,
      "name": "geoip_enterprise",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "impure": false,
      "name": "geoip_isp",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "impure": false,
      "name": "get",
      "params": {
        "named": [
          {
            "name": "path",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "has_prefix",
      "params": {
        "named": [
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "has_suffix",
      "params": {
        "named": [
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "hash",
      "params": {
        "named": [
          {
            "name": "algorithm",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "is_optional": true,
            "name": "key",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "default": "IEEE",
            "name": "polynomial",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "index",
      "params": {
        "named": [
          {
            "name": "index",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "index_of",
      "params": {
        "named": [
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "infer_schema",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "int16",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "int32",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "int64",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "int8",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "join",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "delimiter",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "json_path",
      "params": {
        "named": [
          {
            "name": "expression",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "experimental"
    },
    {
      "impure": false,
      "name": "json_schema",
      "params": {
        "named": [
          {
            "name": "schema",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "key_values",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "keys",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "length",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "log",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "log10",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "lowercase",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "map",
      "params": {
        "named": [
          {
            "name": "query",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "hidden"
    },
    {
      "impure": false,
      "name": "map_each",
      "params": {
        "named": [
          {
            "name": "query",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "map_each_key",
      "params": {
        "named": [
          {
            "name": "query",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "max",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "merge",
      "params": {
        "named": [
          {
            "name": "with",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "unknown"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "min",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "not",
      "params": {},
      "status": "hidden"
    },
    {
      "impure": false,
      "name": "not_empty",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "not_null",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "number",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "default",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "float"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "or",
      "params": {
        "named": [
          {
            "name": "fallback",
            "no_dynamic": false,
            "scalars_to_literal": true,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "parse_csv",
      "params": {
        "named": [
          {
            "default": true,
            "name": "parse_header_row",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          },
          {
            "default": ",",
            "name": "delimiter",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "default": false,
            "name": "lazy_quotes",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "parse_duration",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "parse_duration_iso8601",
      "params": {},
      "status": "beta"
    },
    {
      "impure": false,
      "name": "parse_form_url_encoded",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "parse_json",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "use_number",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "parse_jwt_es256",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.20.0"
    },
    {
      "impure": false,
      "name": "parse_jwt_es384",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.20.0"
    },
    {
      "impure": false,
      "name": "parse_jwt_es512",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.20.0"
    },
    {
      "impure": false,
      "name": "parse_jwt_hs256",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.12.0"
    },
    {
      "impure": false,
      "name": "parse_jwt_hs384",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.12.0"
    },
    {
      "impure": false,
      "name": "parse_jwt_hs512",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.12.0"
    },
    {
      "impure": false,
      "name": "parse_jwt_rs256",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.20.0"
    },
    {
      "impure": false,
      "name": "parse_jwt_rs384",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.20.0"
    },
    {
      "impure": false,
      "name": "parse_jwt_rs512",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.20.0"
    },
    {
      "impure": false,
      "name": "parse_msgpack",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "parse_parquet",
      "params": {
        "named": [
          {
            "default": false,
            "name": "byte_array_as_string",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "parse_timestamp",
      "params": {
        "named": [
          {
            "name": "format",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "deprecated"
    },
    {
      "impure": false,
      "name": "parse_timestamp_strptime",
      "params": {
        "named": [
          {
            "name": "format",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "deprecated"
    },
    {
      "impure": false,
      "name": "parse_url",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "parse_xml",
      "params": {
        "named": [
          {
            "default": false,
            "is_optional": true,
            "name": "cast",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "bool"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "parse_yaml",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "patch",
      "params": {
        "named": [
          {
            "name": "changelog",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "unknown"
          }
        ]
      },
      "status": "beta",
      "version": "4.25.0"
    },
    {
      "impure": false,
      "name": "pow",
      "params": {
        "named": [
          {
            "name": "exponent",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "float"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "quote",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "re_find_all",
      "params": {
        "named": [
          {
            "name": "pattern",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "re_find_all_object",
      "params": {
        "named": [
          {
            "name": "pattern",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "re_find_all_submatch",
      "params": {
        "named": [
          {
            "name": "pattern",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "re_find_object",
      "params": {
        "named": [
          {
            "name": "pattern",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "re_match",
      "params": {
        "named": [
          {
            "name": "pattern",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "re_replace",
      "params": {
        "named": [
          {
            "name": "pattern",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "hidden"
    },
    {
      "impure": false,
      "name": "re_replace_all",
      "params": {
        "named": [
          {
            "name": "pattern",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "name": "value",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "replace",
      "params": {
        "named": [
          {
            "name": "old",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "name": "new",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "hidden"
    },
    {
      "impure": false,
      "name": "replace_all",
      "params": {
        "named": [
          {
            "name": "old",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "name": "new",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "replace_all_many",
      "params": {
        "named": [
          {
            "name": "values",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "array"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "replace_many",
      "params": {
        "named": [
          {
            "name": "values",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "array"
          }
        ]
      },
      "status": "hidden"
    },
    {
      "impure": false,
      "name": "reverse",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "round",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "sign_jwt_es256",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.20.0"
    },
    {
      "impure": false,
      "name": "sign_jwt_es384",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.20.0"
    },
    {
      "impure": false,
      "name": "sign_jwt_es512",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.20.0"
    },
    {
      "impure": false,
      "name": "sign_jwt_hs256",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.12.0"
    },
    {
      "impure": false,
      "name": "sign_jwt_hs384",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.12.0"
    },
    {
      "impure": false,
      "name": "sign_jwt_hs512",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.12.0"
    },
    {
      "impure": false,
      "name": "sign_jwt_rs256",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.18.0"
    },
    {
      "impure": false,
      "name": "sign_jwt_rs384",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.18.0"
    },
    {
      "impure": false,
      "name": "sign_jwt_rs512",
      "params": {
        "named": [
          {
            "name": "signing_secret",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "v4.18.0"
    },
    {
      "impure": false,
      "name": "sin",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "slice",
      "params": {
        "named": [
          {
            "name": "low",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          },
          {
            "is_optional": true,
            "name": "high",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "slug",
      "params": {
        "named": [
          {
            "default": "en",
            "is_optional": true,
            "name": "lang",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta",
      "version": "4.2.0"
    },
    {
      "impure": false,
      "name": "sort",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "compare",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "sort_by",
      "params": {
        "named": [
          {
            "name": "query",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "split",
      "params": {
        "named": [
          {
            "name": "delimiter",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "squash",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "string",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "strip_html",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "preserve",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "unknown"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "sum",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "tan",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "timestamp",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "default",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "timestamp"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "trim",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "cutset",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "trim_prefix",
      "params": {
        "named": [
          {
            "name": "prefix",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "4.12.0"
    },
    {
      "impure": false,
      "name": "trim_suffix",
      "params": {
        "named": [
          {
            "name": "suffix",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable",
      "version": "4.12.0"
    },
    {
      "impure": false,
      "name": "ts_add_iso8601",
      "params": {
        "named": [
          {
            "name": "duration",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "ts_format",
      "params": {
        "named": [
          {
            "default": "2006-01-02T15:04:05.999999999Z07:00",
            "name": "format",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "is_optional": true,
            "name": "tz",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "ts_parse",
      "params": {
        "named": [
          {
            "name": "format",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "ts_round",
      "params": {
        "named": [
          {
            "name": "duration",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "integer"
          }
        ]
      },
      "status": "beta",
      "version": "4.2.0"
    },
    {
      "impure": false,
      "name": "ts_strftime",
      "params": {
        "named": [
          {
            "name": "format",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          },
          {
            "is_optional": true,
            "name": "tz",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "ts_strptime",
      "params": {
        "named": [
          {
            "name": "format",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "ts_sub",
      "params": {
        "named": [
          {
            "name": "t2",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "timestamp"
          }
        ]
      },
      "status": "beta",
      "version": "4.23.0"
    },
    {
      "impure": false,
      "name": "ts_sub_iso8601",
      "params": {
        "named": [
          {
            "name": "duration",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "ts_tz",
      "params": {
        "named": [
          {
            "name": "tz",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta",
      "version": "4.3.0"
    },
    {
      "impure": false,
      "name": "ts_unix",
      "params": {},
      "status": "beta"
    },
    {
      "impure": false,
      "name": "ts_unix_micro",
      "params": {},
      "status": "beta"
    },
    {
      "impure": false,
      "name": "ts_unix_milli",
      "params": {},
      "status": "beta"
    },
    {
      "impure": false,
      "name": "ts_unix_nano",
      "params": {},
      "status": "beta"
    },
    {
      "impure": false,
      "name": "type",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "uint16",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "uint32",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "uint64",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "uint8",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "unescape_html",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "unescape_url_query",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "unicode_segments",
      "params": {
        "named": [
          {
            "name": "segmentation_type",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "beta"
    },
    {
      "impure": false,
      "name": "unique",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "emit",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "query expression"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "unquote",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "uppercase",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "uuid_v5",
      "params": {
        "named": [
          {
            "is_optional": true,
            "name": "ns",
            "no_dynamic": false,
            "scalars_to_literal": false,
            "type": "string"
          }
        ]
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "values",
      "params": {},
      "status": "stable"
    },
    {
      "impure": false,
      "name": "vector",
      "params": {},
      "status": "beta",
      "version": "4.33.0"
    },
    {
      "impure": false,
      "name": "with",
      "params": {
        "variadic": true
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "without",
      "params": {
        "variadic": true
      },
      "status": "stable"
    },
    {
      "impure": false,
      "name": "zip",
      "params": {
        "variadic": true
      },
      "status": "stable"
    }
  ],
  "buffers": [
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": 524288000,
            "kind": "scalar",
            "name": "limit",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batch_policy",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "memory",
      "plugin": true,
      "status": "stable",
      "type": "buffer"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "none",
      "plugin": true,
      "status": "stable",
      "type": "buffer"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "array",
            "name": "pre_processors",
            "type": "processor"
          },
          {
            "is_optional": true,
            "kind": "array",
            "name": "post_processors",
            "type": "processor"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sqlite",
      "plugin": true,
      "status": "stable",
      "type": "buffer"
    },
    {
      "categories": [
        "Windowing"
      ],
      "config": {
        "children": [
          {
            "bloblang": true,
            "default": "root = now()",
            "kind": "scalar",
            "name": "timestamp_mapping",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "size",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "slide",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "offset",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "allowed_lateness",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "system_window",
      "plugin": true,
      "status": "beta",
      "type": "buffer",
      "version": "3.53.0"
    }
  ],
  "caches": [
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "hash_key",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "data_key",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "consistent_read",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "default_ttl",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "ttl_key",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_dynamodb",
      "plugin": true,
      "status": "stable",
      "type": "cache",
      "version": "3.36.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "default": "application/octet-stream",
            "kind": "scalar",
            "name": "content_type",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "force_path_style_urls",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_s3",
      "plugin": true,
      "status": "stable",
      "type": "cache",
      "version": "3.36.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "collection",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "scope",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "json",
                ""
              ],
              [
                "legacy",
                ""
              ],
              [
                "raw",
                ""
              ],
              [
                "rawjson",
                ""
              ],
              [
                "rawstring",
                ""
              ]
            ],
            "default": "legacy",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"json\": true,\n  \"legacy\": true,\n  \"raw\": true,\n  \"rawjson\": true,\n  \"rawstring\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "transcoder",
            "type": "string"
          },
          {
            "default": "15s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "default_ttl",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "couchbase",
      "plugin": true,
      "status": "experimental",
      "type": "cache",
      "version": "4.12.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "directory",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "file",
      "plugin": true,
      "status": "stable",
      "type": "cache"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "content_type",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_cloud_storage",
      "plugin": true,
      "status": "beta",
      "type": "cache"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": 1000,
            "kind": "scalar",
            "name": "cap",
            "type": "int"
          },
          {
            "default": {},
            "kind": "map",
            "name": "init_values",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "arc",
                ""
              ],
              [
                "standard",
                ""
              ],
              [
                "two_queues",
                ""
              ]
            ],
            "default": "standard",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"arc\": true,\n  \"standard\": true,\n  \"two_queues\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "algorithm",
            "type": "string"
          },
          {
            "default": 0.25,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "two_queues_recent_ratio",
            "type": "float"
          },
          {
            "default": 0.5,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "two_queues_ghost_ratio",
            "type": "float"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "optimistic",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "lru",
      "plugin": true,
      "status": "stable",
      "type": "cache"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "addresses",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "default": "300s",
            "kind": "scalar",
            "name": "default_ttl",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "memcached",
      "plugin": true,
      "status": "stable",
      "type": "cache"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": "5m",
            "kind": "scalar",
            "name": "default_ttl",
            "type": "string"
          },
          {
            "default": "60s",
            "kind": "scalar",
            "name": "compaction_interval",
            "type": "string"
          },
          {
            "default": {},
            "kind": "map",
            "name": "init_values",
            "type": "string"
          },
          {
            "default": 1,
            "is_advanced": true,
            "kind": "scalar",
            "name": "shards",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "memory",
      "plugin": true,
      "status": "stable",
      "type": "cache"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "app_name",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "collection",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "key_field",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "value_field",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "mongodb",
      "plugin": true,
      "status": "experimental",
      "type": "cache",
      "version": "3.43.0"
    },
    {
      "categories": null,
      "config": {
        "kind": "array",
        "name": "",
        "type": "string"
      },
      "name": "multilevel",
      "plugin": true,
      "status": "stable",
      "type": "cache"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nats_kv",
      "plugin": true,
      "status": "experimental",
      "type": "cache",
      "version": "4.27.0"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "noop",
      "plugin": true,
      "status": "stable",
      "type": "cache",
      "version": "4.27.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "default_ttl",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "500ms",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis",
      "plugin": true,
      "status": "stable",
      "type": "cache"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "seed_brokers",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "AWS_MSK_IAM",
                    ""
                  ],
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "extensions",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "profile",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "id",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "secret",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "token",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "from_ec2_role",
                        "type": "bool",
                        "version": "4.2.0"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role_external_id",
                        "type": "string"
                      }
                    ],
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "credentials",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "aws",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "5m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "metadata_max_age",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "request_timeout_overhead",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "conn_idle_timeout",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "allow_auto_topic_creation",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redpanda",
      "plugin": true,
      "status": "beta",
      "type": "cache"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "default_ttl",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "get_retries",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "ristretto",
      "plugin": true,
      "status": "stable",
      "type": "cache"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "key_column",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "value_column",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "set_suffix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "init_files",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "init_statement",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle_time",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_life_time",
            "type": "string"
          },
          {
            "default": 2,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_open",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sql",
      "plugin": true,
      "status": "experimental",
      "type": "cache",
      "version": "4.26.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": 1024,
            "kind": "scalar",
            "name": "cap",
            "type": "int"
          },
          {
            "default": "5m0s",
            "kind": "scalar",
            "name": "default_ttl",
            "type": "string",
            "version": "4.21.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "ttl",
            "type": "string"
          },
          {
            "default": {},
            "kind": "map",
            "name": "init_values",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "optimistic",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "ttlru",
      "plugin": true,
      "status": "stable",
      "type": "cache"
    }
  ],
  "config": [
    {
      "children": [
        {
          "default": true,
          "kind": "scalar",
          "name": "enabled",
          "type": "bool"
        },
        {
          "default": "0.0.0.0:4195",
          "kind": "scalar",
          "name": "address",
          "type": "string"
        },
        {
          "default": "/benthos",
          "kind": "scalar",
          "name": "root_path",
          "type": "string"
        },
        {
          "default": false,
          "kind": "scalar",
          "name": "debug_endpoints",
          "type": "bool"
        },
        {
          "default": "",
          "is_advanced": true,
          "kind": "scalar",
          "name": "cert_file",
          "type": "string"
        },
        {
          "default": "",
          "is_advanced": true,
          "kind": "scalar",
          "name": "key_file",
          "type": "string"
        },
        {
          "children": [
            {
              "default": false,
              "is_advanced": true,
              "kind": "scalar",
              "name": "enabled",
              "type": "bool"
            },
            {
              "default": [],
              "is_advanced": true,
              "kind": "array",
              "name": "allowed_origins",
              "type": "string"
            }
          ],
          "is_advanced": true,
          "kind": "scalar",
          "name": "cors",
          "type": "object",
          "version": "3.63.0"
        },
        {
          "children": [
            {
              "default": false,
              "is_advanced": true,
              "kind": "scalar",
              "name": "enabled",
              "type": "bool"
            },
            {
              "default": "restricted",
              "is_advanced": true,
              "kind": "scalar",
              "name": "realm",
              "type": "string"
            },
            {
              "default": "",
              "is_advanced": true,
              "kind": "scalar",
              "name": "username",
              "type": "string"
            },
            {
              "default": "",
              "is_advanced": true,
              "kind": "scalar",
              "name": "password_hash",
              "type": "string"
            },
            {
              "default": "sha256",
              "is_advanced": true,
              "kind": "scalar",
              "name": "algorithm",
              "type": "string"
            },
            {
              "default": "",
              "is_advanced": true,
              "kind": "scalar",
              "name": "salt",
              "type": "string"
            }
          ],
          "is_advanced": true,
          "kind": "scalar",
          "name": "basic_auth",
          "type": "object"
        }
      ],
      "kind": "scalar",
      "name": "http",
      "type": "object"
    },
    {
      "default": {
        "stdin": {}
      },
      "kind": "scalar",
      "name": "input",
      "type": "input"
    },
    {
      "default": {
        "none": {}
      },
      "kind": "scalar",
      "name": "buffer",
      "type": "buffer"
    },
    {
      "children": [
        {
          "default": -1,
          "kind": "scalar",
          "name": "threads",
          "type": "int"
        },
        {
          "default": [],
          "kind": "array",
          "name": "processors",
          "type": "processor"
        }
      ],
      "kind": "scalar",
      "name": "pipeline",
      "type": "object"
    },
    {
      "default": {
        "stdout": {}
      },
      "kind": "scalar",
      "name": "output",
      "type": "output"
    },
    {
      "default": [],
      "is_advanced": true,
      "kind": "array",
      "name": "input_resources",
      "type": "input"
    },
    {
      "default": [],
      "is_advanced": true,
      "kind": "array",
      "name": "processor_resources",
      "type": "processor"
    },
    {
      "default": [],
      "is_advanced": true,
      "kind": "array",
      "name": "output_resources",
      "type": "output"
    },
    {
      "default": [],
      "is_advanced": true,
      "kind": "array",
      "name": "cache_resources",
      "type": "cache"
    },
    {
      "default": [],
      "is_advanced": true,
      "kind": "array",
      "name": "rate_limit_resources",
      "type": "rate_limit"
    },
    {
      "children": [
        {
          "default": "INFO",
          "kind": "scalar",
          "name": "level",
          "options": [
            "OFF",
            "FATAL",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE",
            "ALL",
            "NONE"
          ],
          "type": "string"
        },
        {
          "default": "logfmt",
          "kind": "scalar",
          "linter": "\nlet options = {\n  \"json\": true,\n  \"logfmt\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
          "name": "format",
          "options": [
            "json",
            "logfmt"
          ],
          "type": "string"
        },
        {
          "default": true,
          "kind": "scalar",
          "name": "add_timestamp",
          "type": "bool"
        },
        {
          "default": "level",
          "is_advanced": true,
          "kind": "scalar",
          "name": "level_name",
          "type": "string"
        },
        {
          "default": "time",
          "is_advanced": true,
          "kind": "scalar",
          "name": "timestamp_name",
          "type": "string"
        },
        {
          "default": "msg",
          "is_advanced": true,
          "kind": "scalar",
          "name": "message_name",
          "type": "string"
        },
        {
          "default": {
            "@service": "redpanda-connect"
          },
          "kind": "map",
          "name": "static_fields",
          "type": "string"
        },
        {
          "children": [
            {
              "default": "",
              "is_advanced": true,
              "kind": "scalar",
              "name": "path",
              "type": "string"
            },
            {
              "default": false,
              "is_advanced": true,
              "kind": "scalar",
              "name": "rotate",
              "type": "bool"
            },
            {
              "default": 0,
              "is_advanced": true,
              "kind": "scalar",
              "name": "rotate_max_age_days",
              "type": "int"
            }
          ],
          "is_advanced": true,
          "kind": "scalar",
          "name": "file",
          "type": "object"
        }
      ],
      "kind": "scalar",
      "name": "logger",
      "type": "object"
    },
    {
      "default": {
        "mapping": "",
        "prometheus": {}
      },
      "kind": "scalar",
      "name": "metrics",
      "type": "metrics"
    },
    {
      "default": {
        "none": {}
      },
      "kind": "scalar",
      "name": "tracer",
      "type": "tracer"
    },
    {
      "default": "0s",
      "kind": "scalar",
      "name": "shutdown_delay",
      "type": "string"
    },
    {
      "default": "20s",
      "kind": "scalar",
      "name": "shutdown_timeout",
      "type": "string"
    },
    {
      "children": [
        {
          "is_advanced": true,
          "kind": "scalar",
          "name": "name",
          "type": "string"
        },
        {
          "is_advanced": true,
          "is_optional": true,
          "kind": "map",
          "name": "environment",
          "type": "string"
        },
        {
          "default": "/pipeline/processors",
          "is_advanced": true,
          "kind": "scalar",
          "name": "target_processors",
          "type": "string"
        },
        {
          "default": "",
          "is_advanced": true,
          "kind": "scalar",
          "name": "target_mapping",
          "type": "string"
        },
        {
          "is_advanced": true,
          "is_optional": true,
          "kind": "map",
          "name": "mocks",
          "type": "unknown"
        },
        {
          "children": [
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "content",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "json_content",
              "type": "unknown"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "file_content",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "map",
              "name": "metadata",
              "type": "unknown"
            }
          ],
          "is_advanced": true,
          "is_optional": true,
          "kind": "array",
          "name": "input_batch",
          "type": "object"
        },
        {
          "children": [
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "content",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "json_content",
              "type": "unknown"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "file_content",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "map",
              "name": "metadata",
              "type": "unknown"
            }
          ],
          "is_advanced": true,
          "is_optional": true,
          "kind": "2darray",
          "name": "input_batches",
          "type": "object"
        },
        {
          "children": [
            {
              "bloblang": true,
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "bloblang",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "content_equals",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "content_matches",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "map",
              "name": "metadata_equals",
              "type": "unknown"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "file_equals",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "file_json_equals",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "json_equals",
              "type": "unknown"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "json_contains",
              "type": "unknown"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "file_json_contains",
              "type": "string"
            }
          ],
          "is_advanced": true,
          "is_optional": true,
          "kind": "2darray",
          "name": "output_batches",
          "type": "object"
        }
      ],
      "is_advanced": true,
      "is_optional": true,
      "kind": "array",
      "name": "tests",
      "type": "object"
    },
    {
      "children": [
        {
          "kind": "array",
          "name": "seed_brokers",
          "type": "string"
        },
        {
          "default": "benthos",
          "is_advanced": true,
          "kind": "scalar",
          "name": "client_id",
          "type": "string"
        },
        {
          "children": [
            {
              "default": false,
              "is_advanced": true,
              "kind": "scalar",
              "name": "enabled",
              "type": "bool"
            },
            {
              "default": false,
              "is_advanced": true,
              "kind": "scalar",
              "name": "skip_cert_verify",
              "type": "bool"
            },
            {
              "default": false,
              "is_advanced": true,
              "kind": "scalar",
              "name": "enable_renegotiation",
              "type": "bool",
              "version": "3.45.0"
            },
            {
              "default": "",
              "is_advanced": true,
              "is_secret": true,
              "kind": "scalar",
              "name": "root_cas",
              "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
              "type": "string"
            },
            {
              "default": "",
              "is_advanced": true,
              "kind": "scalar",
              "name": "root_cas_file",
              "type": "string"
            },
            {
              "children": [
                {
                  "default": "",
                  "is_advanced": true,
                  "kind": "scalar",
                  "name": "cert",
                  "type": "string"
                },
                {
                  "default": "",
                  "is_advanced": true,
                  "is_secret": true,
                  "kind": "scalar",
                  "name": "key",
                  "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                  "type": "string"
                },
                {
                  "default": "",
                  "is_advanced": true,
                  "kind": "scalar",
                  "name": "cert_file",
                  "type": "string"
                },
                {
                  "default": "",
                  "is_advanced": true,
                  "kind": "scalar",
                  "name": "key_file",
                  "type": "string"
                },
                {
                  "default": "",
                  "is_advanced": true,
                  "is_secret": true,
                  "kind": "scalar",
                  "name": "password",
                  "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                  "type": "string"
                }
              ],
              "default": [],
              "is_advanced": true,
              "kind": "array",
              "name": "client_certs",
              "type": "object"
            }
          ],
          "is_advanced": true,
          "kind": "scalar",
          "name": "tls",
          "type": "object"
        },
        {
          "children": [
            {
              "annotated_options": [
                [
                  "AWS_MSK_IAM",
                  ""
                ],
                [
                  "OAUTHBEARER",
                  ""
                ],
                [
                  "PLAIN",
                  ""
                ],
                [
                  "SCRAM-SHA-256",
                  ""
                ],
                [
                  "SCRAM-SHA-512",
                  ""
                ],
                [
                  "none",
                  ""
                ]
              ],
              "is_advanced": true,
              "kind": "scalar",
              "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
              "name": "mechanism",
              "type": "string"
            },
            {
              "default": "",
              "is_advanced": true,
              "kind": "scalar",
              "name": "username",
              "type": "string"
            },
            {
              "default": "",
              "is_advanced": true,
              "is_secret": true,
              "kind": "scalar",
              "name": "password",
              "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
              "type": "string"
            },
            {
              "default": "",
              "is_advanced": true,
              "kind": "scalar",
              "name": "token",
              "type": "string"
            },
            {
              "is_advanced": true,
              "is_optional": true,
              "kind": "map",
              "name": "extensions",
              "type": "string"
            },
            {
              "children": [
                {
                  "is_advanced": true,
                  "is_optional": true,
                  "kind": "scalar",
                  "name": "region",
                  "type": "string"
                },
                {
                  "is_advanced": true,
                  "is_optional": true,
                  "kind": "scalar",
                  "name": "endpoint",
                  "type": "string"
                },
                {
                  "children": [
                    {
                      "is_advanced": true,
                      "is_optional": true,
                      "kind": "scalar",
                      "name": "profile",
                      "type": "string"
                    },
                    {
                      "is_advanced": true,
                      "is_optional": true,
                      "kind": "scalar",
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "is_advanced": true,
                      "is_optional": true,
                      "is_secret": true,
                      "kind": "scalar",
                      "name": "secret",
                      "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                      "type": "string"
                    },
                    {
                      "is_advanced": true,
                      "is_optional": true,
                      "kind": "scalar",
                      "name": "token",
                      "type": "string"
                    },
                    {
                      "is_advanced": true,
                      "is_optional": true,
                      "kind": "scalar",
                      "name": "from_ec2_role",
                      "type": "bool",
                      "version": "4.2.0"
                    },
                    {
                      "is_advanced": true,
                      "is_optional": true,
                      "kind": "scalar",
                      "name": "role",
                      "type": "string"
                    },
                    {
                      "is_advanced": true,
                      "is_optional": true,
                      "kind": "scalar",
                      "name": "role_external_id",
                      "type": "string"
                    }
                  ],
                  "is_advanced": true,
                  "is_optional": true,
                  "kind": "scalar",
                  "name": "credentials",
                  "type": "object"
                }
              ],
              "is_advanced": true,
              "is_optional": true,
              "kind": "scalar",
              "name": "aws",
              "type": "object"
            }
          ],
          "is_advanced": true,
          "is_optional": true,
          "kind": "array",
          "name": "sasl",
          "type": "object"
        },
        {
          "default": "5m",
          "is_advanced": true,
          "kind": "scalar",
          "name": "metadata_max_age",
          "type": "string"
        },
        {
          "default": "10s",
          "is_advanced": true,
          "kind": "scalar",
          "name": "request_timeout_overhead",
          "type": "string"
        },
        {
          "default": "20s",
          "is_advanced": true,
          "kind": "scalar",
          "name": "conn_idle_timeout",
          "type": "string"
        },
        {
          "default": "",
          "kind": "scalar",
          "name": "pipeline_id",
          "type": "string"
        },
        {
          "default": "",
          "kind": "scalar",
          "name": "logs_topic",
          "type": "string"
        },
        {
          "default": "info",
          "kind": "scalar",
          "linter": "\nlet options = {\n  \"debug\": true,\n  \"info\": true,\n  \"warn\": true,\n  \"error\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
          "name": "logs_level",
          "options": [
            "debug",
            "info",
            "warn",
            "error"
          ],
          "type": "string"
        },
        {
          "default": "",
          "kind": "scalar",
          "name": "status_topic",
          "type": "string"
        },
        {
          "default": "",
          "is_deprecated": true,
          "kind": "scalar",
          "name": "rack_id",
          "type": "string"
        },
        {
          "annotated_options": [
            [
              "least_backup",
              ""
            ],
            [
              "manual",
              ""
            ],
            [
              "murmur2_hash",
              ""
            ],
            [
              "round_robin",
              ""
            ]
          ],
          "is_advanced": true,
          "is_optional": true,
          "kind": "scalar",
          "linter": "\nlet options = {\n  \"least_backup\": true,\n  \"manual\": true,\n  \"murmur2_hash\": true,\n  \"round_robin\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
          "name": "partitioner",
          "type": "string"
        },
        {
          "default": true,
          "is_advanced": true,
          "kind": "scalar",
          "name": "idempotent_write",
          "type": "bool"
        },
        {
          "is_advanced": true,
          "is_optional": true,
          "kind": "scalar",
          "linter": "\nlet options = {\n  \"lz4\": true,\n  \"snappy\": true,\n  \"gzip\": true,\n  \"none\": true,\n  \"zstd\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
          "name": "compression",
          "options": [
            "lz4",
            "snappy",
            "gzip",
            "none",
            "zstd"
          ],
          "type": "string"
        },
        {
          "default": true,
          "is_advanced": true,
          "kind": "scalar",
          "name": "allow_auto_topic_creation",
          "type": "bool"
        },
        {
          "default": "10s",
          "is_advanced": true,
          "kind": "scalar",
          "name": "timeout",
          "type": "string"
        },
        {
          "default": "1MiB",
          "is_advanced": true,
          "kind": "scalar",
          "name": "max_message_bytes",
          "type": "string"
        },
        {
          "default": "100MiB",
          "is_advanced": true,
          "kind": "scalar",
          "name": "broker_write_max_bytes",
          "type": "string"
        }
      ],
      "kind": "scalar",
      "name": "redpanda",
      "type": "object"
    }
  ],
  "inputs": [
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string",
            "version": "3.58.0"
          },
          {
            "kind": "scalar",
            "name": "queue",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "durable",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "auto_delete",
                "type": "bool"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "arguments",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "queue_declare",
            "type": "object"
          },
          {
            "children": [
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "exchange",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "key",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "bindings_declare",
            "type": "object"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "consumer_tag",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "auto_ack",
            "type": "bool"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "nack_reject_patterns",
            "type": "string",
            "version": "3.64.0"
          },
          {
            "default": 10,
            "kind": "scalar",
            "name": "prefetch_count",
            "type": "int"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "prefetch_size",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "amqp_0_9",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "array",
            "name": "urls",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string",
            "version": "4.23.0"
          },
          {
            "kind": "scalar",
            "name": "source_address",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "azure_renew_lock",
            "type": "bool",
            "version": "3.45.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "read_header",
            "type": "bool",
            "version": "4.25.0"
          },
          {
            "default": 64,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "root = if this < 1 { [ \"credit must be at least 1\" ] }",
            "name": "credit",
            "type": "int",
            "version": "4.26.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "anonymous",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ],
                  [
                    "plain",
                    ""
                  ]
                ],
                "default": "none",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"anonymous\": true,\n  \"none\": true,\n  \"plain\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "user",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "sasl",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "\nroot = if this.url.or(\"\") == \"\" && this.urls.or([]).length() == 0 {\n  \"field 'urls' must be set\"\n}\n",
        "name": "",
        "type": "object"
      },
      "name": "amqp_1",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services",
        "AWS"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "streams",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "",
                "kind": "scalar",
                "name": "table",
                "type": "string"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "create",
                "type": "bool"
              },
              {
                "default": "PAY_PER_REQUEST",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"provisioned\": true,\n  \"pay_per_request\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "billing_mode",
                "options": [
                  "PROVISIONED",
                  "PAY_PER_REQUEST"
                ],
                "type": "string"
              },
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "read_capacity_units",
                "type": "int"
              },
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "write_capacity_units",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "region",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "endpoint",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "profile",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "secret",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "token",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "from_ec2_role",
                    "type": "bool",
                    "version": "4.2.0"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "role",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "role_external_id",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "credentials",
                "type": "object"
              }
            ],
            "kind": "scalar",
            "name": "dynamodb",
            "type": "object"
          },
          {
            "default": 1024,
            "kind": "scalar",
            "name": "checkpoint_limit",
            "type": "int"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": "5s",
            "kind": "scalar",
            "name": "commit_period",
            "type": "string"
          },
          {
            "default": "2s",
            "kind": "scalar",
            "name": "steal_grace_period",
            "type": "string"
          },
          {
            "default": "30s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rebalance_period",
            "type": "string"
          },
          {
            "default": "30s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "lease_period",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "start_from_oldest",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_kinesis",
      "plugin": true,
      "status": "stable",
      "type": "input",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Services",
        "AWS"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "force_path_style_urls",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "delete_objects",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "auto",
                ""
              ],
              [
                "all-bytes",
                ""
              ],
              [
                "avro-ocf:marshaler=x",
                ""
              ],
              [
                "chunker:x",
                ""
              ],
              [
                "csv",
                ""
              ],
              [
                "csv:x",
                ""
              ],
              [
                "csv-safe",
                ""
              ],
              [
                "csv-safe:x",
                ""
              ],
              [
                "delim:x",
                ""
              ],
              [
                "gzip",
                ""
              ],
              [
                "pgzip",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "multipart",
                ""
              ],
              [
                "regex:(?m)^\\d\\d:\\d\\d:\\d\\d",
                ""
              ],
              [
                "skipbom",
                ""
              ],
              [
                "tar",
                ""
              ]
            ],
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "default": 1000000,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          },
          {
            "default": {
              "to_the_end": {}
            },
            "is_optional": true,
            "kind": "scalar",
            "name": "scanner",
            "type": "scanner",
            "version": "4.25.0"
          },
          {
            "children": [
              {
                "default": "",
                "kind": "scalar",
                "name": "url",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "endpoint",
                "type": "string"
              },
              {
                "default": "Records.*.s3.object.key",
                "kind": "scalar",
                "name": "key_path",
                "type": "string"
              },
              {
                "default": "Records.*.s3.bucket.name",
                "kind": "scalar",
                "name": "bucket_path",
                "type": "string"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "envelope_path",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "delay_period",
                "type": "string"
              },
              {
                "default": 10,
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_messages",
                "type": "int"
              },
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "wait_time_seconds",
                "type": "int"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "sqs",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_s3",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services",
        "AWS"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "delete_message",
            "type": "bool"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "reset_visibility",
            "type": "bool",
            "version": "3.58.0"
          },
          {
            "default": 10,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_number_of_messages",
            "type": "int"
          },
          {
            "default": 1000,
            "kind": "scalar",
            "name": "max_outstanding_messages",
            "type": "int"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "wait_time_seconds",
            "type": "int"
          },
          {
            "default": "30s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "message_timeout",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_sqs",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services",
        "Azure"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_account",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_access_key",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_connection_string",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_sas_token",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "container",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "auto",
                ""
              ],
              [
                "all-bytes",
                ""
              ],
              [
                "avro-ocf:marshaler=x",
                ""
              ],
              [
                "chunker:x",
                ""
              ],
              [
                "csv",
                ""
              ],
              [
                "csv:x",
                ""
              ],
              [
                "csv-safe",
                ""
              ],
              [
                "csv-safe:x",
                ""
              ],
              [
                "delim:x",
                ""
              ],
              [
                "gzip",
                ""
              ],
              [
                "pgzip",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "multipart",
                ""
              ],
              [
                "regex:(?m)^\\d\\d:\\d\\d:\\d\\d",
                ""
              ],
              [
                "skipbom",
                ""
              ],
              [
                "tar",
                ""
              ]
            ],
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "default": 1000000,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          },
          {
            "default": {
              "to_the_end": {}
            },
            "is_optional": true,
            "kind": "scalar",
            "name": "scanner",
            "type": "scanner",
            "version": "4.25.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "delete_objects",
            "type": "bool"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "targets_input",
            "type": "input",
            "version": "4.27.0"
          }
        ],
        "kind": "scalar",
        "linter": "root = if this.storage_connection_string != \"\" && !this.storage_connection_string.contains(\"AccountName=\")  && !this.storage_connection_string.contains(\"UseDevelopmentStorage=true;\") && this.storage_account == \"\" { [ \"storage_account must be set if storage_connection_string does not contain the \\\"AccountName\\\" parameter\" ] }",
        "name": "",
        "type": "object"
      },
      "name": "azure_blob_storage",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Azure"
      ],
      "config": {
        "children": [
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "account_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "connection_string",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "container",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "partition_keys_map",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "default": -1,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "root = if this < -1 || this == 0 || this > 2147483647 { [ \"batch_count must be must be > 0 and smaller than 2147483647 or -1.\" ] }",
            "name": "batch_count",
            "type": "int"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "linter": "root = []\nlet hasEndpoint = this.endpoint.or(\"\") != \"\"\nlet hasConnectionString = this.connection_string.or(\"\") != \"\"\n\nroot.\"-\" = if !$hasEndpoint && !$hasConnectionString {\n  \"Either `endpoint` or `connection_string` must be set.\"\n}\n",
        "name": "",
        "type": "object"
      },
      "name": "azure_cosmosdb",
      "plugin": true,
      "status": "experimental",
      "type": "input",
      "version": "v4.25.0"
    },
    {
      "categories": [
        "Services",
        "Azure"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_account",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_access_key",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_connection_string",
            "type": "string"
          },
          {
            "default": "",
            "is_deprecated": true,
            "kind": "scalar",
            "name": "storage_sas_token",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "queue_name",
            "type": "string"
          },
          {
            "default": "30s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "dequeue_visibility_timeout",
            "type": "string",
            "version": "3.45.0"
          },
          {
            "default": 10,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "track_properties",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "linter": "root = if this.storage_connection_string != \"\" && !this.storage_connection_string.contains(\"AccountName=\")  && !this.storage_connection_string.contains(\"UseDevelopmentStorage=true;\") && this.storage_account == \"\" { [ \"storage_account must be set if storage_connection_string does not contain the \\\"AccountName\\\" parameter\" ] }",
        "name": "",
        "type": "object"
      },
      "name": "azure_queue_storage",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "3.42.0"
    },
    {
      "categories": [
        "Services",
        "Azure"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_account",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_access_key",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_connection_string",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_sas_token",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "table_name",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "filter",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "select",
            "type": "string"
          },
          {
            "default": 1000,
            "is_advanced": true,
            "kind": "scalar",
            "name": "page_size",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "linter": "root = if this.storage_connection_string != \"\" && !this.storage_connection_string.contains(\"AccountName=\")  && !this.storage_connection_string.contains(\"UseDevelopmentStorage=true;\") && this.storage_account == \"\" { [ \"storage_account must be set if storage_connection_string does not contain the \\\"AccountName\\\" parameter\" ] }",
        "name": "",
        "type": "object"
      },
      "name": "azure_table_storage",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.10.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "child",
            "type": "input"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "policy",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "batched",
      "plugin": true,
      "status": "stable",
      "type": "input",
      "version": "4.11.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "address",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "beanstalkd",
      "plugin": true,
      "status": "experimental",
      "type": "input",
      "version": "4.7.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": 1,
            "is_advanced": true,
            "kind": "scalar",
            "name": "copies",
            "type": "int"
          },
          {
            "kind": "array",
            "name": "inputs",
            "type": "input"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "broker",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "addresses",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "password_authenticator",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "disable_initial_host_lookup",
            "type": "bool"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          },
          {
            "default": "600ms",
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "local_dc",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "local_rack",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "linter": "root = if this.local_rack != \"\" && (!this.exists(\"local_dc\") || this.local_dc == \"\") { \"local_dc must be set if local_rack is set\" }",
            "name": "host_selection_policy",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "cassandra",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "kind": "array",
            "name": "tables",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "cursor_cache",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "options",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "cockroachdb_changefeed",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": [
        "Local"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "paths",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "parse_header_row",
            "type": "bool"
          },
          {
            "default": ",",
            "kind": "scalar",
            "name": "delimiter",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "lazy_quotes",
            "type": "bool",
            "version": "4.1.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "delete_on_finish",
            "type": "bool"
          },
          {
            "default": 1,
            "is_advanced": true,
            "kind": "scalar",
            "name": "batch_count",
            "type": "int"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "csv",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services",
        "Social"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "channel_id",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "bot_token",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "cache",
            "type": "string"
          },
          {
            "default": "last_message_id",
            "is_advanced": true,
            "kind": "scalar",
            "name": "cache_key",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": "1m",
            "is_deprecated": true,
            "kind": "scalar",
            "name": "poll_period",
            "type": "string"
          },
          {
            "default": 100,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "limit",
            "type": "int"
          },
          {
            "default": "An optional rate limit resource to restrict API requests with.",
            "is_deprecated": true,
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "discord",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": {},
            "kind": "map",
            "name": "inputs",
            "type": "input"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "dynamic",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Local"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "paths",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "auto",
                ""
              ],
              [
                "all-bytes",
                ""
              ],
              [
                "avro-ocf:marshaler=x",
                ""
              ],
              [
                "chunker:x",
                ""
              ],
              [
                "csv",
                ""
              ],
              [
                "csv:x",
                ""
              ],
              [
                "csv-safe",
                ""
              ],
              [
                "csv-safe:x",
                ""
              ],
              [
                "delim:x",
                ""
              ],
              [
                "gzip",
                ""
              ],
              [
                "pgzip",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "multipart",
                ""
              ],
              [
                "regex:(?m)^\\d\\d:\\d\\d:\\d\\d",
                ""
              ],
              [
                "skipbom",
                ""
              ],
              [
                "tar",
                ""
              ]
            ],
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "default": 1000000,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          },
          {
            "default": {
              "lines": {}
            },
            "is_optional": true,
            "kind": "scalar",
            "name": "scanner",
            "type": "scanner",
            "version": "4.25.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "delete_on_finish",
            "type": "bool"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "file",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "default": "/",
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "200",
                "interpolated": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "status",
                "type": "string"
              },
              {
                "default": {
                  "Content-Type": "application/octet-stream"
                },
                "interpolated": true,
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": [],
                    "is_advanced": true,
                    "kind": "array",
                    "name": "include_prefixes",
                    "type": "string"
                  },
                  {
                    "default": [],
                    "is_advanced": true,
                    "kind": "array",
                    "name": "include_patterns",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "kind": "scalar",
                "name": "metadata_headers",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "sync_response",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gateway",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services",
        "GCP"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "project",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "columns",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "where",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": {},
            "kind": "map",
            "name": "job_labels",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "priority",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "suffix",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_bigquery_select",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "3.63.0"
    },
    {
      "categories": [
        "Services",
        "GCP"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "auto",
                ""
              ],
              [
                "all-bytes",
                ""
              ],
              [
                "avro-ocf:marshaler=x",
                ""
              ],
              [
                "chunker:x",
                ""
              ],
              [
                "csv",
                ""
              ],
              [
                "csv:x",
                ""
              ],
              [
                "csv-safe",
                ""
              ],
              [
                "csv-safe:x",
                ""
              ],
              [
                "delim:x",
                ""
              ],
              [
                "gzip",
                ""
              ],
              [
                "pgzip",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "multipart",
                ""
              ],
              [
                "regex:(?m)^\\d\\d:\\d\\d:\\d\\d",
                ""
              ],
              [
                "skipbom",
                ""
              ],
              [
                "tar",
                ""
              ]
            ],
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "default": 1000000,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          },
          {
            "default": {
              "to_the_end": {}
            },
            "is_optional": true,
            "kind": "scalar",
            "name": "scanner",
            "type": "scanner",
            "version": "4.25.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "delete_objects",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_cloud_storage",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "3.43.0"
    },
    {
      "categories": [
        "Services",
        "GCP"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "project",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "subscription",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "sync",
            "type": "bool"
          },
          {
            "default": 1000,
            "kind": "scalar",
            "name": "max_outstanding_messages",
            "type": "int"
          },
          {
            "default": 1000000000,
            "kind": "scalar",
            "name": "max_outstanding_bytes",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "topic",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "create_subscription",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_pubsub",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services",
        "GCP"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials_json",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "project_id",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "instance_id",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database_id",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "stream_id",
            "type": "string"
          },
          {
            "default": "",
            "is_optional": true,
            "kind": "scalar",
            "name": "start_timestamp",
            "type": "string"
          },
          {
            "default": "",
            "is_optional": true,
            "kind": "scalar",
            "name": "end_timestamp",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "heartbeat_interval",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata_table",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "min_watermark_cache_ttl",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "allowed_mod_types",
            "type": "string"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_spanner_cdc",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.56.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "mapping",
            "type": "string"
          },
          {
            "default": "1s",
            "kind": "scalar",
            "name": "interval",
            "type": "string"
          },
          {
            "default": 0,
            "kind": "scalar",
            "name": "count",
            "type": "int"
          },
          {
            "default": 1,
            "kind": "scalar",
            "name": "batch_size",
            "type": "int"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "generate",
      "plugin": true,
      "status": "stable",
      "type": "input",
      "version": "3.40.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "repository_url",
            "type": "string"
          },
          {
            "default": "main",
            "kind": "scalar",
            "name": "branch",
            "type": "string"
          },
          {
            "default": "10s",
            "kind": "scalar",
            "name": "poll_interval",
            "type": "string"
          },
          {
            "default": [],
            "is_optional": true,
            "kind": "array",
            "name": "include_patterns",
            "type": "string"
          },
          {
            "default": [],
            "is_optional": true,
            "kind": "array",
            "name": "exclude_patterns",
            "type": "string"
          },
          {
            "default": 10485760,
            "kind": "scalar",
            "name": "max_file_size",
            "type": "int"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "checkpoint_cache",
            "type": "string"
          },
          {
            "default": "git_last_commit",
            "is_optional": true,
            "kind": "scalar",
            "name": "checkpoint_key",
            "type": "string"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "default": "",
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_optional": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "is_optional": true,
                "kind": "scalar",
                "name": "basic",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "private_key_path",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_optional": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "private_key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_optional": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "passphrase",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "is_optional": true,
                "kind": "scalar",
                "name": "ssh_key",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_optional": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "value",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "object"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "git",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.51.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "hosts",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "user",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "directory",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "hdfs",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "default": "GET",
            "kind": "scalar",
            "name": "verb",
            "type": "string"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "headers",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"trace\": true,\n  \"debug\": true,\n  \"info\": true,\n  \"warn\": true,\n  \"error\": true,\n  \"fatal\": true,\n  \"\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "dump_request_log_level",
            "options": [
              "TRACE",
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR",
              "FATAL",
              ""
            ],
            "type": "string",
            "version": "4.12.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "consumer_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "consumer_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "access_token_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "client_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "client_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token_url",
                "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                "type": "string"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "scopes",
                "type": "string",
                "version": "3.45.0"
              },
              {
                "default": {},
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "linter": "\nroot = if this.type() == \"object\" {\n  this.values().map_each(ele -> if ele.type() != \"array\" {\n    \"field must be an object containing arrays of strings, got %s (%v)\".format(ele.format_json(no_indent: true), ele.type())\n  } else {\n    ele.map_each(str -> if str.type() != \"string\" {\n      \"field values must be strings, got %s (%v)\".format(str.format_json(no_indent: true), str.type())\n    } else { deleted() })\n  }).\n    flatten()\n}\n",
                "name": "endpoint_params",
                "type": "unknown",
                "version": "4.21.0"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth2",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "signing_method",
                "type": "string"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "claims",
                "type": "unknown"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "unknown"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "jwt",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "extract_headers",
            "type": "object"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          },
          {
            "default": "5s",
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "1s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "retry_period",
            "type": "string"
          },
          {
            "default": "300s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retry_backoff",
            "type": "string"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "int"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "follow_redirects",
            "type": "bool"
          },
          {
            "default": [
              429
            ],
            "is_advanced": true,
            "kind": "array",
            "name": "backoff_on",
            "type": "int"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "drop_on",
            "type": "int"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "successful_on",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "proxy_url",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "disable_http2",
            "type": "bool",
            "version": "4.44.0"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "payload",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "drop_empty_bodies",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": false,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": true,
                "kind": "scalar",
                "name": "reconnect",
                "type": "bool"
              },
              {
                "annotated_options": [
                  [
                    "auto",
                    ""
                  ],
                  [
                    "all-bytes",
                    ""
                  ],
                  [
                    "avro-ocf:marshaler=x",
                    ""
                  ],
                  [
                    "chunker:x",
                    ""
                  ],
                  [
                    "csv",
                    ""
                  ],
                  [
                    "csv:x",
                    ""
                  ],
                  [
                    "csv-safe",
                    ""
                  ],
                  [
                    "csv-safe:x",
                    ""
                  ],
                  [
                    "delim:x",
                    ""
                  ],
                  [
                    "gzip",
                    ""
                  ],
                  [
                    "pgzip",
                    ""
                  ],
                  [
                    "lines",
                    ""
                  ],
                  [
                    "multipart",
                    ""
                  ],
                  [
                    "regex:(?m)^\\d\\d:\\d\\d:\\d\\d",
                    ""
                  ],
                  [
                    "skipbom",
                    ""
                  ],
                  [
                    "tar",
                    ""
                  ]
                ],
                "is_deprecated": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "codec",
                "type": "string"
              },
              {
                "default": 1000000,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "max_buffer",
                "type": "int"
              },
              {
                "default": {
                  "lines": {}
                },
                "is_optional": true,
                "kind": "scalar",
                "name": "scanner",
                "type": "scanner",
                "version": "4.25.0"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "stream",
            "type": "object"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "http_client",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "default": "/post",
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "default": "/post/ws",
            "kind": "scalar",
            "name": "ws_path",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "ws_welcome_message",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "ws_rate_limit_message",
            "type": "string"
          },
          {
            "default": [
              "POST"
            ],
            "kind": "array",
            "name": "allowed_verbs",
            "type": "string",
            "version": "3.33.0"
          },
          {
            "default": "5s",
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "cert_file",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "key_file",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "allowed_origins",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "cors",
            "type": "object",
            "version": "3.63.0"
          },
          {
            "children": [
              {
                "default": "200",
                "interpolated": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "status",
                "type": "string"
              },
              {
                "default": {
                  "Content-Type": "application/octet-stream"
                },
                "interpolated": true,
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": [],
                    "is_advanced": true,
                    "kind": "array",
                    "name": "include_prefixes",
                    "type": "string"
                  },
                  {
                    "default": [],
                    "is_advanced": true,
                    "kind": "array",
                    "name": "include_patterns",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "kind": "scalar",
                "name": "metadata_headers",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "sync_response",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "http_server",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": "",
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "inproc",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "addresses",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "topics",
            "type": "string",
            "version": "3.33.0"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "target_version",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "default": "none",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "user",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token_cache",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token_key",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "consumer_group",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "instance_id",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rack_id",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "start_from_oldest",
            "type": "bool"
          },
          {
            "default": 1024,
            "kind": "scalar",
            "name": "checkpoint_limit",
            "type": "int",
            "version": "3.33.0"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timely_nacks_maximum_wait",
            "type": "string"
          },
          {
            "default": "1s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "commit_period",
            "type": "string"
          },
          {
            "default": "100ms",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_processing_period",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "extract_tracing_map",
            "type": "string",
            "version": "3.45.0"
          },
          {
            "children": [
              {
                "default": "10s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "session_timeout",
                "type": "string"
              },
              {
                "default": "3s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "heartbeat_interval",
                "type": "string"
              },
              {
                "default": "60s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "rebalance_timeout",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "group",
            "type": "object"
          },
          {
            "default": 256,
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_buffer_cap",
            "type": "int"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "multi_header",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "is_advanced": true,
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "kafka",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "seed_brokers",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "AWS_MSK_IAM",
                    ""
                  ],
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "extensions",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "profile",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "id",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "secret",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "token",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "from_ec2_role",
                        "type": "bool",
                        "version": "4.2.0"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role_external_id",
                        "type": "string"
                      }
                    ],
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "credentials",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "aws",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "5m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "metadata_max_age",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "request_timeout_overhead",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "conn_idle_timeout",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "topics",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "regexp_topics",
            "type": "bool"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rack_id",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "instance_id",
            "type": "string"
          },
          {
            "default": "45s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rebalance_timeout",
            "type": "string"
          },
          {
            "default": "1m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "session_timeout",
            "type": "string"
          },
          {
            "default": "3s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "heartbeat_interval",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "start_from_oldest",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "committed",
                ""
              ],
              [
                "earliest",
                ""
              ],
              [
                "latest",
                ""
              ]
            ],
            "default": "earliest",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"committed\": true,\n  \"earliest\": true,\n  \"latest\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "start_offset",
            "type": "string"
          },
          {
            "default": "50MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_bytes",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_wait",
            "type": "string"
          },
          {
            "default": "1B",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_min_bytes",
            "type": "string"
          },
          {
            "default": "1MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_partition_bytes",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "read_committed",
                ""
              ],
              [
                "read_uncommitted",
                ""
              ]
            ],
            "default": "read_uncommitted",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"read_committed\": true,\n  \"read_uncommitted\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "transaction_isolation_level",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "consumer_group",
            "type": "string"
          },
          {
            "default": 1024,
            "is_advanced": true,
            "kind": "scalar",
            "name": "checkpoint_limit",
            "type": "int"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "commit_period",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "multi_header",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "is_advanced": true,
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "topic_lag_refresh_period",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timely_nacks_maximum_wait",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "\nlet has_topic_partitions = this.topics.any(t -> t.contains(\":\"))\n\nroot = [\n  if $has_topic_partitions {\n    if this.consumer_group.or(\"\") != \"\" {\n      \"this input does not support both a consumer group and explicit topic partitions\"\n    } else if this.regexp_topics {\n      \"this input does not support both regular expression topics and explicit topic partitions\"\n    }\n  } else {\n    if this.consumer_group.or(\"\") == \"\" {\n      \"a consumer group is mandatory when not using explicit topic partitions\"\n    }\n  },\n  # We don't have any way to distinguish between start_from_oldest set explicitly to true and not set at all, so we\n  # assume users will be OK if start_offset overwrites it silently\n  if this.start_from_oldest == false && this.start_offset == \"earliest\" {\n    \"start_from_oldest cannot be set to false when start_offset is set to earliest\"\n  }\n]\n",
        "name": "",
        "type": "object"
      },
      "name": "kafka_franz",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "3.61.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "app_name",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "collection",
            "type": "string"
          },
          {
            "default": "find",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"find\": true,\n  \"aggregate\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operation",
            "options": [
              "find",
              "aggregate"
            ],
            "type": "string",
            "version": "4.2.0"
          },
          {
            "annotated_options": [
              [
                "canonical",
                ""
              ],
              [
                "relaxed",
                ""
              ]
            ],
            "default": "canonical",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"canonical\": true,\n  \"relaxed\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "json_marshal_mode",
            "type": "string",
            "version": "4.7.0"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "batch_size",
            "type": "int",
            "version": "4.26.0"
          },
          {
            "is_optional": true,
            "kind": "map",
            "name": "sort",
            "type": "int",
            "version": "4.26.0"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "limit",
            "type": "int",
            "version": "4.26.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "mongodb",
      "plugin": true,
      "status": "experimental",
      "type": "input",
      "version": "3.64.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "collections",
            "type": "string"
          },
          {
            "default": "mongodb_cdc_checkpoint",
            "kind": "scalar",
            "name": "checkpoint_key",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "checkpoint_cache",
            "type": "string"
          },
          {
            "default": "5s",
            "kind": "scalar",
            "name": "checkpoint_interval",
            "type": "string"
          },
          {
            "default": 1000,
            "kind": "scalar",
            "name": "checkpoint_limit",
            "type": "int"
          },
          {
            "default": 1000,
            "kind": "scalar",
            "name": "read_batch_size",
            "type": "int"
          },
          {
            "default": "1s",
            "kind": "scalar",
            "name": "read_max_wait",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "stream_snapshot",
            "type": "bool"
          },
          {
            "default": 1,
            "kind": "scalar",
            "linter": "match {\n  this < 1 => [\"field snapshot_parallelism must be greater or equal to 1.\"],\n}",
            "name": "snapshot_parallelism",
            "type": "int"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "snapshot_auto_bucket_sharding",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "partial_update",
                ""
              ],
              [
                "pre_and_post_images",
                ""
              ],
              [
                "update_lookup",
                ""
              ]
            ],
            "default": "update_lookup",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"partial_update\": true,\n  \"pre_and_post_images\": true,\n  \"update_lookup\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "document_mode",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "canonical",
                ""
              ],
              [
                "relaxed",
                ""
              ]
            ],
            "default": "canonical",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"canonical\": true,\n  \"relaxed\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "json_marshal_mode",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "app_name",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "mongodb_cdc",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "nanoid",
                ""
              ]
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = []",
            "name": "dynamic_client_id_suffix",
            "type": "string"
          },
          {
            "default": "30s",
            "kind": "scalar",
            "name": "connect_timeout",
            "type": "string",
            "version": "3.58.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "qos",
                "type": "int"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "retained",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "topic",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "payload",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "will",
            "type": "object"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "user",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": 30,
            "is_advanced": true,
            "kind": "scalar",
            "name": "keepalive",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "kind": "array",
            "name": "topics",
            "type": "string"
          },
          {
            "default": 1,
            "is_advanced": true,
            "kind": "scalar",
            "name": "qos",
            "type": "int"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "clean_session",
            "type": "bool"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "mqtt",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "annotated_options": [
              [
                "mariadb",
                ""
              ],
              [
                "mysql",
                ""
              ]
            ],
            "default": "mysql",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mariadb\": true,\n  \"mysql\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "flavor",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "kind": "array",
            "linter": "root = if this.length() == 0 { [ \"field 'tables' must contain at least one table\" ] }",
            "name": "tables",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "checkpoint_cache",
            "type": "string"
          },
          {
            "default": "mysql_binlog_position",
            "kind": "scalar",
            "name": "checkpoint_key",
            "type": "string"
          },
          {
            "default": 1000,
            "kind": "scalar",
            "name": "snapshot_max_batch_size",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "stream_snapshot",
            "type": "bool"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": 1024,
            "kind": "scalar",
            "name": "checkpoint_limit",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "mysql_cdc",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.45.0"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "bind",
            "type": "bool"
          },
          {
            "default": "PULL",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"pull\": true,\n  \"sub\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "socket_type",
            "options": [
              "PULL",
              "SUB"
            ],
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": [],
            "kind": "array",
            "name": "sub_filters",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "poll_timeout",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nanomsg",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "subject",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "queue",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "send_ack",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "nak_delay",
            "type": "string"
          },
          {
            "default": 500000,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "root = if this < 0 { [\"prefetch count must be greater than or equal to zero\"] }",
            "name": "prefetch_count",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          },
          {
            "bloblang": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "extract_tracing_map",
            "type": "string",
            "version": "4.23.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nats",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "queue",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "subject",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "durable",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "stream",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "bind",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "all",
                ""
              ],
              [
                "last",
                ""
              ],
              [
                "last_per_subject",
                ""
              ],
              [
                "new",
                ""
              ]
            ],
            "default": "all",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"all\": true,\n  \"last\": true,\n  \"last_per_subject\": true,\n  \"new\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "deliver",
            "type": "string"
          },
          {
            "default": "30s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "ack_wait",
            "type": "string"
          },
          {
            "default": 1024,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_ack_pending",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          },
          {
            "bloblang": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "extract_tracing_map",
            "type": "string",
            "version": "4.23.0"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n\t\t\tthis.exists(\"queue\") && this.queue != \"\" && this.exists(\"durable\") && this.durable != \"\" => [ \"both 'queue' and 'durable' can't be set simultaneously\" ],\n\t\t\t}",
        "name": "",
        "type": "object"
      },
      "name": "nats_jetstream",
      "plugin": true,
      "status": "stable",
      "type": "input",
      "version": "3.46.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "default": ">",
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "ignore_deletes",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "include_history",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "meta_only",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nats_kv",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.12.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "cluster_id",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "queue",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "subject",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "durable_name",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "unsubscribe_on_close",
            "type": "bool"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "start_from_oldest",
            "type": "bool"
          },
          {
            "default": 1024,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_inflight",
            "type": "int"
          },
          {
            "default": "30s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "ack_wait",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          },
          {
            "bloblang": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "extract_tracing_map",
            "type": "string",
            "version": "4.23.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nats_stream",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "nsqd_tcp_addresses",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "lookupd_http_addresses",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "channel",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "user_agent",
            "type": "string"
          },
          {
            "default": 100,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": 5,
            "kind": "scalar",
            "name": "max_attempts",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nsq",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "children": [
              {
                "is_optional": true,
                "kind": "array",
                "name": "seed_brokers",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "skip_cert_verify",
                    "type": "bool"
                  },
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enable_renegotiation",
                    "type": "bool",
                    "version": "3.45.0"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "root_cas",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "root_cas_file",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "cert",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "key",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "cert_file",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "key_file",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "password",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      }
                    ],
                    "default": [],
                    "is_advanced": true,
                    "kind": "array",
                    "name": "client_certs",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "kind": "scalar",
                "name": "tls",
                "type": "object"
              },
              {
                "kind": "array",
                "name": "topics",
                "type": "string"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "regexp_topics",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "rack_id",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "instance_id",
                "type": "string"
              },
              {
                "default": "45s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "rebalance_timeout",
                "type": "string"
              },
              {
                "default": "1m",
                "is_advanced": true,
                "kind": "scalar",
                "name": "session_timeout",
                "type": "string"
              },
              {
                "default": "3s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "heartbeat_interval",
                "type": "string"
              },
              {
                "default": true,
                "is_advanced": true,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "start_from_oldest",
                "type": "bool"
              },
              {
                "annotated_options": [
                  [
                    "committed",
                    ""
                  ],
                  [
                    "earliest",
                    ""
                  ],
                  [
                    "latest",
                    ""
                  ]
                ],
                "default": "earliest",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"committed\": true,\n  \"earliest\": true,\n  \"latest\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "start_offset",
                "type": "string"
              },
              {
                "default": "50MiB",
                "is_advanced": true,
                "kind": "scalar",
                "name": "fetch_max_bytes",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "fetch_max_wait",
                "type": "string"
              },
              {
                "default": "1B",
                "is_advanced": true,
                "kind": "scalar",
                "name": "fetch_min_bytes",
                "type": "string"
              },
              {
                "default": "1MiB",
                "is_advanced": true,
                "kind": "scalar",
                "name": "fetch_max_partition_bytes",
                "type": "string"
              },
              {
                "annotated_options": [
                  [
                    "read_committed",
                    ""
                  ],
                  [
                    "read_uncommitted",
                    ""
                  ]
                ],
                "default": "read_uncommitted",
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"read_committed\": true,\n  \"read_uncommitted\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "transaction_isolation_level",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "consumer_group",
                "type": "string"
              },
              {
                "default": 1024,
                "is_advanced": true,
                "kind": "scalar",
                "name": "checkpoint_limit",
                "type": "int"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "commit_period",
                "type": "string"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "multi_header",
                "type": "bool"
              },
              {
                "children": [
                  {
                    "default": 0,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "count",
                    "type": "int"
                  },
                  {
                    "default": 0,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "byte_size",
                    "type": "int"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "period",
                    "type": "string"
                  },
                  {
                    "bloblang": true,
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "check",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "array",
                    "name": "processors",
                    "type": "processor"
                  }
                ],
                "is_advanced": true,
                "kind": "",
                "name": "batching",
                "type": "object"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "topic_lag_refresh_period",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "linter": "\nlet has_topic_partitions = this.topics.any(t -> t.contains(\":\"))\n\nroot = [\n  if $has_topic_partitions {\n    if this.consumer_group.or(\"\") != \"\" {\n      \"this input does not support both a consumer group and explicit topic partitions\"\n    } else if this.regexp_topics {\n      \"this input does not support both regular expression topics and explicit topic partitions\"\n    }\n  } else {\n    if this.consumer_group.or(\"\") == \"\" {\n      \"a consumer group is mandatory when not using explicit topic partitions\"\n    }\n  },\n  # We don't have any way to distinguish between start_from_oldest set explicitly to true and not set at all, so we\n  # assume users will be OK if start_offset overwrites it silently\n  if this.start_from_oldest == false && this.start_offset == \"earliest\" {\n    \"start_from_oldest cannot be set to false when start_offset is set to earliest\"\n  }\n]\n",
            "name": "kafka",
            "type": "object"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "disable_content_encryption",
            "type": "bool"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "enrollment_ticket",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "identity_name",
            "type": "string"
          },
          {
            "default": "self",
            "kind": "scalar",
            "name": "allow",
            "type": "string"
          },
          {
            "default": "self",
            "kind": "scalar",
            "name": "route_to_kafka_outlet",
            "type": "string"
          },
          {
            "default": "self",
            "kind": "scalar",
            "name": "allow_producer",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "relay",
            "type": "string"
          },
          {
            "default": "127.0.0.1:6262",
            "kind": "scalar",
            "name": "node_address",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "encrypted_fields",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "ockam_kafka",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": [
        "Local"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "paths",
            "type": "string"
          },
          {
            "default": 1,
            "is_advanced": true,
            "kind": "scalar",
            "name": "batch_count",
            "type": "int"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "parquet",
      "plugin": true,
      "status": "experimental",
      "type": "input",
      "version": "4.8.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "include_transaction_markers",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "stream_snapshot",
            "type": "bool"
          },
          {
            "default": 1,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "snapshot_memory_safety_factor",
            "type": "float"
          },
          {
            "default": 1000,
            "kind": "scalar",
            "name": "snapshot_batch_size",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "schema",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "tables",
            "type": "string"
          },
          {
            "default": 1024,
            "kind": "scalar",
            "name": "checkpoint_limit",
            "type": "int"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "temporary_slot",
            "type": "bool"
          },
          {
            "kind": "scalar",
            "name": "slot_name",
            "type": "string"
          },
          {
            "default": "10s",
            "kind": "scalar",
            "name": "pg_standby_timeout",
            "type": "string"
          },
          {
            "default": "3s",
            "kind": "scalar",
            "name": "pg_wal_monitor_interval",
            "type": "string"
          },
          {
            "default": 1,
            "kind": "scalar",
            "name": "max_parallel_snapshot_tables",
            "type": "int"
          },
          {
            "default": null,
            "is_advanced": true,
            "kind": "scalar",
            "name": "unchanged_toast_value",
            "type": "unknown"
          },
          {
            "default": "1h",
            "is_advanced": true,
            "kind": "scalar",
            "name": "heartbeat_interval",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "pg_stream",
      "plugin": true,
      "status": "deprecated",
      "type": "input",
      "version": "4.39.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "include_transaction_markers",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "stream_snapshot",
            "type": "bool"
          },
          {
            "default": 1,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "snapshot_memory_safety_factor",
            "type": "float"
          },
          {
            "default": 1000,
            "kind": "scalar",
            "name": "snapshot_batch_size",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "schema",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "tables",
            "type": "string"
          },
          {
            "default": 1024,
            "kind": "scalar",
            "name": "checkpoint_limit",
            "type": "int"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "temporary_slot",
            "type": "bool"
          },
          {
            "kind": "scalar",
            "name": "slot_name",
            "type": "string"
          },
          {
            "default": "10s",
            "kind": "scalar",
            "name": "pg_standby_timeout",
            "type": "string"
          },
          {
            "default": "3s",
            "kind": "scalar",
            "name": "pg_wal_monitor_interval",
            "type": "string"
          },
          {
            "default": 1,
            "kind": "scalar",
            "name": "max_parallel_snapshot_tables",
            "type": "int"
          },
          {
            "default": null,
            "is_advanced": true,
            "kind": "scalar",
            "name": "unchanged_toast_value",
            "type": "unknown"
          },
          {
            "default": "1h",
            "is_advanced": true,
            "kind": "scalar",
            "name": "heartbeat_interval",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "postgres_cdc",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.39.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "array",
            "name": "topics",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "topics_pattern",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "subscription_name",
            "type": "string"
          },
          {
            "default": "shared",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"shared\": true,\n  \"key_shared\": true,\n  \"failover\": true,\n  \"exclusive\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "subscription_type",
            "options": [
              "shared",
              "key_shared",
              "failover",
              "exclusive"
            ],
            "type": "string"
          },
          {
            "default": "latest",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"latest\": true,\n  \"earliest\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "subscription_initial_position",
            "options": [
              "latest",
              "earliest"
            ],
            "type": "string"
          },
          {
            "children": [
              {
                "default": "",
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "audience",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "issuer_url",
                    "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "scope",
                    "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "private_key_file",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "oauth2",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "token",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object",
            "version": "3.60.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "pulsar",
      "plugin": true,
      "status": "experimental",
      "type": "input",
      "version": "3.43.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "input",
            "type": "input"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "check",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "idle_timeout",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "restart_input",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "read_until",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int",
            "version": "4.9.0"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "blpop",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"blpop\": true,\n  \"brpop\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "command",
            "options": [
              "blpop",
              "brpop"
            ],
            "type": "string",
            "version": "4.22.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis_list",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "kind": "array",
            "name": "channels",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "use_patterns",
            "type": "bool"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis_pubsub",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "match",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis_scan",
      "plugin": true,
      "status": "experimental",
      "type": "input",
      "version": "4.27.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": "body",
            "kind": "scalar",
            "name": "body_key",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "streams",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "default": 10,
            "kind": "scalar",
            "name": "limit",
            "type": "int"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "consumer_group",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "create_streams",
            "type": "bool"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "start_from_oldest",
            "type": "bool"
          },
          {
            "default": "1s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "commit_period",
            "type": "string"
          },
          {
            "default": "1s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis_streams",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "seed_brokers",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "AWS_MSK_IAM",
                    ""
                  ],
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "extensions",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "profile",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "id",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "secret",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "token",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "from_ec2_role",
                        "type": "bool",
                        "version": "4.2.0"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role_external_id",
                        "type": "string"
                      }
                    ],
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "credentials",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "aws",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "5m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "metadata_max_age",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "request_timeout_overhead",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "conn_idle_timeout",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "topics",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "regexp_topics",
            "type": "bool"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rack_id",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "instance_id",
            "type": "string"
          },
          {
            "default": "45s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rebalance_timeout",
            "type": "string"
          },
          {
            "default": "1m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "session_timeout",
            "type": "string"
          },
          {
            "default": "3s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "heartbeat_interval",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "start_from_oldest",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "committed",
                ""
              ],
              [
                "earliest",
                ""
              ],
              [
                "latest",
                ""
              ]
            ],
            "default": "earliest",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"committed\": true,\n  \"earliest\": true,\n  \"latest\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "start_offset",
            "type": "string"
          },
          {
            "default": "50MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_bytes",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_wait",
            "type": "string"
          },
          {
            "default": "1B",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_min_bytes",
            "type": "string"
          },
          {
            "default": "1MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_partition_bytes",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "read_committed",
                ""
              ],
              [
                "read_uncommitted",
                ""
              ]
            ],
            "default": "read_uncommitted",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"read_committed\": true,\n  \"read_uncommitted\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "transaction_isolation_level",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "consumer_group",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "commit_period",
            "type": "string"
          },
          {
            "default": "1MB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "partition_buffer_bytes",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "topic_lag_refresh_period",
            "type": "string"
          },
          {
            "default": "32KB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_yield_batch_bytes",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timely_nacks_maximum_wait",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "\nlet has_topic_partitions = this.topics.any(t -> t.contains(\":\"))\n\nroot = [\n  if $has_topic_partitions {\n    if this.consumer_group.or(\"\") != \"\" {\n      \"this input does not support both a consumer group and explicit topic partitions\"\n    } else if this.regexp_topics {\n      \"this input does not support both regular expression topics and explicit topic partitions\"\n    }\n  } else {\n    if this.consumer_group.or(\"\") == \"\" {\n      \"a consumer group is mandatory when not using explicit topic partitions\"\n    }\n  },\n  # We don't have any way to distinguish between start_from_oldest set explicitly to true and not set at all, so we\n  # assume users will be OK if start_offset overwrites it silently\n  if this.start_from_oldest == false && this.start_offset == \"earliest\" {\n    \"start_from_oldest cannot be set to false when start_offset is set to earliest\"\n  }\n]\n",
        "name": "",
        "type": "object"
      },
      "name": "redpanda",
      "plugin": true,
      "status": "beta",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "topics",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "regexp_topics",
            "type": "bool"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rack_id",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "instance_id",
            "type": "string"
          },
          {
            "default": "45s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rebalance_timeout",
            "type": "string"
          },
          {
            "default": "1m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "session_timeout",
            "type": "string"
          },
          {
            "default": "3s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "heartbeat_interval",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "start_from_oldest",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "committed",
                ""
              ],
              [
                "earliest",
                ""
              ],
              [
                "latest",
                ""
              ]
            ],
            "default": "earliest",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"committed\": true,\n  \"earliest\": true,\n  \"latest\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "start_offset",
            "type": "string"
          },
          {
            "default": "50MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_bytes",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_wait",
            "type": "string"
          },
          {
            "default": "1B",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_min_bytes",
            "type": "string"
          },
          {
            "default": "1MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_partition_bytes",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "read_committed",
                ""
              ],
              [
                "read_uncommitted",
                ""
              ]
            ],
            "default": "read_uncommitted",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"read_committed\": true,\n  \"read_uncommitted\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "transaction_isolation_level",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "consumer_group",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "commit_period",
            "type": "string"
          },
          {
            "default": "1MB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "partition_buffer_bytes",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "topic_lag_refresh_period",
            "type": "string"
          },
          {
            "default": "32KB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_yield_batch_bytes",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timely_nacks_maximum_wait",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "\nlet has_topic_partitions = this.topics.any(t -> t.contains(\":\"))\n\nroot = [\n  if $has_topic_partitions {\n    if this.consumer_group.or(\"\") != \"\" {\n      \"this input does not support both a consumer group and explicit topic partitions\"\n    } else if this.regexp_topics {\n      \"this input does not support both regular expression topics and explicit topic partitions\"\n    }\n  } else {\n    if this.consumer_group.or(\"\") == \"\" {\n      \"a consumer group is mandatory when not using explicit topic partitions\"\n    }\n  },\n  # We don't have any way to distinguish between start_from_oldest set explicitly to true and not set at all, so we\n  # assume users will be OK if start_offset overwrites it silently\n  if this.start_from_oldest == false && this.start_offset == \"earliest\" {\n    \"start_from_oldest cannot be set to false when start_offset is set to earliest\"\n  }\n]\n",
        "name": "",
        "type": "object"
      },
      "name": "redpanda_common",
      "plugin": true,
      "status": "beta",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "seed_brokers",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "AWS_MSK_IAM",
                    ""
                  ],
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "extensions",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "profile",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "id",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "secret",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "token",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "from_ec2_role",
                        "type": "bool",
                        "version": "4.2.0"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role_external_id",
                        "type": "string"
                      }
                    ],
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "credentials",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "aws",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "5m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "metadata_max_age",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "request_timeout_overhead",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "conn_idle_timeout",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "topics",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "regexp_topics",
            "type": "bool"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rack_id",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "instance_id",
            "type": "string"
          },
          {
            "default": "45s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rebalance_timeout",
            "type": "string"
          },
          {
            "default": "1m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "session_timeout",
            "type": "string"
          },
          {
            "default": "3s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "heartbeat_interval",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "start_from_oldest",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "committed",
                ""
              ],
              [
                "earliest",
                ""
              ],
              [
                "latest",
                ""
              ]
            ],
            "default": "earliest",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"committed\": true,\n  \"earliest\": true,\n  \"latest\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "start_offset",
            "type": "string"
          },
          {
            "default": "50MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_bytes",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_wait",
            "type": "string"
          },
          {
            "default": "1B",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_min_bytes",
            "type": "string"
          },
          {
            "default": "1MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_max_partition_bytes",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "read_committed",
                ""
              ],
              [
                "read_uncommitted",
                ""
              ]
            ],
            "default": "read_uncommitted",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"read_committed\": true,\n  \"read_uncommitted\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "transaction_isolation_level",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "consumer_group",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "commit_period",
            "type": "string"
          },
          {
            "default": "1MB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "partition_buffer_bytes",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "topic_lag_refresh_period",
            "type": "string"
          },
          {
            "default": "32KB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_yield_batch_bytes",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timely_nacks_maximum_wait",
            "type": "string"
          },
          {
            "default": "redpanda_migrator_output",
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "output_resource",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "replication_factor_override",
            "type": "bool"
          },
          {
            "default": 3,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "replication_factor",
            "type": "int"
          },
          {
            "default": false,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "multi_header",
            "type": "bool"
          },
          {
            "default": 1024,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "batch_size",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "linter": "\nlet has_topic_partitions = this.topics.any(t -> t.contains(\":\"))\n\nroot = [\n  if $has_topic_partitions {\n    if this.consumer_group.or(\"\") != \"\" {\n      \"this input does not support both a consumer group and explicit topic partitions\"\n    } else if this.regexp_topics {\n      \"this input does not support both regular expression topics and explicit topic partitions\"\n    }\n  } else {\n    if this.consumer_group.or(\"\") == \"\" {\n      \"a consumer group is mandatory when not using explicit topic partitions\"\n    }\n  },\n  # We don't have any way to distinguish between start_from_oldest set explicitly to true and not set at all, so we\n  # assume users will be OK if start_offset overwrites it silently\n  if this.start_from_oldest == false && this.start_offset == \"earliest\" {\n    \"start_from_oldest cannot be set to false when start_offset is set to earliest\"\n  }\n]\n",
        "name": "",
        "type": "object"
      },
      "name": "redpanda_migrator",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.37.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "map",
            "name": "redpanda_migrator",
            "type": "unknown"
          },
          {
            "kind": "map",
            "name": "schema_registry",
            "type": "unknown"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "migrate_schemas_before_data",
            "type": "bool"
          },
          {
            "default": "15s",
            "kind": "scalar",
            "name": "consumer_group_offsets_poll_interval",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redpanda_migrator_bundle",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "seed_brokers",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "AWS_MSK_IAM",
                    ""
                  ],
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "extensions",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "profile",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "id",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "secret",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "token",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "from_ec2_role",
                        "type": "bool",
                        "version": "4.2.0"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role_external_id",
                        "type": "string"
                      }
                    ],
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "credentials",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "aws",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "5m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "metadata_max_age",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "request_timeout_overhead",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "conn_idle_timeout",
            "type": "string"
          },
          {
            "kind": "array",
            "linter": "if this.length() == 0 { [\"at least one topic must be specified\"] }",
            "name": "topics",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "regexp_topics",
            "type": "bool"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rack_id",
            "type": "string"
          },
          {
            "default": "15s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "poll_interval",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "is_deprecated": true,
            "kind": "scalar",
            "name": "consumer_group",
            "type": "string"
          },
          {
            "is_deprecated": true,
            "kind": "scalar",
            "name": "commit_period",
            "type": "string"
          },
          {
            "is_deprecated": true,
            "kind": "scalar",
            "name": "partition_buffer_bytes",
            "type": "string"
          },
          {
            "is_deprecated": true,
            "kind": "scalar",
            "name": "topic_lag_refresh_period",
            "type": "string"
          },
          {
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_yield_batch_bytes",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redpanda_migrator_offsets",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.45.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": "",
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "resource",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "include_deleted",
            "type": "bool"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "subject_filter",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "fetch_in_order",
            "type": "bool",
            "version": "4.37.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "consumer_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "consumer_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "access_token_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "signing_method",
                "type": "string"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "claims",
                "type": "unknown"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "unknown"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "jwt",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "schema_registry",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.32.2"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "children": [
              {
                "default": "none",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"none\": true,\n  \"full-outer\": true,\n  \"outer\": true,\n  \"full-outter\": true,\n  \"outter\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "type",
                "options": [
                  "none",
                  "full-outer",
                  "outer",
                  "full-outter",
                  "outter"
                ],
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "id_path",
                "type": "string"
              },
              {
                "default": 1,
                "is_advanced": true,
                "kind": "scalar",
                "name": "iterations",
                "type": "int"
              },
              {
                "default": "array",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"array\": true,\n  \"replace\": true,\n  \"keep\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "merge_strategy",
                "options": [
                  "array",
                  "replace",
                  "keep"
                ],
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "sharded_join",
            "type": "object",
            "version": "3.40.0"
          },
          {
            "kind": "array",
            "name": "inputs",
            "type": "input"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sequence",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "default": "30s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "connection_timeout",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "",
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "host_public_key_file",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "host_public_key",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "private_key",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_secret": true,
                "kind": "scalar",
                "name": "private_key_pass",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "linter": "\nroot = match {\n  this.exists(\"host_public_key\") && this.exists(\"host_public_key_file\") => \"both host_public_key and host_public_key_file can't be set simultaneously\"\n  this.exists(\"private_key\") && this.exists(\"private_key_file\") => \"both private_key and private_key_file can't be set simultaneously\"\n}",
            "name": "credentials",
            "type": "object"
          },
          {
            "default": 10,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_sftp_sessions",
            "type": "int"
          },
          {
            "kind": "array",
            "name": "paths",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "auto",
                ""
              ],
              [
                "all-bytes",
                ""
              ],
              [
                "avro-ocf:marshaler=x",
                ""
              ],
              [
                "chunker:x",
                ""
              ],
              [
                "csv",
                ""
              ],
              [
                "csv:x",
                ""
              ],
              [
                "csv-safe",
                ""
              ],
              [
                "csv-safe:x",
                ""
              ],
              [
                "delim:x",
                ""
              ],
              [
                "gzip",
                ""
              ],
              [
                "pgzip",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "multipart",
                ""
              ],
              [
                "regex:(?m)^\\d\\d:\\d\\d:\\d\\d",
                ""
              ],
              [
                "skipbom",
                ""
              ],
              [
                "tar",
                ""
              ]
            ],
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "default": 1000000,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          },
          {
            "default": {
              "to_the_end": {}
            },
            "is_optional": true,
            "kind": "scalar",
            "name": "scanner",
            "type": "scanner",
            "version": "4.25.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "delete_on_finish",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": false,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "1s",
                "kind": "scalar",
                "name": "minimum_age",
                "type": "string"
              },
              {
                "default": "1s",
                "kind": "scalar",
                "name": "poll_interval",
                "type": "string"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "cache",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "watcher",
            "type": "object",
            "version": "3.42.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sftp",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "3.39.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\n        root = if !this.has_prefix(\"xapp-\") { [ \"field must start with xapp-\" ] }\n      ",
            "name": "app_token",
            "type": "string"
          },
          {
            "kind": "scalar",
            "linter": "\n        root = if !this.has_prefix(\"xoxb-\") { [ \"field must start with xoxb-\" ] }\n      ",
            "name": "bot_token",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "slack",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\n        root = if !this.has_prefix(\"xoxb-\") { [ \"field must start with xoxb-\" ] }\n      ",
            "name": "bot_token",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "team_id",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "slack_users",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"unix\": true,\n  \"tcp\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "network",
            "options": [
              "unix",
              "tcp"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "open_message_mapping",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "annotated_options": [
              [
                "auto",
                ""
              ],
              [
                "all-bytes",
                ""
              ],
              [
                "avro-ocf:marshaler=x",
                ""
              ],
              [
                "chunker:x",
                ""
              ],
              [
                "csv",
                ""
              ],
              [
                "csv:x",
                ""
              ],
              [
                "csv-safe",
                ""
              ],
              [
                "csv-safe:x",
                ""
              ],
              [
                "delim:x",
                ""
              ],
              [
                "gzip",
                ""
              ],
              [
                "pgzip",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "multipart",
                ""
              ],
              [
                "regex:(?m)^\\d\\d:\\d\\d:\\d\\d",
                ""
              ],
              [
                "skipbom",
                ""
              ],
              [
                "tar",
                ""
              ]
            ],
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "default": 1000000,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          },
          {
            "default": {
              "lines": {}
            },
            "is_optional": true,
            "kind": "scalar",
            "name": "scanner",
            "type": "scanner",
            "version": "4.25.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "socket",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"unix\": true,\n  \"tcp\": true,\n  \"udp\": true,\n  \"tls\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "network",
            "options": [
              "unix",
              "tcp",
              "udp",
              "tls"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "address_cache",
            "type": "string",
            "version": "4.25.0"
          },
          {
            "children": [
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "cert_file",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "key_file",
                "type": "string"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "self_signed",
                "type": "bool"
              },
              {
                "annotated_options": [
                  [
                    "no",
                    ""
                  ],
                  [
                    "request",
                    ""
                  ],
                  [
                    "require_any",
                    ""
                  ],
                  [
                    "require_valid",
                    ""
                  ],
                  [
                    "verify_if_given",
                    ""
                  ]
                ],
                "default": "no",
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"no\": true,\n  \"request\": true,\n  \"require_any\": true,\n  \"require_valid\": true,\n  \"verify_if_given\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "client_auth",
                "type": "string",
                "version": "4.44.1"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "auto",
                ""
              ],
              [
                "all-bytes",
                ""
              ],
              [
                "avro-ocf:marshaler=x",
                ""
              ],
              [
                "chunker:x",
                ""
              ],
              [
                "csv",
                ""
              ],
              [
                "csv:x",
                ""
              ],
              [
                "csv-safe",
                ""
              ],
              [
                "csv-safe:x",
                ""
              ],
              [
                "delim:x",
                ""
              ],
              [
                "gzip",
                ""
              ],
              [
                "pgzip",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "multipart",
                ""
              ],
              [
                "regex:(?m)^\\d\\d:\\d\\d:\\d\\d",
                ""
              ],
              [
                "skipbom",
                ""
              ],
              [
                "tar",
                ""
              ]
            ],
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "default": 1000000,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          },
          {
            "default": {
              "lines": {}
            },
            "is_optional": true,
            "kind": "scalar",
            "name": "scanner",
            "type": "scanner",
            "version": "4.25.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "socket_server",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services",
        "SpiceDB"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "endpoint",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "bearer_token",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": "4MB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_receive_message_bytes",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "cache",
            "type": "string"
          },
          {
            "default": "authzed.com/spicedb/watch/last_zed_token",
            "is_advanced": true,
            "kind": "scalar",
            "name": "cache_key",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "spicedb_watch",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "user",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "splunk",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.30.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "init_files",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "init_statement",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle_time",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_life_time",
            "type": "string"
          },
          {
            "default": 2,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_open",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sql_raw",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "4.10.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "columns",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "where",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "suffix",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "init_files",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "init_statement",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle_time",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_life_time",
            "type": "string"
          },
          {
            "default": 2,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_open",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sql_select",
      "plugin": true,
      "status": "beta",
      "type": "input",
      "version": "3.59.0"
    },
    {
      "categories": [
        "Local"
      ],
      "config": {
        "children": [
          {
            "annotated_options": [
              [
                "auto",
                ""
              ],
              [
                "all-bytes",
                ""
              ],
              [
                "avro-ocf:marshaler=x",
                ""
              ],
              [
                "chunker:x",
                ""
              ],
              [
                "csv",
                ""
              ],
              [
                "csv:x",
                ""
              ],
              [
                "csv-safe",
                ""
              ],
              [
                "csv-safe:x",
                ""
              ],
              [
                "delim:x",
                ""
              ],
              [
                "gzip",
                ""
              ],
              [
                "pgzip",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "multipart",
                ""
              ],
              [
                "regex:(?m)^\\d\\d:\\d\\d:\\d\\d",
                ""
              ],
              [
                "skipbom",
                ""
              ],
              [
                "tar",
                ""
              ]
            ],
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "default": 1000000,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          },
          {
            "default": {
              "lines": {}
            },
            "is_optional": true,
            "kind": "scalar",
            "name": "scanner",
            "type": "scanner",
            "version": "4.25.0"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "stdin",
      "plugin": true,
      "status": "stable",
      "type": "input"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "name",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "args",
            "type": "string"
          },
          {
            "default": "lines",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"lines\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "codec",
            "options": [
              "lines"
            ],
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "restart_on_exit",
            "type": "bool"
          },
          {
            "default": 65536,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "subprocess",
      "plugin": true,
      "status": "beta",
      "type": "input"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": "tcp://localhost:8463",
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "workspace",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "apikey",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "timeplus",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": [
        "Services",
        "Social"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "tweet_fields",
            "type": "string"
          },
          {
            "default": "1m",
            "kind": "scalar",
            "name": "poll_period",
            "type": "string"
          },
          {
            "default": "5m",
            "kind": "scalar",
            "name": "backfill_period",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "cache",
            "type": "string"
          },
          {
            "default": "last_tweet_id",
            "is_advanced": true,
            "kind": "scalar",
            "name": "cache_key",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "api_key",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "api_secret",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "twitter_search",
      "plugin": true,
      "status": "experimental",
      "type": "input"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "proxy_url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "open_message",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "binary",
                ""
              ],
              [
                "text",
                ""
              ]
            ],
            "default": "binary",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"binary\": true,\n  \"text\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "open_message_type",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "auto_replay_nacks",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "max_retries",
                "type": "int"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "connection",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "consumer_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "consumer_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "access_token_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "signing_method",
                "type": "string"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "claims",
                "type": "unknown"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "unknown"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "jwt",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "websocket",
      "plugin": true,
      "status": "stable",
      "type": "input"
    }
  ],
  "metrics": [
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": "Benthos",
            "kind": "scalar",
            "name": "namespace",
            "type": "string"
          },
          {
            "default": "100ms",
            "is_advanced": true,
            "kind": "scalar",
            "name": "flush_period",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_cloudwatch",
      "plugin": true,
      "status": "stable",
      "type": "metrics",
      "version": "3.36.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "db",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "runtime",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "debug_gc",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "include",
            "type": "object"
          },
          {
            "default": "1m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "interval",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "ping_interval",
            "type": "string"
          },
          {
            "default": "s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "precision",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": {},
            "is_advanced": true,
            "kind": "map",
            "name": "tags",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "retention_policy",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "write_consistency",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "influxdb",
      "plugin": true,
      "status": "beta",
      "type": "metrics",
      "version": "3.36.0"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "json_api",
      "plugin": true,
      "status": "stable",
      "type": "metrics"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "push_interval",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "flush_metrics",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "logger",
      "plugin": true,
      "status": "beta",
      "type": "metrics"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "none",
      "plugin": true,
      "status": "stable",
      "type": "metrics"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "use_histogram_timing",
            "type": "bool",
            "version": "3.63.0"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "histogram_buckets",
            "type": "float",
            "version": "3.63.0"
          },
          {
            "children": [
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "quantile",
                "type": "float"
              },
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "error",
                "type": "float"
              }
            ],
            "default": [
              {
                "error": 0.05,
                "quantile": 0.5
              },
              {
                "error": 0.01,
                "quantile": 0.9
              },
              {
                "error": 0.001,
                "quantile": 0.99
              }
            ],
            "is_advanced": true,
            "kind": "array",
            "name": "summary_quantiles_objectives",
            "type": "object",
            "version": "4.23.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "add_process_metrics",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "add_go_metrics",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "push_url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "push_interval",
            "type": "string"
          },
          {
            "default": "benthos_push",
            "is_advanced": true,
            "kind": "scalar",
            "name": "push_job_name",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "push_basic_auth",
            "type": "object"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "file_output_path",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "prometheus",
      "plugin": true,
      "status": "stable",
      "type": "metrics"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "default": "100ms",
            "kind": "scalar",
            "name": "flush_period",
            "type": "string"
          },
          {
            "default": "none",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"none\": true,\n  \"datadog\": true,\n  \"influxdb\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "tag_format",
            "options": [
              "none",
              "datadog",
              "influxdb"
            ],
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "statsd",
      "plugin": true,
      "status": "stable",
      "type": "metrics"
    }
  ],
  "outputs": [
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string",
            "version": "3.58.0"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "exchange",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "direct",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"direct\": true,\n  \"fanout\": true,\n  \"topic\": true,\n  \"headers\": true,\n  \"x-custom\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "type",
                "options": [
                  "direct",
                  "fanout",
                  "topic",
                  "headers",
                  "x-custom"
                ],
                "type": "string"
              },
              {
                "default": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "durable",
                "type": "bool"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "arguments",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "exchange_declare",
            "type": "object"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "type",
            "type": "string"
          },
          {
            "default": "application/octet-stream",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "content_type",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "content_encoding",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "correlation_id",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "reply_to",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "expiration",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "message_id",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "user_id",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "app_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "exclude_prefixes",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "priority",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "persistent",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "mandatory",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "immediate",
            "type": "bool"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "amqp_0_9",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "array",
            "name": "urls",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string",
            "version": "4.23.0"
          },
          {
            "kind": "scalar",
            "name": "target_address",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "bloblang": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "application_properties_map",
            "type": "string"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "anonymous",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ],
                  [
                    "plain",
                    ""
                  ]
                ],
                "default": "none",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"anonymous\": true,\n  \"none\": true,\n  \"plain\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "user",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "sasl",
            "type": "object"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "exclude_prefixes",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "default": "opaque_binary",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"opaque_binary\": true,\n  \"string\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "content_type",
            "options": [
              "opaque_binary",
              "string"
            ],
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "\nroot = if this.url.or(\"\") == \"\" && this.urls.or([]).length() == 0 {\n  \"field 'urls' must be set\"\n}\n",
        "name": "",
        "type": "object"
      },
      "name": "amqp_1",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services",
        "AWS"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "string_columns",
            "type": "string"
          },
          {
            "default": {},
            "kind": "map",
            "name": "json_map_columns",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "ttl",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "ttl_key",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_dynamodb",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Services",
        "AWS"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "stream",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "partition_key",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "hash_key",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_kinesis",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Services",
        "AWS"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "stream",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_kinesis_firehose",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Services",
        "AWS"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "default": "${!counter()}-${!timestamp_unix_nano()}.txt",
            "interpolated": true,
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "tags",
            "type": "string"
          },
          {
            "default": "application/octet-stream",
            "interpolated": true,
            "kind": "scalar",
            "name": "content_type",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "content_encoding",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "cache_control",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "content_disposition",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "content_language",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "content_md5",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "website_redirect_location",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "exclude_prefixes",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "default": "STANDARD",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"standard\": true,\n  \"reduced_redundancy\": true,\n  \"glacier\": true,\n  \"standard_ia\": true,\n  \"onezone_ia\": true,\n  \"intelligent_tiering\": true,\n  \"deep_archive\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "storage_class",
            "options": [
              "STANDARD",
              "REDUCED_REDUNDANCY",
              "GLACIER",
              "STANDARD_IA",
              "ONEZONE_IA",
              "INTELLIGENT_TIERING",
              "DEEP_ARCHIVE"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "kms_key_id",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"crc32\": true,\n  \"crc32c\": true,\n  \"sha1\": true,\n  \"sha256\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "checksum_algorithm",
            "options": [
              "CRC32",
              "CRC32C",
              "SHA1",
              "SHA256"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "server_side_encryption",
            "type": "string",
            "version": "3.63.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "force_path_style_urls",
            "type": "bool"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "private",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"private\": true,\n  \"public-read\": true,\n  \"public-read-write\": true,\n  \"authenticated-read\": true,\n  \"aws-exec-read\": true,\n  \"bucket-owner-read\": true,\n  \"bucket-owner-full-control\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "object_canned_acl",
            "options": [
              "private",
              "public-read",
              "public-read-write",
              "authenticated-read",
              "aws-exec-read",
              "bucket-owner-read",
              "bucket-owner-full-control"
            ],
            "type": "string"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_s3",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Services",
        "AWS"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "topic_arn",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "message_group_id",
            "type": "string",
            "version": "3.60.0"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "message_deduplication_id",
            "type": "string",
            "version": "3.60.0"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "exclude_prefixes",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "metadata",
            "type": "object",
            "version": "3.60.0"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_sns",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Services",
        "AWS"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "message_group_id",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "message_deduplication_id",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "delay_seconds",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "exclude_prefixes",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": 10,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "if this <= 0 || this > 10 { \"this field must be >0 and <=10\" } ",
            "name": "max_records_per_request",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_sqs",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Services",
        "Azure"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_account",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_access_key",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_connection_string",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_sas_token",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "container",
            "type": "string"
          },
          {
            "default": "${!counter()}-${!timestamp_unix_nano()}.txt",
            "interpolated": true,
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "default": "BLOCK",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"block\": true,\n  \"append\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "blob_type",
            "options": [
              "BLOCK",
              "APPEND"
            ],
            "type": "string"
          },
          {
            "default": "PRIVATE",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"private\": true,\n  \"blob\": true,\n  \"container\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "public_access_level",
            "options": [
              "PRIVATE",
              "BLOB",
              "CONTAINER"
            ],
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "linter": "root = if this.storage_connection_string != \"\" && !this.storage_connection_string.contains(\"AccountName=\")  && !this.storage_connection_string.contains(\"UseDevelopmentStorage=true;\") && this.storage_account == \"\" { [ \"storage_account must be set if storage_connection_string does not contain the \\\"AccountName\\\" parameter\" ] }",
        "name": "",
        "type": "object"
      },
      "name": "azure_blob_storage",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Azure"
      ],
      "config": {
        "children": [
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "account_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "connection_string",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "container",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "partition_keys_map",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "Create",
                ""
              ],
              [
                "Delete",
                ""
              ],
              [
                "Patch",
                ""
              ],
              [
                "Replace",
                ""
              ],
              [
                "Upsert",
                ""
              ]
            ],
            "default": "Create",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"create\": true,\n  \"delete\": true,\n  \"patch\": true,\n  \"replace\": true,\n  \"upsert\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operation",
            "type": "string"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "Add",
                    ""
                  ],
                  [
                    "Increment",
                    ""
                  ],
                  [
                    "Remove",
                    ""
                  ],
                  [
                    "Replace",
                    ""
                  ],
                  [
                    "Set",
                    ""
                  ]
                ],
                "default": "Add",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"add\": true,\n  \"increment\": true,\n  \"remove\": true,\n  \"replace\": true,\n  \"set\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "operation",
                "type": "string"
              },
              {
                "is_advanced": true,
                "kind": "scalar",
                "name": "path",
                "type": "string"
              },
              {
                "bloblang": true,
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "value_map",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "patch_operations",
            "type": "object"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "patch_condition",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "auto_id",
            "type": "bool"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "item_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "linter": "root = []\nlet hasEndpoint = this.endpoint.or(\"\") != \"\"\nlet hasConnectionString = this.connection_string.or(\"\") != \"\"\n\nroot.\"-\" = if !$hasEndpoint && !$hasConnectionString {\n  \"Either `endpoint` or `connection_string` must be set.\"\n}\n\nlet hasItemID = this.item_id.or(\"\") != \"\"\nlet hasPatchOperations = this.patch_operations.length().or(0) > 0\nlet hasPatchCondition = this.patch_condition.or(\"\") != \"\"\n\nroot.\"-\" = if !$hasItemID && (this.operation == \"Replace\" || this.operation == \"Delete\" || this.operation == \"Read\" || this.operation == \"Patch\") {\n  \"The `item_id` field must be set for Replace, Delete, Read and Patch operations.\"\n}\n\nroot.\"-\" = if this.operation == \"Patch\" && !$hasPatchOperations {\n  \"At least one `patch_operations` must be set when `operation: Patch`.\"\n}\n\nroot.\"-\" = if $hasPatchCondition && (!$hasPatchOperations || this.operation != \"Patch\") {\n  \"The `patch_condition`  field only applies to `Patch` operations and it requires one or more `patch_operations`.\"\n}\n\nroot.\"-\" = if this.operation == \"Patch\" && this.patch_operations.any(o -> o.operation != \"Remove\" && o.value_map.or(\"\") == \"\") {\n  \"The `patch_operations` `value_map` field must be set when `operation` is not `Remove`.\"\n}\n\nroot.\"-\" = if this.operation == \"Patch\" && this.patch_operations.any(o -> o.operation == \"Remove\" && o.value_map.or(\"\") != \"\") {\n  \"The `patch_operations` `value_map` field must not be set when `operation` is `Remove`.\"\n}\n",
        "name": "",
        "type": "object"
      },
      "name": "azure_cosmosdb",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "v4.25.0"
    },
    {
      "categories": [
        "Services",
        "Azure"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_account",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_access_key",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_connection_string",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_sas_token",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "filesystem",
            "type": "string"
          },
          {
            "default": "${!counter()}-${!timestamp_unix_nano()}.txt",
            "interpolated": true,
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "linter": "root = if this.storage_connection_string != \"\" && !this.storage_connection_string.contains(\"AccountName=\")  && !this.storage_connection_string.contains(\"UseDevelopmentStorage=true;\") && this.storage_account == \"\" { [ \"storage_account must be set if storage_connection_string does not contain the \\\"AccountName\\\" parameter\" ] }",
        "name": "",
        "type": "object"
      },
      "name": "azure_data_lake_gen2",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "4.38.0"
    },
    {
      "categories": [
        "Services",
        "Azure"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_account",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_access_key",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_connection_string",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_sas_token",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "queue_name",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "ttl",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "root = if this.storage_connection_string != \"\" && !this.storage_connection_string.contains(\"AccountName=\")  && !this.storage_connection_string.contains(\"UseDevelopmentStorage=true;\") && this.storage_account == \"\" { [ \"storage_account must be set if storage_connection_string does not contain the \\\"AccountName\\\" parameter\" ] }",
        "name": "",
        "type": "object"
      },
      "name": "azure_queue_storage",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Services",
        "Azure"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_account",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_access_key",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_connection_string",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "storage_sas_token",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "table_name",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "partition_key",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "row_key",
            "type": "string"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "properties",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"insert\": true,\n  \"insert_merge\": true,\n  \"insert_replace\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "insert_type",
            "options": [
              "INSERT",
              "INSERT_MERGE",
              "INSERT_REPLACE"
            ],
            "type": "string"
          },
          {
            "default": "INSERT",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"insert\": true,\n  \"insert_merge\": true,\n  \"insert_replace\": true,\n  \"update_merge\": true,\n  \"update_replace\": true,\n  \"delete\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "transaction_type",
            "options": [
              "INSERT",
              "INSERT_MERGE",
              "INSERT_REPLACE",
              "UPDATE_MERGE",
              "UPDATE_REPLACE",
              "DELETE"
            ],
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "root = if this.storage_connection_string != \"\" && !this.storage_connection_string.contains(\"AccountName=\")  && !this.storage_connection_string.contains(\"UseDevelopmentStorage=true;\") && this.storage_account == \"\" { [ \"storage_account must be set if storage_connection_string does not contain the \\\"AccountName\\\" parameter\" ] }",
        "name": "",
        "type": "object"
      },
      "name": "azure_table_storage",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "beanstalkd",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "4.7.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": 1,
            "is_advanced": true,
            "kind": "scalar",
            "name": "copies",
            "type": "int"
          },
          {
            "default": "fan_out",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"fan_out\": true,\n  \"fan_out_fail_fast\": true,\n  \"fan_out_sequential\": true,\n  \"fan_out_sequential_fail_fast\": true,\n  \"round_robin\": true,\n  \"greedy\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "pattern",
            "options": [
              "fan_out",
              "fan_out_fail_fast",
              "fan_out_sequential",
              "fan_out_sequential_fail_fast",
              "round_robin",
              "greedy"
            ],
            "type": "string"
          },
          {
            "kind": "array",
            "name": "outputs",
            "type": "output"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "broker",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "target",
            "type": "string"
          },
          {
            "default": "${!count(\"items\")}-${!timestamp_unix_nano()}",
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "ttl",
            "type": "string",
            "version": "3.33.0"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "cache",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "addresses",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "password_authenticator",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "disable_initial_host_lookup",
            "type": "bool"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          },
          {
            "default": "600ms",
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "local_dc",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "local_rack",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "linter": "root = if this.local_rack != \"\" && (!this.exists(\"local_dc\") || this.local_dc == \"\") { \"local_dc must be set if local_rack is set\" }",
            "name": "host_selection_policy",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string",
            "version": "3.55.0"
          },
          {
            "default": "QUORUM",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"any\": true,\n  \"one\": true,\n  \"two\": true,\n  \"three\": true,\n  \"quorum\": true,\n  \"all\": true,\n  \"local_quorum\": true,\n  \"each_quorum\": true,\n  \"local_one\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "consistency",
            "options": [
              "ANY",
              "ONE",
              "TWO",
              "THREE",
              "QUORUM",
              "ALL",
              "LOCAL_QUORUM",
              "EACH_QUORUM",
              "LOCAL_ONE"
            ],
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "logged_batch",
            "type": "bool"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "cassandra",
      "plugin": true,
      "status": "beta",
      "type": "output"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "collection",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "scope",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "json",
                ""
              ],
              [
                "legacy",
                ""
              ],
              [
                "raw",
                ""
              ],
              [
                "rawjson",
                ""
              ],
              [
                "rawstring",
                ""
              ]
            ],
            "default": "legacy",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"json\": true,\n  \"legacy\": true,\n  \"raw\": true,\n  \"rawjson\": true,\n  \"rawstring\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "transcoder",
            "type": "string"
          },
          {
            "default": "15s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "id",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "content",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "insert",
                ""
              ],
              [
                "remove",
                ""
              ],
              [
                "replace",
                ""
              ],
              [
                "upsert",
                ""
              ]
            ],
            "default": "upsert",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"insert\": true,\n  \"remove\": true,\n  \"replace\": true,\n  \"upsert\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operation",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "root = if ((this.operation == \"insert\" || this.operation == \"replace\" || this.operation == \"upsert\") && !this.exists(\"content\")) { [ \"content must be set for insert, replace and upsert operations.\" ] }",
        "name": "",
        "type": "object"
      },
      "name": "couchbase",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "4.37.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "uri",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "cypher",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "database_name",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "realm",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "cypher",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "4.37.0"
    },
    {
      "categories": [
        "Services",
        "Social"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "channel_id",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "bot_token",
            "type": "string"
          },
          {
            "default": "An optional rate limit resource to restrict API requests with.",
            "is_deprecated": true,
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "discord",
      "plugin": true,
      "status": "experimental",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "drop",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": false,
            "kind": "scalar",
            "name": "error",
            "type": "bool"
          },
          {
            "is_optional": true,
            "kind": "array",
            "name": "error_patterns",
            "type": "string",
            "version": "4.27.0"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "back_pressure",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "output",
            "type": "output"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "drop_on",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": {},
            "kind": "map",
            "name": "outputs",
            "type": "output"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "dynamic",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "index",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "action",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "id",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "pipeline",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "routing",
            "type": "string"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "retry_on_conflict",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "elasticsearch_v8",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": [],
        "kind": "array",
        "name": "",
        "type": "output"
      },
      "name": "fallback",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.58.0"
    },
    {
      "categories": [
        "Local"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "path",
            "type": "string",
            "version": "3.33.0"
          },
          {
            "annotated_options": [
              [
                "all-bytes",
                ""
              ],
              [
                "append",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "delim:x",
                ""
              ]
            ],
            "default": "lines",
            "kind": "scalar",
            "name": "codec",
            "type": "string",
            "version": "3.33.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "file",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "GCP",
        "Services"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "project",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "job_project",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dataset",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "default": "NEWLINE_DELIMITED_JSON",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"newline_delimited_json\": true,\n  \"csv\": true,\n  \"parquet\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "format",
            "options": [
              "NEWLINE_DELIMITED_JSON",
              "CSV",
              "PARQUET"
            ],
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": "WRITE_APPEND",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"write_append\": true,\n  \"write_empty\": true,\n  \"write_truncate\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "write_disposition",
            "options": [
              "WRITE_APPEND",
              "WRITE_EMPTY",
              "WRITE_TRUNCATE"
            ],
            "type": "string"
          },
          {
            "default": "CREATE_IF_NEEDED",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"create_if_needed\": true,\n  \"create_never\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "create_disposition",
            "options": [
              "CREATE_IF_NEEDED",
              "CREATE_NEVER"
            ],
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "ignore_unknown_values",
            "type": "bool"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_bad_records",
            "type": "int"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "auto_detect",
            "type": "bool"
          },
          {
            "default": {},
            "kind": "map",
            "name": "job_labels",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "header",
                "type": "string"
              },
              {
                "default": ",",
                "kind": "scalar",
                "name": "field_delimiter",
                "type": "string"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "allow_jagged_rows",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "allow_quoted_newlines",
                "type": "bool"
              },
              {
                "default": "UTF-8",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"utf-8\": true,\n  \"iso-8859-1\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "encoding",
                "options": [
                  "UTF-8",
                  "ISO-8859-1"
                ],
                "type": "string"
              },
              {
                "default": 1,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_leading_rows",
                "type": "int"
              }
            ],
            "kind": "scalar",
            "name": "csv",
            "type": "object"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_bigquery",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "3.55.0"
    },
    {
      "categories": [
        "Services",
        "GCP"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "default": "${!counter()}-${!timestamp_unix_nano()}.txt",
            "interpolated": true,
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "default": "application/octet-stream",
            "interpolated": true,
            "kind": "scalar",
            "name": "content_type",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "content_encoding",
            "type": "string"
          },
          {
            "default": "overwrite",
            "interpolated": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"overwrite\": true,\n  \"append\": true,\n  \"error-if-exists\": true,\n  \"ignore\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "collision_mode",
            "options": [
              "overwrite",
              "append",
              "error-if-exists",
              "ignore"
            ],
            "type": "string",
            "version": "3.53.0"
          },
          {
            "default": 16777216,
            "is_advanced": true,
            "kind": "scalar",
            "name": "chunk_size",
            "type": "int"
          },
          {
            "default": "3s",
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_cloud_storage",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "3.43.0"
    },
    {
      "categories": [
        "Services",
        "GCP"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "project",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "ordering_key",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": 100,
            "kind": "scalar",
            "name": "count_threshold",
            "type": "int"
          },
          {
            "default": "10ms",
            "kind": "scalar",
            "name": "delay_threshold",
            "type": "string"
          },
          {
            "default": 1000000,
            "kind": "scalar",
            "name": "byte_threshold",
            "type": "int"
          },
          {
            "default": "1m0s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "publish_timeout",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "validate_topic",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "exclude_prefixes",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "children": [
              {
                "default": -1,
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_outstanding_bytes",
                "type": "int"
              },
              {
                "default": 1000,
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_outstanding_messages",
                "type": "int"
              },
              {
                "default": "block",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"ignore\": true,\n  \"block\": true,\n  \"signal_error\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "limit_exceeded_behavior",
                "options": [
                  "ignore",
                  "block",
                  "signal_error"
                ],
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "flow_control",
            "type": "object"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_pubsub",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "hosts",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "user",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "directory",
            "type": "string"
          },
          {
            "default": "${!counter()}-${!timestamp_unix_nano()}.txt",
            "interpolated": true,
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "hdfs",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "default": "POST",
            "kind": "scalar",
            "name": "verb",
            "type": "string"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "headers",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"trace\": true,\n  \"debug\": true,\n  \"info\": true,\n  \"warn\": true,\n  \"error\": true,\n  \"fatal\": true,\n  \"\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "dump_request_log_level",
            "options": [
              "TRACE",
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR",
              "FATAL",
              ""
            ],
            "type": "string",
            "version": "4.12.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "consumer_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "consumer_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "access_token_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "client_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "client_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token_url",
                "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                "type": "string"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "scopes",
                "type": "string",
                "version": "3.45.0"
              },
              {
                "default": {},
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "linter": "\nroot = if this.type() == \"object\" {\n  this.values().map_each(ele -> if ele.type() != \"array\" {\n    \"field must be an object containing arrays of strings, got %s (%v)\".format(ele.format_json(no_indent: true), ele.type())\n  } else {\n    ele.map_each(str -> if str.type() != \"string\" {\n      \"field values must be strings, got %s (%v)\".format(str.format_json(no_indent: true), str.type())\n    } else { deleted() })\n  }).\n    flatten()\n}\n",
                "name": "endpoint_params",
                "type": "unknown",
                "version": "4.21.0"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth2",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "signing_method",
                "type": "string"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "claims",
                "type": "unknown"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "unknown"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "jwt",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "extract_headers",
            "type": "object"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          },
          {
            "default": "5s",
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "1s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "retry_period",
            "type": "string"
          },
          {
            "default": "300s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retry_backoff",
            "type": "string"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "int"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "follow_redirects",
            "type": "bool"
          },
          {
            "default": [
              429
            ],
            "is_advanced": true,
            "kind": "array",
            "name": "backoff_on",
            "type": "int"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "drop_on",
            "type": "int"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "successful_on",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "proxy_url",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "disable_http2",
            "type": "bool",
            "version": "4.44.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "batch_as_multipart",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "propagate_response",
            "type": "bool"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "children": [
              {
                "default": "",
                "interpolated": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "content_type",
                "type": "string"
              },
              {
                "default": "",
                "interpolated": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "content_disposition",
                "type": "string"
              },
              {
                "default": "",
                "interpolated": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "body",
                "type": "string"
              }
            ],
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "multipart",
            "type": "object",
            "version": "3.63.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "http_client",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "default": "/get",
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "default": "/get/stream",
            "kind": "scalar",
            "name": "stream_path",
            "type": "string"
          },
          {
            "default": "/get/ws",
            "kind": "scalar",
            "name": "ws_path",
            "type": "string"
          },
          {
            "default": [
              "GET"
            ],
            "kind": "array",
            "name": "allowed_verbs",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "cert_file",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "key_file",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "allowed_origins",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "cors",
            "type": "object",
            "version": "3.63.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "http_server",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": "",
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "inproc",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "addresses",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "default": "none",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "user",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token_cache",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token_key",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "sasl",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "target_version",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rack_id",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": "fnv1a_hash",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"fnv1a_hash\": true,\n  \"murmur2_hash\": true,\n  \"random\": true,\n  \"round_robin\": true,\n  \"manual\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "partitioner",
            "options": [
              "fnv1a_hash",
              "murmur2_hash",
              "random",
              "round_robin",
              "manual"
            ],
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "partition",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": -1,
                "is_advanced": true,
                "kind": "scalar",
                "name": "partitions",
                "type": "int"
              },
              {
                "default": -1,
                "is_advanced": true,
                "kind": "scalar",
                "name": "replication_factor",
                "type": "int"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "custom_topic_creation",
            "type": "object"
          },
          {
            "default": "none",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"none\": true,\n  \"snappy\": true,\n  \"lz4\": true,\n  \"gzip\": true,\n  \"zstd\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "compression",
            "options": [
              "none",
              "snappy",
              "lz4",
              "gzip",
              "zstd"
            ],
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "map",
            "name": "static_headers",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "exclude_prefixes",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "bloblang": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "inject_tracing_map",
            "type": "string",
            "version": "3.45.0"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "idempotent_write",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "ack_replicas",
            "type": "bool"
          },
          {
            "default": 1000000,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_msg_bytes",
            "type": "int"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "retry_as_batch",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "3s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "10s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp_ms",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "kafka",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "seed_brokers",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "AWS_MSK_IAM",
                    ""
                  ],
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "extensions",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "profile",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "id",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "secret",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "token",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "from_ec2_role",
                        "type": "bool",
                        "version": "4.2.0"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role_external_id",
                        "type": "string"
                      }
                    ],
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "credentials",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "aws",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "5m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "metadata_max_age",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "request_timeout_overhead",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "conn_idle_timeout",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "partition",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp_ms",
            "type": "string"
          },
          {
            "default": 10,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "is_deprecated": true,
            "kind": "scalar",
            "name": "rack_id",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "least_backup",
                ""
              ],
              [
                "manual",
                ""
              ],
              [
                "murmur2_hash",
                ""
              ],
              [
                "round_robin",
                ""
              ]
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"least_backup\": true,\n  \"manual\": true,\n  \"murmur2_hash\": true,\n  \"round_robin\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "partitioner",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "idempotent_write",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"lz4\": true,\n  \"snappy\": true,\n  \"gzip\": true,\n  \"none\": true,\n  \"zstd\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "compression",
            "options": [
              "lz4",
              "snappy",
              "gzip",
              "none",
              "zstd"
            ],
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "allow_auto_topic_creation",
            "type": "bool"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "1MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_message_bytes",
            "type": "string"
          },
          {
            "default": "100MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "broker_write_max_bytes",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n  this.partitioner == \"manual\" && this.partition.or(\"\") == \"\" => \"a partition must be specified when the partitioner is set to manual\"\n  this.partitioner != \"manual\" && this.partition.or(\"\") != \"\" => \"a partition cannot be specified unless the partitioner is set to manual\"\n  this.timestamp.or(\"\") != \"\" && this.timestamp_ms.or(\"\") != \"\" => \"both timestamp and timestamp_ms cannot be specified simultaneously\"\n}",
        "name": "",
        "type": "object"
      },
      "name": "kafka_franz",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "3.61.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "app_name",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "collection",
            "type": "string"
          },
          {
            "default": "update-one",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"insert-one\": true,\n  \"delete-one\": true,\n  \"delete-many\": true,\n  \"replace-one\": true,\n  \"update-one\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operation",
            "options": [
              "insert-one",
              "delete-one",
              "delete-many",
              "replace-one",
              "update-one"
            ],
            "type": "string"
          },
          {
            "children": [
              {
                "default": "majority",
                "kind": "scalar",
                "name": "w",
                "type": "string"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "j",
                "type": "bool"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "w_timeout",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "write_concern",
            "type": "object"
          },
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "document_map",
            "type": "string"
          },
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "filter_map",
            "type": "string"
          },
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "hint_map",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "upsert",
            "type": "bool",
            "version": "3.60.0"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": 3,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "mongodb",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "3.43.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "nanoid",
                ""
              ]
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = []",
            "name": "dynamic_client_id_suffix",
            "type": "string"
          },
          {
            "default": "30s",
            "kind": "scalar",
            "name": "connect_timeout",
            "type": "string",
            "version": "3.58.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": 0,
                "is_advanced": true,
                "kind": "scalar",
                "name": "qos",
                "type": "int"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "retained",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "topic",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "payload",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "will",
            "type": "object"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "user",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": 30,
            "is_advanced": true,
            "kind": "scalar",
            "name": "keepalive",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "default": 1,
            "kind": "scalar",
            "name": "qos",
            "type": "int"
          },
          {
            "default": "3s",
            "kind": "scalar",
            "name": "write_timeout",
            "type": "string",
            "version": "3.58.0"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "retained",
            "type": "bool"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "retained_interpolated",
            "type": "string",
            "version": "3.59.0"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "mqtt",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "bind",
            "type": "bool"
          },
          {
            "default": "PUSH",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"push\": true,\n  \"pub\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "socket_type",
            "options": [
              "PUSH",
              "PUB"
            ],
            "type": "string"
          },
          {
            "default": "5s",
            "kind": "scalar",
            "name": "poll_timeout",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nanomsg",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "subject",
            "type": "string"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "headers",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          },
          {
            "bloblang": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "inject_tracing_map",
            "type": "string",
            "version": "4.23.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nats",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "subject",
            "type": "string"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "headers",
            "type": "string",
            "version": "4.1.0"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "default": 1024,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          },
          {
            "bloblang": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "inject_tracing_map",
            "type": "string",
            "version": "4.23.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nats_jetstream",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.46.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": 1024,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nats_kv",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "4.12.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "cluster_id",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "subject",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          },
          {
            "bloblang": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "inject_tracing_map",
            "type": "string",
            "version": "4.23.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nats_stream",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "nsqd_tcp_address",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "user_agent",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nsq",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "children": [
              {
                "is_optional": true,
                "kind": "array",
                "name": "seed_brokers",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "skip_cert_verify",
                    "type": "bool"
                  },
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enable_renegotiation",
                    "type": "bool",
                    "version": "3.45.0"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "root_cas",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "root_cas_file",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "cert",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "key",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "cert_file",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "key_file",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "password",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      }
                    ],
                    "default": [],
                    "is_advanced": true,
                    "kind": "array",
                    "name": "client_certs",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "kind": "scalar",
                "name": "tls",
                "type": "object"
              },
              {
                "default": 10,
                "kind": "scalar",
                "name": "max_in_flight",
                "type": "int"
              },
              {
                "children": [
                  {
                    "default": 0,
                    "kind": "scalar",
                    "name": "count",
                    "type": "int"
                  },
                  {
                    "default": 0,
                    "kind": "scalar",
                    "name": "byte_size",
                    "type": "int"
                  },
                  {
                    "default": "",
                    "kind": "scalar",
                    "name": "period",
                    "type": "string"
                  },
                  {
                    "bloblang": true,
                    "default": "",
                    "kind": "scalar",
                    "name": "check",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "array",
                    "name": "processors",
                    "type": "processor"
                  }
                ],
                "kind": "",
                "name": "batching",
                "type": "object"
              },
              {
                "annotated_options": [
                  [
                    "least_backup",
                    ""
                  ],
                  [
                    "manual",
                    ""
                  ],
                  [
                    "murmur2_hash",
                    ""
                  ],
                  [
                    "round_robin",
                    ""
                  ]
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"least_backup\": true,\n  \"manual\": true,\n  \"murmur2_hash\": true,\n  \"round_robin\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "partitioner",
                "type": "string"
              },
              {
                "default": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "idempotent_write",
                "type": "bool"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"lz4\": true,\n  \"snappy\": true,\n  \"gzip\": true,\n  \"none\": true,\n  \"zstd\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "compression",
                "options": [
                  "lz4",
                  "snappy",
                  "gzip",
                  "none",
                  "zstd"
                ],
                "type": "string"
              },
              {
                "default": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "allow_auto_topic_creation",
                "type": "bool"
              },
              {
                "default": "10s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "timeout",
                "type": "string"
              },
              {
                "default": "1MiB",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_message_bytes",
                "type": "string"
              },
              {
                "default": "100MiB",
                "is_advanced": true,
                "kind": "scalar",
                "name": "broker_write_max_bytes",
                "type": "string"
              },
              {
                "interpolated": true,
                "kind": "scalar",
                "name": "topic",
                "type": "string"
              },
              {
                "interpolated": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "key",
                "type": "string"
              },
              {
                "interpolated": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "partition",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": [],
                    "kind": "array",
                    "name": "include_prefixes",
                    "type": "string"
                  },
                  {
                    "default": [],
                    "kind": "array",
                    "name": "include_patterns",
                    "type": "string"
                  }
                ],
                "is_optional": true,
                "kind": "scalar",
                "name": "metadata",
                "type": "object"
              },
              {
                "interpolated": true,
                "is_advanced": true,
                "is_deprecated": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "timestamp",
                "type": "string"
              },
              {
                "interpolated": true,
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "timestamp_ms",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "kafka",
            "type": "object"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "disable_content_encryption",
            "type": "bool"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "enrollment_ticket",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "identity_name",
            "type": "string"
          },
          {
            "default": "self",
            "is_optional": true,
            "kind": "scalar",
            "name": "allow",
            "type": "string"
          },
          {
            "default": "self",
            "kind": "scalar",
            "name": "route_to_kafka_outlet",
            "type": "string"
          },
          {
            "default": "self",
            "kind": "scalar",
            "name": "allow_consumer",
            "type": "string"
          },
          {
            "default": "/ip4/127.0.0.1/tcp/6262",
            "kind": "scalar",
            "name": "route_to_consumer",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "encrypted_fields",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "ockam_kafka",
      "plugin": true,
      "status": "experimental",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "index",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "action",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "id",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "pipeline",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "routing",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "region",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "endpoint",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "profile",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "secret",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "token",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "from_ec2_role",
                    "type": "bool",
                    "version": "4.2.0"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "role",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "role_external_id",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "credentials",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "aws",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "opensearch",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "kind": "scalar",
            "linter": "root = if this.has_prefix(\"https://\") { [\"host field must be a FQDN not a URL (remove the https:// prefix)\"] }",
            "name": "host",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": "upsert-vectors",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"update-vector\": true,\n  \"upsert-vectors\": true,\n  \"delete-vectors\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operation",
            "options": [
              "update-vector",
              "upsert-vectors",
              "delete-vectors"
            ],
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "namespace",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "id",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "vector_mapping",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata_mapping",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "pinecone",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "4.31.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "",
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "ordering_key",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "audience",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "issuer_url",
                    "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "scope",
                    "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "private_key_file",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "oauth2",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "token",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object",
            "version": "3.60.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "pulsar",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "3.43.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "channel",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "event",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "appId",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "secret",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "cluster",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "secure",
            "type": "bool"
          },
          {
            "default": 1,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "pusher",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "4.3.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "grpc_host",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "api_token",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "collection_name",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "id",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "vector_mapping",
            "type": "string"
          },
          {
            "bloblang": true,
            "default": "root = {}",
            "kind": "scalar",
            "name": "payload_mapping",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "qdrant",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "4.33.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "username",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "token",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "retry_timeout",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "request_timeout",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "request_min_throughput",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "designated_timestamp_field",
            "type": "string"
          },
          {
            "default": "auto",
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if [\"nanos\",\"micros\",\"millis\",\"seconds\",\"auto\"].contains(this) != true { [ \"valid options are \\\"nanos\\\", \\\"micros\\\", \\\"millis\\\", \\\"seconds\\\", \\\"auto\\\"\" ] }",
            "name": "designated_timestamp_unit",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "array",
            "name": "timestamp_string_fields",
            "type": "string"
          },
          {
            "default": "Jan _2 15:04:05.000000Z0700",
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp_string_format",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "array",
            "name": "symbols",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "array",
            "name": "doubles",
            "type": "string"
          },
          {
            "default": false,
            "is_optional": true,
            "kind": "scalar",
            "name": "error_on_empty_messages",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "questdb",
      "plugin": true,
      "status": "experimental",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "walk_metadata",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "walk_json_object",
            "type": "bool"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "fields",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis_hash",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": "rpush",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"rpush\": true,\n  \"lpush\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "command",
            "options": [
              "rpush",
              "lpush"
            ],
            "type": "string",
            "version": "4.22.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis_list",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "channel",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis_pubsub",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "stream",
            "type": "string"
          },
          {
            "default": "body",
            "kind": "scalar",
            "name": "body_key",
            "type": "string"
          },
          {
            "default": 0,
            "kind": "scalar",
            "name": "max_length",
            "type": "int"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "exclude_prefixes",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis_streams",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "seed_brokers",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "AWS_MSK_IAM",
                    ""
                  ],
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "extensions",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "profile",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "id",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "secret",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "token",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "from_ec2_role",
                        "type": "bool",
                        "version": "4.2.0"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role_external_id",
                        "type": "string"
                      }
                    ],
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "credentials",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "aws",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "5m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "metadata_max_age",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "request_timeout_overhead",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "conn_idle_timeout",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "partition",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp_ms",
            "type": "string"
          },
          {
            "default": 256,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "annotated_options": [
              [
                "least_backup",
                ""
              ],
              [
                "manual",
                ""
              ],
              [
                "murmur2_hash",
                ""
              ],
              [
                "round_robin",
                ""
              ]
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"least_backup\": true,\n  \"manual\": true,\n  \"murmur2_hash\": true,\n  \"round_robin\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "partitioner",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "idempotent_write",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"lz4\": true,\n  \"snappy\": true,\n  \"gzip\": true,\n  \"none\": true,\n  \"zstd\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "compression",
            "options": [
              "lz4",
              "snappy",
              "gzip",
              "none",
              "zstd"
            ],
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "allow_auto_topic_creation",
            "type": "bool"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "1MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_message_bytes",
            "type": "string"
          },
          {
            "default": "100MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "broker_write_max_bytes",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n  this.partitioner == \"manual\" && this.partition.or(\"\") == \"\" => \"a partition must be specified when the partitioner is set to manual\"\n  this.partitioner != \"manual\" && this.partition.or(\"\") != \"\" => \"a partition cannot be specified unless the partitioner is set to manual\"\n  this.timestamp.or(\"\") != \"\" && this.timestamp_ms.or(\"\") != \"\" => \"both timestamp and timestamp_ms cannot be specified simultaneously\"\n}",
        "name": "",
        "type": "object"
      },
      "name": "redpanda",
      "plugin": true,
      "status": "beta",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "partition",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp_ms",
            "type": "string"
          },
          {
            "default": 10,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n  this.partitioner == \"manual\" && this.partition.or(\"\") == \"\" => \"a partition must be specified when the partitioner is set to manual\"\n  this.partitioner != \"manual\" && this.partition.or(\"\") != \"\" => \"a partition cannot be specified unless the partitioner is set to manual\"\n  this.timestamp.or(\"\") != \"\" && this.timestamp_ms.or(\"\") != \"\" => \"both timestamp and timestamp_ms cannot be specified simultaneously\"\n}",
        "name": "",
        "type": "object"
      },
      "name": "redpanda_common",
      "plugin": true,
      "status": "beta",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "seed_brokers",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "AWS_MSK_IAM",
                    ""
                  ],
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "extensions",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "profile",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "id",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "secret",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "token",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "from_ec2_role",
                        "type": "bool",
                        "version": "4.2.0"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role_external_id",
                        "type": "string"
                      }
                    ],
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "credentials",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "aws",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "5m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "metadata_max_age",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "request_timeout_overhead",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "conn_idle_timeout",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "topic",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "partition",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp_ms",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "topic_prefix",
            "type": "string"
          },
          {
            "default": 256,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": "redpanda_migrator_input",
            "is_advanced": true,
            "kind": "scalar",
            "name": "input_resource",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "replication_factor_override",
            "type": "bool"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "replication_factor",
            "type": "int"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "translate_schema_ids",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "is_serverless",
            "type": "bool"
          },
          {
            "default": "schema_registry_output",
            "is_advanced": true,
            "kind": "scalar",
            "name": "schema_registry_output_resource",
            "type": "string"
          },
          {
            "is_deprecated": true,
            "kind": "scalar",
            "name": "rack_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": 0,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "is_deprecated": true,
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "is_deprecated": true,
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_deprecated": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "is_deprecated": true,
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "annotated_options": [
              [
                "least_backup",
                ""
              ],
              [
                "manual",
                ""
              ],
              [
                "murmur2_hash",
                ""
              ],
              [
                "round_robin",
                ""
              ]
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"least_backup\": true,\n  \"manual\": true,\n  \"murmur2_hash\": true,\n  \"round_robin\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "partitioner",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "idempotent_write",
            "type": "bool"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"lz4\": true,\n  \"snappy\": true,\n  \"gzip\": true,\n  \"none\": true,\n  \"zstd\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "compression",
            "options": [
              "lz4",
              "snappy",
              "gzip",
              "none",
              "zstd"
            ],
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "allow_auto_topic_creation",
            "type": "bool"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "1MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_message_bytes",
            "type": "string"
          },
          {
            "default": "100MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "broker_write_max_bytes",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n  this.partitioner == \"manual\" && this.partition.or(\"\") == \"\" => \"a partition must be specified when the partitioner is set to manual\"\n  this.partitioner != \"manual\" && this.partition.or(\"\") != \"\" => \"a partition cannot be specified unless the partitioner is set to manual\"\n  this.timestamp.or(\"\") != \"\" && this.timestamp_ms.or(\"\") != \"\" => \"both timestamp and timestamp_ms cannot be specified simultaneously\"\n}",
        "name": "",
        "type": "object"
      },
      "name": "redpanda_migrator",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "4.37.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "map",
            "name": "redpanda_migrator",
            "type": "unknown"
          },
          {
            "kind": "map",
            "name": "schema_registry",
            "type": "unknown"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "translate_schema_ids",
            "type": "bool"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "input_bundle_label",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redpanda_migrator_bundle",
      "plugin": true,
      "status": "experimental",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "seed_brokers",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_id",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "AWS_MSK_IAM",
                    ""
                  ],
                  [
                    "OAUTHBEARER",
                    ""
                  ],
                  [
                    "PLAIN",
                    ""
                  ],
                  [
                    "SCRAM-SHA-256",
                    ""
                  ],
                  [
                    "SCRAM-SHA-512",
                    ""
                  ],
                  [
                    "none",
                    ""
                  ]
                ],
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"aws_msk_iam\": true,\n  \"oauthbearer\": true,\n  \"plain\": true,\n  \"scram-sha-256\": true,\n  \"scram-sha-512\": true,\n  \"none\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "mechanism",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "name": "extensions",
                "type": "string"
              },
              {
                "children": [
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "profile",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "id",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "secret",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "token",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "from_ec2_role",
                        "type": "bool",
                        "version": "4.2.0"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role",
                        "type": "string"
                      },
                      {
                        "is_advanced": true,
                        "is_optional": true,
                        "kind": "scalar",
                        "name": "role_external_id",
                        "type": "string"
                      }
                    ],
                    "is_advanced": true,
                    "is_optional": true,
                    "kind": "scalar",
                    "name": "credentials",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "aws",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "sasl",
            "type": "object"
          },
          {
            "default": "5m",
            "is_advanced": true,
            "kind": "scalar",
            "name": "metadata_max_age",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "request_timeout_overhead",
            "type": "string"
          },
          {
            "default": "20s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "conn_idle_timeout",
            "type": "string"
          },
          {
            "default": "${! @kafka_offset_topic }",
            "interpolated": true,
            "kind": "scalar",
            "name": "offset_topic",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "offset_topic_prefix",
            "type": "string"
          },
          {
            "default": "${! @kafka_offset_group }",
            "interpolated": true,
            "kind": "scalar",
            "name": "offset_group",
            "type": "string"
          },
          {
            "default": "${! @kafka_offset_partition }",
            "interpolated": true,
            "kind": "scalar",
            "name": "offset_partition",
            "type": "string"
          },
          {
            "default": "${! @kafka_offset_commit_timestamp }",
            "interpolated": true,
            "kind": "scalar",
            "name": "offset_commit_timestamp",
            "type": "string"
          },
          {
            "default": "${! @kafka_offset_metadata }",
            "interpolated": true,
            "kind": "scalar",
            "name": "offset_metadata",
            "type": "string"
          },
          {
            "default": "${! @kafka_is_high_watermark }",
            "interpolated": true,
            "kind": "scalar",
            "name": "is_high_watermark",
            "type": "string"
          },
          {
            "default": "${! @kafka_key }",
            "interpolated": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "kafka_key",
            "type": "string"
          },
          {
            "default": 1,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "1MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_message_bytes",
            "type": "string"
          },
          {
            "default": "100MiB",
            "is_advanced": true,
            "kind": "scalar",
            "name": "broker_write_max_bytes",
            "type": "string"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redpanda_migrator_offsets",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "4.37.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": "",
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "reject",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "kind": "scalar",
        "name": "",
        "type": "output"
      },
      "name": "reject_errored",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": "",
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "resource",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "500ms",
                "is_advanced": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "3s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "0s",
                "is_advanced": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "output",
            "type": "output"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "retry",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "subject",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "subject_compatibility_level",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "backfill_dependencies",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "translate_ids",
            "type": "bool"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "normalize",
            "type": "bool"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "remove_metadata",
            "type": "bool"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "remove_rule_set",
            "type": "bool"
          },
          {
            "default": "schema_registry_input",
            "is_advanced": true,
            "kind": "scalar",
            "name": "input_resource",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "consumer_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "consumer_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "access_token_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "signing_method",
                "type": "string"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "claims",
                "type": "unknown"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "unknown"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "jwt",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "schema_registry",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "4.32.2"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "default": "30s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "connection_timeout",
            "type": "string"
          },
          {
            "children": [
              {
                "default": "",
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "host_public_key_file",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "host_public_key",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "private_key",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_secret": true,
                "kind": "scalar",
                "name": "private_key_pass",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "linter": "\nroot = match {\n  this.exists(\"host_public_key\") && this.exists(\"host_public_key_file\") => \"both host_public_key and host_public_key_file can't be set simultaneously\"\n  this.exists(\"private_key\") && this.exists(\"private_key_file\") => \"both private_key and private_key_file can't be set simultaneously\"\n}",
            "name": "credentials",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "all-bytes",
                ""
              ],
              [
                "append",
                ""
              ],
              [
                "delim:x",
                ""
              ],
              [
                "lines",
                ""
              ]
            ],
            "default": "all-bytes",
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sftp",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "3.39.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\n        root = if !this.has_prefix(\"xoxb-\") { [ \"field must start with xoxb-\" ] }\n      ",
            "name": "bot_token",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "channel_id",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "thread_ts",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "text",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "blocks",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "markdown",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "unfurl_links",
            "type": "bool"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "unfurl_media",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "link_names",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "slack_post",
      "plugin": true,
      "status": "experimental",
      "type": "output"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\n        root = if !this.has_prefix(\"xoxb-\") { [ \"field must start with xoxb-\" ] }\n      ",
            "name": "bot_token",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "channel_id",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "timestamp",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "emoji",
            "type": "string"
          },
          {
            "default": "add",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"add\": true,\n  \"remove\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "action",
            "options": [
              "add",
              "remove"
            ],
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "slack_reaction",
      "plugin": true,
      "status": "experimental",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "account",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "cloud",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "user",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "private_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "private_key_file",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "private_key_pass",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "role",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "warehouse",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "schema",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "stage",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "path",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "file_name",
            "type": "string",
            "version": "v4.12.0"
          },
          {
            "default": "",
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "file_extension",
            "type": "string",
            "version": "v4.12.0"
          },
          {
            "default": 4,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "root = if this < 1 || this > 99 { [ \"upload_parallel_threads must be between 1 and 99\" ] }",
            "name": "upload_parallel_threads",
            "type": "int"
          },
          {
            "annotated_options": [
              [
                "AUTO",
                ""
              ],
              [
                "DEFLATE",
                ""
              ],
              [
                "GZIP",
                ""
              ],
              [
                "NONE",
                ""
              ],
              [
                "RAW_DEFLATE",
                ""
              ],
              [
                "ZSTD",
                ""
              ]
            ],
            "default": "AUTO",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"auto\": true,\n  \"deflate\": true,\n  \"gzip\": true,\n  \"none\": true,\n  \"raw_deflate\": true,\n  \"zstd\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "compression",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "request_id",
            "type": "string",
            "version": "v4.12.0"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "snowpipe",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "client_session_keep_alive",
            "type": "bool"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": 1,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n  (!this.exists(\"password\") || this.password == \"\") && (!this.exists(\"private_key\") || this.private_key == \"\") && (!this.exists(\"private_key_file\") || this.private_key_file == \"\") => [ \"either `password` or `private_key` or `private_key_file` must be set\" ],\n  this.exists(\"password\") && this.password != \"\" && (this.exists(\"private_key\") && this.private_key != \"\" || this.exists(\"private_key_file\") && this.private_key_file != \"\") => [ \"only one of `password`, `private_key` and `private_key_file` can be set\" ],\n  this.exists(\"snowpipe\") && this.snowpipe != \"\" && !((this.exists(\"private_key\") && this.private_key != \"\") || (this.exists(\"private_key_file\") && this.private_key_file != \"\")) => [ \"either `private_key` or `private_key_file` must be set when using `snowpipe`\" ],\n}",
        "name": "",
        "type": "object"
      },
      "name": "snowflake_put",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "4.0.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "account",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "user",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "role",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "schema",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "private_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "private_key_file",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "private_key_pass",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "mapping",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "init_statement",
            "type": "string"
          },
          {
            "children": [
              {
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": true,
                "is_advanced": true,
                "kind": "scalar",
                "name": "ignore_nulls",
                "type": "bool"
              },
              {
                "bloblang": true,
                "is_deprecated": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "new_column_type_mapping",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "schema_evolution",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "parallelism",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 1,
                "is_advanced": true,
                "kind": "scalar",
                "linter": "root = if this < 1 { [\"parallelism must be positive\"] }",
                "name": "parallelism",
                "type": "int"
              },
              {
                "default": 50000,
                "is_advanced": true,
                "kind": "scalar",
                "linter": "root = if this < 1 { [\"chunk_size must be positive\"] }",
                "name": "chunk_size",
                "type": "int"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "build_options",
            "type": "object"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "default": 4,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "channel_prefix",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "channel_name",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "offset_token",
            "type": "string"
          },
          {
            "default": "60s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "commit_timeout",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n  this.exists(\"channel_prefix\") && this.exists(\"channel_name\") => [ \"both `channel_prefix` and `channel_name` can't be set simultaneously\" ],\n}",
        "name": "",
        "type": "object"
      },
      "name": "snowflake_streaming",
      "plugin": true,
      "status": "experimental",
      "type": "output",
      "version": "4.39.0"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"unix\": true,\n  \"tcp\": true,\n  \"udp\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "network",
            "options": [
              "unix",
              "tcp",
              "udp"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "address",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "all-bytes",
                ""
              ],
              [
                "append",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "delim:x",
                ""
              ]
            ],
            "default": "lines",
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "socket",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "token",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "gzip",
            "type": "bool"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "event_host",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "event_source",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "event_sourcetype",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "event_index",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          },
          {
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "skip_cert_verify",
            "type": "bool"
          },
          {
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "batching_count",
            "type": "int"
          },
          {
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "batching_period",
            "type": "string"
          },
          {
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "batching_byte_size",
            "type": "int"
          },
          {
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "splunk_hec",
      "plugin": true,
      "status": "beta",
      "type": "output",
      "version": "4.30.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "data_source_name",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sql",
      "plugin": true,
      "status": "deprecated",
      "type": "output",
      "version": "3.65.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "columns",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "suffix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "options",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "init_files",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "init_statement",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle_time",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_life_time",
            "type": "string"
          },
          {
            "default": 2,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_open",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sql_insert",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.59.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "unsafe_dynamic_query",
            "type": "bool"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "children": [
              {
                "kind": "scalar",
                "name": "query",
                "type": "string"
              },
              {
                "bloblang": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "args_mapping",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "array",
            "name": "queries",
            "type": "object"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_in_flight",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "init_files",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "init_statement",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle_time",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_life_time",
            "type": "string"
          },
          {
            "default": 2,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_open",
            "type": "int"
          },
          {
            "children": [
              {
                "default": 0,
                "kind": "scalar",
                "name": "count",
                "type": "int"
              },
              {
                "default": 0,
                "kind": "scalar",
                "name": "byte_size",
                "type": "int"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "period",
                "type": "string"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "",
            "name": "batching",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n        !this.exists(\"queries\") && !this.exists(\"query\") => [ \"either `query` or `queries` is required\" ],\n    }",
        "name": "",
        "type": "object"
      },
      "name": "sql_raw",
      "plugin": true,
      "status": "stable",
      "type": "output",
      "version": "3.65.0"
    },
    {
      "categories": [
        "Local"
      ],
      "config": {
        "children": [
          {
            "annotated_options": [
              [
                "all-bytes",
                ""
              ],
              [
                "append",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "delim:x",
                ""
              ]
            ],
            "default": "lines",
            "kind": "scalar",
            "name": "codec",
            "type": "string",
            "version": "3.46.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "stdout",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "name",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "args",
            "type": "string"
          },
          {
            "default": "lines",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"lines\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "codec",
            "options": [
              "lines"
            ],
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "subprocess",
      "plugin": true,
      "status": "beta",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": false,
            "kind": "scalar",
            "name": "retry_until_success",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "strict_mode",
            "type": "bool"
          },
          {
            "children": [
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "check",
                "type": "string"
              },
              {
                "kind": "scalar",
                "name": "output",
                "type": "output"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "continue",
                "type": "bool"
              }
            ],
            "kind": "array",
            "name": "cases",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "if this.exists(\"retry_until_success\") && this.retry_until_success {\n  if this.cases.or([]).any(oconf -> oconf.output.type.or(\"\") == \"reject\" || oconf.output.reject.type() == \"string\" ) {\n    \"a 'switch' output with a 'reject' case output must have the field 'switch.retry_until_success' set to 'false', otherwise the 'reject' child output will result in infinite retries\"\n  }\n}",
        "name": "",
        "type": "object"
      },
      "name": "switch",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sync_response",
      "plugin": true,
      "status": "stable",
      "type": "output"
    },
    {
      "categories": [
        "Network"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "proxy_url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "consumer_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "consumer_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "access_token_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "signing_method",
                "type": "string"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "claims",
                "type": "unknown"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "unknown"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "jwt",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "websocket",
      "plugin": true,
      "status": "stable",
      "type": "output"
    }
  ],
  "processors": [
    {
      "categories": [
        "Parsing",
        "Utility"
      ],
      "config": {
        "children": [
          {
            "annotated_options": [
              [
                "binary",
                ""
              ],
              [
                "concatenate",
                ""
              ],
              [
                "json_array",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "tar",
                ""
              ],
              [
                "zip",
                ""
              ]
            ],
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"binary\": true,\n  \"concatenate\": true,\n  \"json_array\": true,\n  \"lines\": true,\n  \"tar\": true,\n  \"zip\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "format",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "path",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "archive",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"to_json\": true,\n  \"from_json\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operator",
            "options": [
              "to_json",
              "from_json"
            ],
            "type": "string"
          },
          {
            "default": "textual",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"textual\": true,\n  \"binary\": true,\n  \"single\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "encoding",
            "options": [
              "textual",
              "binary",
              "single"
            ],
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "schema",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "schema_path",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "avro",
      "plugin": true,
      "status": "beta",
      "type": "processor"
    },
    {
      "categories": [
        "Mapping"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"none\": true,\n  \"text\": true,\n  \"json\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "codec",
            "options": [
              "none",
              "text",
              "json"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "program",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "awk",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "prompt",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "system_prompt",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "max_tokens",
            "type": "int"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this < 0 || this > 1 { [\"field must be between 0.0-1.0\"] }",
            "name": "temperature",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "stop",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this < 0 || this > 1 { [\"field must be between 0.0-1.0\"] }",
            "name": "top_p",
            "type": "float"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_bedrock_chat",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.34.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "text",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_bedrock_embeddings",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.37.0"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "unsafe_dynamic_query",
            "type": "bool"
          },
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_dynamodb_partiql",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "3.48.0"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "default": false,
            "kind": "scalar",
            "name": "parallel",
            "type": "bool"
          },
          {
            "kind": "scalar",
            "name": "function",
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "region",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "profile",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "id",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "token",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "from_ec2_role",
                "type": "bool",
                "version": "4.2.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "role_external_id",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "credentials",
            "type": "object"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "aws_lambda",
      "plugin": true,
      "status": "stable",
      "type": "processor",
      "version": "3.36.0"
    },
    {
      "categories": [
        "Azure"
      ],
      "config": {
        "children": [
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "endpoint",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "account_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "connection_string",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "container",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "partition_keys_map",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "Create",
                ""
              ],
              [
                "Delete",
                ""
              ],
              [
                "Patch",
                ""
              ],
              [
                "Read",
                ""
              ],
              [
                "Replace",
                ""
              ],
              [
                "Upsert",
                ""
              ]
            ],
            "default": "Create",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"create\": true,\n  \"delete\": true,\n  \"patch\": true,\n  \"read\": true,\n  \"replace\": true,\n  \"upsert\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operation",
            "type": "string"
          },
          {
            "children": [
              {
                "annotated_options": [
                  [
                    "Add",
                    ""
                  ],
                  [
                    "Increment",
                    ""
                  ],
                  [
                    "Remove",
                    ""
                  ],
                  [
                    "Replace",
                    ""
                  ],
                  [
                    "Set",
                    ""
                  ]
                ],
                "default": "Add",
                "is_advanced": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"add\": true,\n  \"increment\": true,\n  \"remove\": true,\n  \"replace\": true,\n  \"set\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "operation",
                "type": "string"
              },
              {
                "is_advanced": true,
                "kind": "scalar",
                "name": "path",
                "type": "string"
              },
              {
                "bloblang": true,
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "value_map",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "patch_operations",
            "type": "object"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "patch_condition",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "auto_id",
            "type": "bool"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "item_id",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "enable_content_response_on_write",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "linter": "root = []\nlet hasEndpoint = this.endpoint.or(\"\") != \"\"\nlet hasConnectionString = this.connection_string.or(\"\") != \"\"\n\nroot.\"-\" = if !$hasEndpoint && !$hasConnectionString {\n  \"Either `endpoint` or `connection_string` must be set.\"\n}\n\nlet hasItemID = this.item_id.or(\"\") != \"\"\nlet hasPatchOperations = this.patch_operations.length().or(0) > 0\nlet hasPatchCondition = this.patch_condition.or(\"\") != \"\"\n\nroot.\"-\" = if !$hasItemID && (this.operation == \"Replace\" || this.operation == \"Delete\" || this.operation == \"Read\" || this.operation == \"Patch\") {\n  \"The `item_id` field must be set for Replace, Delete, Read and Patch operations.\"\n}\n\nroot.\"-\" = if this.operation == \"Patch\" && !$hasPatchOperations {\n  \"At least one `patch_operations` must be set when `operation: Patch`.\"\n}\n\nroot.\"-\" = if $hasPatchCondition && (!$hasPatchOperations || this.operation != \"Patch\") {\n  \"The `patch_condition`  field only applies to `Patch` operations and it requires one or more `patch_operations`.\"\n}\n\nroot.\"-\" = if this.operation == \"Patch\" && this.patch_operations.any(o -> o.operation != \"Remove\" && o.value_map.or(\"\") == \"\") {\n  \"The `patch_operations` `value_map` field must be set when `operation` is not `Remove`.\"\n}\n\nroot.\"-\" = if this.operation == \"Patch\" && this.patch_operations.any(o -> o.operation == \"Remove\" && o.value_map.or(\"\") != \"\") {\n  \"The `patch_operations` `value_map` field must not be set when `operation` is `Remove`.\"\n}\n",
        "name": "",
        "type": "object"
      },
      "name": "azure_cosmosdb",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "v4.25.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": "5s",
            "kind": "scalar",
            "name": "interval",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "count_bytes",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "benchmark",
      "plugin": true,
      "status": "experimental",
      "type": "processor"
    },
    {
      "categories": [
        "Mapping",
        "Parsing"
      ],
      "config": {
        "bloblang": true,
        "default": "",
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "bloblang",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": 1073741824,
            "kind": "scalar",
            "name": "max_part_size",
            "type": "int"
          },
          {
            "default": 1,
            "kind": "scalar",
            "name": "min_part_size",
            "type": "int"
          },
          {
            "default": 100,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_parts",
            "type": "int"
          },
          {
            "default": 1,
            "is_advanced": true,
            "kind": "scalar",
            "name": "min_parts",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "bounds_check",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "children": [
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "request_map",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "processors",
            "type": "processor"
          },
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "result_map",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "branch",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "resource",
            "type": "string"
          },
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"set\": true,\n  \"add\": true,\n  \"get\": true,\n  \"delete\": true,\n  \"exists\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operator",
            "options": [
              "set",
              "add",
              "get",
              "delete",
              "exists"
            ],
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "value",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "ttl",
            "type": "string",
            "version": "3.33.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "cache",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "cache",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "skip_on",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "ttl",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "processors",
            "type": "processor"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "cached",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.3.0"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "default": [],
        "kind": "array",
        "name": "",
        "type": "processor"
      },
      "name": "catch",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": "https://api.cohere.com",
            "kind": "scalar",
            "name": "base_url",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prompt",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "system_prompt",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "max_tokens",
            "type": "int"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < 0 { [ \"field must be between 0 and 2\" ] }",
            "name": "temperature",
            "type": "float"
          },
          {
            "default": "text",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"text\": true,\n  \"json\": true,\n  \"json_schema\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "response_format",
            "options": [
              "text",
              "json",
              "json_schema"
            ],
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "json_schema",
            "type": "string"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "kind": "scalar",
                "name": "url",
                "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                "type": "string"
              },
              {
                "is_advanced": true,
                "kind": "scalar",
                "name": "subject",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "refresh_interval",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "skip_cert_verify",
                    "type": "bool"
                  },
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enable_renegotiation",
                    "type": "bool",
                    "version": "3.45.0"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "root_cas",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "root_cas_file",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "cert",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "key",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "cert_file",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "key_file",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "password",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      }
                    ],
                    "default": [],
                    "is_advanced": true,
                    "kind": "array",
                    "name": "client_certs",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "kind": "scalar",
                "name": "tls",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "consumer_key",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "consumer_secret",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "access_token",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "access_token_secret",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "oauth",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "basic_auth",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "private_key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "signing_method",
                    "type": "string"
                  },
                  {
                    "default": {},
                    "is_advanced": true,
                    "kind": "map",
                    "name": "claims",
                    "type": "unknown"
                  },
                  {
                    "default": {},
                    "is_advanced": true,
                    "kind": "map",
                    "name": "headers",
                    "type": "unknown"
                  }
                ],
                "is_advanced": true,
                "kind": "scalar",
                "name": "jwt",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "schema_registry",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 1 || this < 0 { [ \"field must be between 0 and 1\" ] }",
            "name": "top_p",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < -2 { [ \"field must be less than 2 and greater than -2\" ] }",
            "name": "frequency_penalty",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < -2 { [ \"field must be less than 2 and greater than -2\" ] }",
            "name": "presence_penalty",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "seed",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "stop",
            "type": "string"
          },
          {
            "default": 10,
            "kind": "scalar",
            "name": "max_tool_calls",
            "type": "int"
          },
          {
            "children": [
              {
                "kind": "scalar",
                "name": "name",
                "type": "string"
              },
              {
                "kind": "scalar",
                "name": "description",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": [],
                    "kind": "array",
                    "name": "required",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "kind": "scalar",
                        "name": "type",
                        "type": "string"
                      },
                      {
                        "kind": "scalar",
                        "name": "description",
                        "type": "string"
                      },
                      {
                        "default": [],
                        "kind": "array",
                        "name": "enum",
                        "type": "string"
                      }
                    ],
                    "kind": "map",
                    "name": "properties",
                    "type": "object"
                  }
                ],
                "kind": "scalar",
                "name": "parameters",
                "type": "object"
              },
              {
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "default": [],
            "kind": "array",
            "name": "tools",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "\n      root = match {\n        this.exists(\"json_schema\") && this.exists(\"schema_registry\") => [\"cannot set both `json_schema` and `schema_registry`\"]\n        this.response_format == \"json_schema\" && !this.exists(\"json_schema\") && !this.exists(\"schema_registry\") => [\"schema must be specified using either `json_schema` or `schema_registry`\"]\n      }\n    ",
        "name": "",
        "type": "object"
      },
      "name": "cohere_chat",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.37.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": "https://api.cohere.com",
            "kind": "scalar",
            "name": "base_url",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "text_mapping",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "classification",
                ""
              ],
              [
                "clustering",
                ""
              ],
              [
                "search_document",
                ""
              ],
              [
                "search_query",
                ""
              ]
            ],
            "default": "search_document",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"classification\": true,\n  \"clustering\": true,\n  \"search_document\": true,\n  \"search_query\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "input_type",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "dimensions",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "cohere_embeddings",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.37.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": "https://api.cohere.com",
            "kind": "scalar",
            "name": "base_url",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "documents",
            "type": "string"
          },
          {
            "default": "0",
            "interpolated": true,
            "kind": "scalar",
            "name": "top_n",
            "type": "string"
          },
          {
            "default": 4096,
            "kind": "scalar",
            "name": "max_tokens_per_doc",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "cohere_rerank",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.37.0"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "name",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "command",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.21.0"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "algorithm",
            "options": [
              "flate",
              "gzip",
              "lz4",
              "pgzip",
              "snappy",
              "zlib"
            ],
            "type": "string"
          },
          {
            "default": -1,
            "kind": "scalar",
            "name": "level",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "compress",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "collection",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "scope",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "json",
                ""
              ],
              [
                "legacy",
                ""
              ],
              [
                "raw",
                ""
              ],
              [
                "rawjson",
                ""
              ],
              [
                "rawstring",
                ""
              ]
            ],
            "default": "legacy",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"json\": true,\n  \"legacy\": true,\n  \"raw\": true,\n  \"rawjson\": true,\n  \"rawstring\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "transcoder",
            "type": "string"
          },
          {
            "default": "15s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "id",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "content",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "get",
                ""
              ],
              [
                "insert",
                ""
              ],
              [
                "remove",
                ""
              ],
              [
                "replace",
                ""
              ],
              [
                "upsert",
                ""
              ]
            ],
            "default": "get",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"get\": true,\n  \"insert\": true,\n  \"remove\": true,\n  \"replace\": true,\n  \"upsert\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operation",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "root = if ((this.operation == \"insert\" || this.operation == \"replace\" || this.operation == \"upsert\") && !this.exists(\"content\")) { [ \"content must be set for insert, replace and upsert operations.\" ] }",
        "name": "",
        "type": "object"
      },
      "name": "couchbase",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.11.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "interpolated": true,
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "crash",
      "plugin": true,
      "status": "beta",
      "type": "processor"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "algorithm",
            "options": [
              "bzip2",
              "flate",
              "gzip",
              "lz4",
              "pgzip",
              "snappy",
              "zlib"
            ],
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "decompress",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "cache",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "drop_on_err",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "dedupe",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "default": [],
        "kind": "array",
        "name": "",
        "type": "processor"
      },
      "name": "for_each",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "project",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "columns",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "where",
            "type": "string"
          },
          {
            "default": {},
            "kind": "map",
            "name": "job_labels",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "suffix",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_bigquery_select",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "3.64.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "project",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "location",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prompt",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "system_prompt",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "history",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "attachment",
            "type": "string",
            "version": "4.38.0"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this < 0 || this > 2 { [\"field must be between 0.0-2.0\"] }",
            "name": "temperature",
            "type": "float"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "max_tokens",
            "type": "int"
          },
          {
            "default": "text",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"text\": true,\n  \"json\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "response_format",
            "options": [
              "text",
              "json"
            ],
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this < 0 || this > 1 { [\"field must be between 0.0-1.0\"] }",
            "name": "top_p",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this < 1 || this > 40 { [\"field must be between 1-40\"] }",
            "name": "top_k",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "stop",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this < -2 || this > 2 { [\"field must be greater than -2.0 and less than 2.0\"] }",
            "name": "presence_penalty",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this < -2 || this > 2 { [\"field must be greater than -2.0 and less than 2.0\"] }",
            "name": "frequency_penalty",
            "type": "float"
          },
          {
            "default": 10,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "root = if this <= 0 { [\"field must be greater than zero\"] }",
            "name": "max_tool_calls",
            "type": "int"
          },
          {
            "children": [
              {
                "kind": "scalar",
                "name": "name",
                "type": "string"
              },
              {
                "kind": "scalar",
                "name": "description",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": [],
                    "kind": "array",
                    "name": "required",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "kind": "scalar",
                        "name": "type",
                        "type": "string"
                      },
                      {
                        "kind": "scalar",
                        "name": "description",
                        "type": "string"
                      },
                      {
                        "default": [],
                        "kind": "array",
                        "name": "enum",
                        "type": "string"
                      }
                    ],
                    "kind": "map",
                    "name": "properties",
                    "type": "object"
                  }
                ],
                "kind": "scalar",
                "name": "parameters",
                "type": "object"
              },
              {
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "default": [],
            "kind": "array",
            "name": "tools",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_vertex_ai_chat",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.34.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "project",
            "type": "string"
          },
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": "us-central1",
            "kind": "scalar",
            "name": "location",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "CLASSIFICATION",
                ""
              ],
              [
                "CLUSTERING",
                ""
              ],
              [
                "FACT_VERIFICATION",
                ""
              ],
              [
                "QUESTION_ANSWERING",
                ""
              ],
              [
                "RETRIEVAL_DOCUMENT",
                ""
              ],
              [
                "RETRIEVAL_QUERY",
                ""
              ],
              [
                "SEMANTIC_SIMILARITY",
                ""
              ]
            ],
            "default": "RETRIEVAL_DOCUMENT",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"classification\": true,\n  \"clustering\": true,\n  \"fact_verification\": true,\n  \"question_answering\": true,\n  \"retrieval_document\": true,\n  \"retrieval_query\": true,\n  \"semantic_similarity\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "task_type",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "text",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "output_dimensions",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_vertex_ai_embeddings",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.37.0"
    },
    {
      "categories": [
        "Unstructured"
      ],
      "config": {
        "children": [
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "file_id",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "mime_type",
            "type": "string"
          },
          {
            "default": {
              "application/vnd.google-apps.document": "text/markdown",
              "application/vnd.google-apps.drawing": "image/png",
              "application/vnd.google-apps.presentation": "application/pdf",
              "application/vnd.google-apps.script": "application/vnd.google-apps.script+json",
              "application/vnd.google-apps.spreadsheet": "text/csv"
            },
            "is_advanced": true,
            "kind": "map",
            "name": "export_mime_types",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "google_drive_download",
      "plugin": true,
      "status": "experimental",
      "type": "processor"
    },
    {
      "categories": [
        "Unstructured"
      ],
      "config": {
        "children": [
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "google_drive_list_labels",
      "plugin": true,
      "status": "experimental",
      "type": "processor"
    },
    {
      "categories": [
        "Unstructured"
      ],
      "config": {
        "children": [
          {
            "is_optional": true,
            "is_secret": true,
            "kind": "scalar",
            "name": "credentials_json",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": [
              "id",
              "name",
              "mimeType",
              "size",
              "labelInfo"
            ],
            "kind": "array",
            "name": "projection",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "include_label_ids",
            "type": "string"
          },
          {
            "default": 64,
            "kind": "scalar",
            "name": "max_results",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "google_drive_search",
      "plugin": true,
      "status": "experimental",
      "type": "processor"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "expressions",
            "type": "string"
          },
          {
            "default": {},
            "kind": "map",
            "name": "pattern_definitions",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "pattern_paths",
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "named_captures_only",
            "type": "bool"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "use_default_patterns",
            "type": "bool"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "remove_empty_values",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "grok",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "children": [
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "check",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "processors",
            "type": "processor"
          }
        ],
        "kind": "array",
        "name": "",
        "type": "object"
      },
      "name": "group_by",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "value",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "group_by_value",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "url",
            "type": "string"
          },
          {
            "default": "POST",
            "kind": "scalar",
            "name": "verb",
            "type": "string"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "headers",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"trace\": true,\n  \"debug\": true,\n  \"info\": true,\n  \"warn\": true,\n  \"error\": true,\n  \"fatal\": true,\n  \"\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "dump_request_log_level",
            "options": [
              "TRACE",
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR",
              "FATAL",
              ""
            ],
            "type": "string",
            "version": "4.12.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "consumer_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "consumer_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "access_token_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "client_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "client_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "token_url",
                "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                "type": "string"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "scopes",
                "type": "string",
                "version": "3.45.0"
              },
              {
                "default": {},
                "is_advanced": true,
                "is_optional": true,
                "kind": "map",
                "linter": "\nroot = if this.type() == \"object\" {\n  this.values().map_each(ele -> if ele.type() != \"array\" {\n    \"field must be an object containing arrays of strings, got %s (%v)\".format(ele.format_json(no_indent: true), ele.type())\n  } else {\n    ele.map_each(str -> if str.type() != \"string\" {\n      \"field values must be strings, got %s (%v)\".format(str.format_json(no_indent: true), str.type())\n    } else { deleted() })\n  }).\n    flatten()\n}\n",
                "name": "endpoint_params",
                "type": "unknown",
                "version": "4.21.0"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth2",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "signing_method",
                "type": "string"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "claims",
                "type": "unknown"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "unknown"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "jwt",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "children": [
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "extract_headers",
            "type": "object"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "rate_limit",
            "type": "string"
          },
          {
            "default": "5s",
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": "1s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "retry_period",
            "type": "string"
          },
          {
            "default": "300s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_retry_backoff",
            "type": "string"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "int"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "follow_redirects",
            "type": "bool"
          },
          {
            "default": [
              429
            ],
            "is_advanced": true,
            "kind": "array",
            "name": "backoff_on",
            "type": "int"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "drop_on",
            "type": "int"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "successful_on",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "proxy_url",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "disable_http2",
            "type": "bool",
            "version": "4.44.0"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "batch_as_multipart",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "parallel",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "http",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "children": [
          {
            "default": -1,
            "kind": "scalar",
            "name": "index",
            "type": "int"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "content",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "insert_part",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Mapping"
      ],
      "config": {
        "children": [
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "code",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "file",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "global_folders",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "\nlet codeLen = (this.code | \"\").length()\nlet fileLen = (this.file | \"\").length()\nroot = if $codeLen == 0 && $fileLen == 0 {\n  \"either the code or file field must be specified\"\n} else if $codeLen > 0 && $fileLen > 0 {\n  \"cannot specify both the code and file fields\"\n}",
        "name": "",
        "type": "object"
      },
      "name": "javascript",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.14.0"
    },
    {
      "categories": [
        "Mapping"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "jmespath",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Mapping"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "raw",
            "type": "bool"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "output_raw",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "jq",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Mapping"
      ],
      "config": {
        "children": [
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "schema",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "schema_path",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "json_schema",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": "INFO",
            "kind": "scalar",
            "name": "level",
            "options": [
              "ERROR",
              "WARN",
              "INFO",
              "DEBUG",
              "TRACE"
            ],
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "fields_mapping",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "message",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_deprecated": true,
            "is_optional": true,
            "kind": "map",
            "name": "fields",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "log",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Mapping",
        "Parsing"
      ],
      "config": {
        "bloblang": true,
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "mapping",
      "plugin": true,
      "status": "stable",
      "type": "processor",
      "version": "4.5.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"counter\": true,\n  \"counter_by\": true,\n  \"gauge\": true,\n  \"timing\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "type",
            "options": [
              "counter",
              "counter_by",
              "gauge",
              "timing"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "name",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "map",
            "name": "labels",
            "type": "string"
          },
          {
            "default": "",
            "interpolated": true,
            "kind": "scalar",
            "name": "value",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "metric",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "database",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "username",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "password",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "default": "benthos",
            "is_advanced": true,
            "kind": "scalar",
            "name": "app_name",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "collection",
            "type": "string"
          },
          {
            "default": "insert-one",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"insert-one\": true,\n  \"delete-one\": true,\n  \"delete-many\": true,\n  \"replace-one\": true,\n  \"update-one\": true,\n  \"find-one\": true,\n  \"aggregate\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operation",
            "options": [
              "insert-one",
              "delete-one",
              "delete-many",
              "replace-one",
              "update-one",
              "find-one",
              "aggregate"
            ],
            "type": "string"
          },
          {
            "children": [
              {
                "default": "majority",
                "kind": "scalar",
                "name": "w",
                "type": "string"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "j",
                "type": "bool"
              },
              {
                "default": "",
                "kind": "scalar",
                "name": "w_timeout",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "write_concern",
            "type": "object"
          },
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "document_map",
            "type": "string"
          },
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "filter_map",
            "type": "string"
          },
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "hint_map",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "upsert",
            "type": "bool",
            "version": "3.60.0"
          },
          {
            "annotated_options": [
              [
                "canonical",
                ""
              ],
              [
                "relaxed",
                ""
              ]
            ],
            "default": "canonical",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"canonical\": true,\n  \"relaxed\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "json_marshal_mode",
            "type": "string",
            "version": "3.60.0"
          },
          {
            "default": 3,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          },
          {
            "children": [
              {
                "default": "1s",
                "is_advanced": true,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "5s",
                "is_advanced": true,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "30s",
                "is_advanced": true,
                "is_deprecated": true,
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "mongodb",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "3.43.0"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "annotated_options": [
              [
                "from_json",
                ""
              ],
              [
                "to_json",
                ""
              ]
            ],
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"from_json\": true,\n  \"to_json\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operator",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "msgpack",
      "plugin": true,
      "status": "beta",
      "type": "processor",
      "version": "3.59.0"
    },
    {
      "categories": [
        "Mapping",
        "Parsing"
      ],
      "config": {
        "bloblang": true,
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "mutation",
      "plugin": true,
      "status": "stable",
      "type": "processor",
      "version": "4.5.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "kind": "scalar",
            "name": "bucket",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "create",
                ""
              ],
              [
                "delete",
                ""
              ],
              [
                "get",
                ""
              ],
              [
                "get_revision",
                ""
              ],
              [
                "history",
                ""
              ],
              [
                "keys",
                ""
              ],
              [
                "purge",
                ""
              ],
              [
                "put",
                ""
              ],
              [
                "update",
                ""
              ]
            ],
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"create\": true,\n  \"delete\": true,\n  \"get\": true,\n  \"get_revision\": true,\n  \"history\": true,\n  \"keys\": true,\n  \"purge\": true,\n  \"put\": true,\n  \"update\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operation",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "linter": "if this == \"\" {[ \"'key' must be set to a non-empty string\" ]}",
            "name": "key",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "revision",
            "type": "string"
          },
          {
            "default": "5s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n      [\"get_revision\", \"update\"].contains(this.operation) && !this.exists(\"revision\") => [ \"'revision' must be set when operation is '\" + this.operation + \"'\" ],\n      ![\"get_revision\", \"update\"].contains(this.operation) && this.exists(\"revision\") => [ \"'revision' cannot be set when operation is '\" + this.operation + \"'\" ],\n    }",
        "name": "",
        "type": "object"
      },
      "name": "nats_kv",
      "plugin": true,
      "status": "beta",
      "type": "processor",
      "version": "4.12.0"
    },
    {
      "categories": [
        "Services"
      ],
      "config": {
        "children": [
          {
            "kind": "array",
            "name": "urls",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "max_reconnects",
            "type": "int"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "subject",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "inbox_prefix",
            "type": "string"
          },
          {
            "default": {},
            "interpolated": true,
            "kind": "map",
            "name": "headers",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "metadata",
            "type": "object"
          },
          {
            "default": "3s",
            "is_optional": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls_handshake_first",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "nkey_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "nkey",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string",
                "version": "4.38.0"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "user_credentials_file",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_jwt",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "user_nkey_seed",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "auth",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "nats_request_reply",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.27.0"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "noop",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prompt",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "system_prompt",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "image",
            "type": "string",
            "version": "4.38.0"
          },
          {
            "default": "text",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"text\": true,\n  \"json\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "response_format",
            "options": [
              "text",
              "json"
            ],
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "max_tokens",
            "type": "int"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < 0 { [ \"field must be between 0.0 and 2.0\" ] }",
            "name": "temperature",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "num_keep",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "seed",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "top_k",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 1 || this < 0 { [ \"field must be between 0.0 and 1.0\" ] }",
            "name": "top_p",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < -2 { [ \"field must be between -2.0 and 2.0\" ] }",
            "name": "repeat_penalty",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < -2 { [ \"field must be between -2.0 and 2.0\" ] }",
            "name": "presence_penalty",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < -2 { [ \"field must be between -2.0 and 2.0\" ] }",
            "name": "frequency_penalty",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "stop",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "save_prompt_metadata",
            "type": "bool"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "history",
            "type": "string"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "linter": "root = if this <= 0 { [\"field must be greater than zero\"] }",
            "name": "max_tool_calls",
            "type": "int"
          },
          {
            "children": [
              {
                "kind": "scalar",
                "name": "name",
                "type": "string"
              },
              {
                "kind": "scalar",
                "name": "description",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": [],
                    "kind": "array",
                    "name": "required",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "kind": "scalar",
                        "name": "type",
                        "type": "string"
                      },
                      {
                        "kind": "scalar",
                        "name": "description",
                        "type": "string"
                      },
                      {
                        "default": [],
                        "kind": "array",
                        "name": "enum",
                        "type": "string"
                      }
                    ],
                    "kind": "map",
                    "name": "properties",
                    "type": "object"
                  }
                ],
                "kind": "scalar",
                "name": "parameters",
                "type": "object"
              },
              {
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "default": [],
            "kind": "array",
            "name": "tools",
            "type": "object"
          },
          {
            "children": [
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "context_size",
                "type": "int"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "batch_size",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "gpu_layers",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "threads",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "use_mmap",
                "type": "bool"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "runner",
            "type": "object"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "server_address",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "cache_directory",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "download_url",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "ollama_chat",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.32.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "text",
            "type": "string"
          },
          {
            "children": [
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "context_size",
                "type": "int"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "batch_size",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "gpu_layers",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "threads",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "use_mmap",
                "type": "bool"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "runner",
            "type": "object"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "server_address",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "cache_directory",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "download_url",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "ollama_embeddings",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.32.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "annotated_options": [
              [
                "llama-guard3",
                ""
              ],
              [
                "shieldgemma",
                ""
              ]
            ],
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"llama-guard3\": true,\n  \"shieldgemma\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "model",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "prompt",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "response",
            "type": "string"
          },
          {
            "children": [
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "context_size",
                "type": "int"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "batch_size",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "gpu_layers",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "threads",
                "type": "int"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "use_mmap",
                "type": "bool"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "runner",
            "type": "object"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "server_address",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "cache_directory",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "download_url",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "ollama_moderation",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.42.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": "https://api.openai.com/v1",
            "kind": "scalar",
            "name": "server_address",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prompt",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "system_prompt",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "history",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "image",
            "type": "string",
            "version": "4.38.0"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "max_tokens",
            "type": "int"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < 0 { [ \"field must be between 0 and 2\" ] }",
            "name": "temperature",
            "type": "float"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "user",
            "type": "string"
          },
          {
            "default": "text",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"text\": true,\n  \"json\": true,\n  \"json_schema\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "response_format",
            "options": [
              "text",
              "json",
              "json_schema"
            ],
            "type": "string"
          },
          {
            "children": [
              {
                "kind": "scalar",
                "name": "name",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "description",
                "type": "string"
              },
              {
                "kind": "scalar",
                "name": "schema",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "json_schema",
            "type": "object"
          },
          {
            "children": [
              {
                "is_advanced": true,
                "kind": "scalar",
                "name": "url",
                "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                "type": "string"
              },
              {
                "default": "schema_registry_id_",
                "is_advanced": true,
                "kind": "scalar",
                "name": "name_prefix",
                "type": "string"
              },
              {
                "is_advanced": true,
                "kind": "scalar",
                "name": "subject",
                "type": "string"
              },
              {
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "refresh_interval",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "skip_cert_verify",
                    "type": "bool"
                  },
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enable_renegotiation",
                    "type": "bool",
                    "version": "3.45.0"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "root_cas",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "root_cas_file",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "cert",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "key",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "cert_file",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "kind": "scalar",
                        "name": "key_file",
                        "type": "string"
                      },
                      {
                        "default": "",
                        "is_advanced": true,
                        "is_secret": true,
                        "kind": "scalar",
                        "name": "password",
                        "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                        "type": "string"
                      }
                    ],
                    "default": [],
                    "is_advanced": true,
                    "kind": "array",
                    "name": "client_certs",
                    "type": "object"
                  }
                ],
                "is_advanced": true,
                "kind": "scalar",
                "name": "tls",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "consumer_key",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "consumer_secret",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "access_token",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "access_token_secret",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "oauth",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "basic_auth",
                "type": "object"
              },
              {
                "children": [
                  {
                    "default": false,
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "private_key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "signing_method",
                    "type": "string"
                  },
                  {
                    "default": {},
                    "is_advanced": true,
                    "kind": "map",
                    "name": "claims",
                    "type": "unknown"
                  },
                  {
                    "default": {},
                    "is_advanced": true,
                    "kind": "map",
                    "name": "headers",
                    "type": "unknown"
                  }
                ],
                "is_advanced": true,
                "kind": "scalar",
                "name": "jwt",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "schema_registry",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 1 || this < 0 { [ \"field must be between 0 and 1\" ] }",
            "name": "top_p",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < -2 { [ \"field must be less than 2 and greater than -2\" ] }",
            "name": "frequency_penalty",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "root = if this > 2 || this < -2 { [ \"field must be less than 2 and greater than -2\" ] }",
            "name": "presence_penalty",
            "type": "float"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "seed",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "stop",
            "type": "string"
          },
          {
            "children": [
              {
                "kind": "scalar",
                "name": "name",
                "type": "string"
              },
              {
                "kind": "scalar",
                "name": "description",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": [],
                    "kind": "array",
                    "name": "required",
                    "type": "string"
                  },
                  {
                    "children": [
                      {
                        "kind": "scalar",
                        "name": "type",
                        "type": "string"
                      },
                      {
                        "kind": "scalar",
                        "name": "description",
                        "type": "string"
                      },
                      {
                        "default": [],
                        "kind": "array",
                        "name": "enum",
                        "type": "string"
                      }
                    ],
                    "kind": "map",
                    "name": "properties",
                    "type": "object"
                  }
                ],
                "default": [],
                "kind": "scalar",
                "name": "parameters",
                "type": "object"
              },
              {
                "is_optional": true,
                "kind": "array",
                "name": "processors",
                "type": "processor"
              }
            ],
            "kind": "array",
            "name": "tools",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "\n      root = match {\n        this.exists(\"json_schema\") && this.exists(\"schema_registry\") => [\"cannot set both `json_schema` and `schema_registry`\"]\n        this.response_format == \"json_schema\" && !this.exists(\"json_schema\") && !this.exists(\"schema_registry\") => [\"schema must be specified using either `json_schema` or `schema_registry`\"]\n      }\n    ",
        "name": "",
        "type": "object"
      },
      "name": "openai_chat_completion",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.32.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": "https://api.openai.com/v1",
            "kind": "scalar",
            "name": "server_address",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "text_mapping",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "dimensions",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "openai_embeddings",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.32.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": "https://api.openai.com/v1",
            "kind": "scalar",
            "name": "server_address",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prompt",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "quality",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "size",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "style",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "openai_image_generation",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.32.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": "https://api.openai.com/v1",
            "kind": "scalar",
            "name": "server_address",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "input",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "voice",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "response_format",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "openai_speech",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.32.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": "https://api.openai.com/v1",
            "kind": "scalar",
            "name": "server_address",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "file",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "language",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prompt",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "openai_transcription",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.32.0"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "default": "https://api.openai.com/v1",
            "kind": "scalar",
            "name": "server_address",
            "type": "string"
          },
          {
            "is_secret": true,
            "kind": "scalar",
            "name": "api_key",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "model",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "file",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prompt",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "openai_translation",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.32.0"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "children": [
          {
            "default": 0,
            "kind": "scalar",
            "name": "cap",
            "type": "int"
          },
          {
            "kind": "array",
            "name": "processors",
            "type": "processor"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "parallel",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "annotated_options": [
              [
                "from_json",
                ""
              ],
              [
                "to_json",
                ""
              ]
            ],
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"from_json\": true,\n  \"to_json\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operator",
            "type": "string"
          },
          {
            "default": "snappy",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"uncompressed\": true,\n  \"snappy\": true,\n  \"gzip\": true,\n  \"lz4\": true,\n  \"zstd\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "compression",
            "options": [
              "uncompressed",
              "snappy",
              "gzip",
              "lz4",
              "zstd"
            ],
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "schema_file",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "schema",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "\nroot = if this.operator == \"from_json\" && (this.schema | this.schema_file | \"\") == \"\" {\n\t\"a schema or schema_file must be specified when the operator is set to from_json\"\n}",
        "name": "",
        "type": "object"
      },
      "name": "parquet",
      "plugin": true,
      "status": "deprecated",
      "type": "processor",
      "version": "3.62.0"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "default": false,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "byte_array_as_string",
            "type": "bool"
          },
          {
            "annotated_options": [
              [
                "v1",
                ""
              ],
              [
                "v2",
                ""
              ]
            ],
            "default": "v1",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"v1\": true,\n  \"v2\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "handle_logical_types",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "parquet_decode",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.4.0"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "children": [
              {
                "kind": "scalar",
                "name": "name",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "linter": "\nlet options = {\n  \"boolean\": true,\n  \"int32\": true,\n  \"int64\": true,\n  \"float\": true,\n  \"double\": true,\n  \"byte_array\": true,\n  \"utf8\": true,\n  \"timestamp\": true,\n  \"bson\": true,\n  \"enum\": true,\n  \"json\": true,\n  \"uuid\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
                "name": "type",
                "options": [
                  "BOOLEAN",
                  "INT32",
                  "INT64",
                  "FLOAT",
                  "DOUBLE",
                  "BYTE_ARRAY",
                  "UTF8",
                  "TIMESTAMP",
                  "BSON",
                  "ENUM",
                  "JSON",
                  "UUID"
                ],
                "type": "string"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "repeated",
                "type": "bool"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "optional",
                "type": "bool"
              },
              {
                "is_optional": true,
                "kind": "array",
                "name": "fields",
                "type": "unknown"
              }
            ],
            "is_optional": true,
            "kind": "array",
            "name": "schema",
            "type": "object"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "schema_metadata",
            "type": "string"
          },
          {
            "default": "uncompressed",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"uncompressed\": true,\n  \"snappy\": true,\n  \"gzip\": true,\n  \"brotli\": true,\n  \"zstd\": true,\n  \"lz4raw\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "default_compression",
            "options": [
              "uncompressed",
              "snappy",
              "gzip",
              "brotli",
              "zstd",
              "lz4raw"
            ],
            "type": "string"
          },
          {
            "default": "DELTA_LENGTH_BYTE_ARRAY",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"delta_length_byte_array\": true,\n  \"plain\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "default_encoding",
            "options": [
              "DELTA_LENGTH_BYTE_ARRAY",
              "PLAIN"
            ],
            "type": "string",
            "version": "4.11.0"
          }
        ],
        "kind": "scalar",
        "linter": "root = if this.schema.or([]).length() == 0 && this.schema_metadata.or(\"\") == \"\" { \"either a schema or schema_metadata must be specified\" }",
        "name": "",
        "type": "object"
      },
      "name": "parquet_encode",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.4.0"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"syslog_rfc5424\": true,\n  \"syslog_rfc3164\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "format",
            "options": [
              "syslog_rfc5424",
              "syslog_rfc3164"
            ],
            "type": "string"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "best_effort",
            "type": "bool"
          },
          {
            "default": true,
            "is_advanced": true,
            "kind": "scalar",
            "name": "allow_rfc3339",
            "type": "bool"
          },
          {
            "default": "current",
            "is_advanced": true,
            "kind": "scalar",
            "name": "default_year",
            "type": "string"
          },
          {
            "default": "UTC",
            "is_advanced": true,
            "kind": "scalar",
            "name": "default_timezone",
            "type": "string"
          },
          {
            "is_deprecated": true,
            "kind": "scalar",
            "name": "codec",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "parse_log",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "default": [],
        "kind": "array",
        "name": "",
        "type": "processor"
      },
      "name": "processors",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"to_json\": true,\n  \"from_json\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operator",
            "options": [
              "to_json",
              "from_json"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "message",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "discard_unknown",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "use_proto_names",
            "type": "bool"
          },
          {
            "default": [],
            "kind": "array",
            "name": "import_paths",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "use_enum_numbers",
            "type": "bool"
          },
          {
            "children": [
              {
                "kind": "scalar",
                "name": "module",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "url",
                "type": "string"
              },
              {
                "default": "",
                "is_secret": true,
                "kind": "scalar",
                "name": "api_key",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "version",
                "type": "string"
              }
            ],
            "default": [],
            "kind": "array",
            "name": "bsr",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "linter": "\nroot = match {\nthis.import_paths.type() == \"unknown\" && this.bsr.length() == 0 => [ \"at least one of `import_paths`and `bsr` must be set\" ],\nthis.import_paths.type() == \"array\" && this.import_paths.length() > 0 && this.bsr.length() > 0 => [ \"both `import_paths` and `bsr` can't be set simultaneously\" ],\n}",
        "name": "",
        "type": "object"
      },
      "name": "protobuf",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "grpc_host",
            "type": "string"
          },
          {
            "default": "",
            "is_secret": true,
            "kind": "scalar",
            "name": "api_token",
            "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "collection_name",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "vector_mapping",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "filter",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "payload_fields",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "exclude",
                ""
              ],
              [
                "include",
                ""
              ]
            ],
            "default": "include",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"exclude\": true,\n  \"include\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "payload_filter",
            "type": "string"
          },
          {
            "default": 10,
            "kind": "scalar",
            "name": "limit",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "qdrant",
      "plugin": true,
      "status": "experimental",
      "type": "processor"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "resource",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "rate_limit",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "command",
            "type": "string",
            "version": "4.3.0"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string",
            "version": "4.3.0"
          },
          {
            "annotated_options": [
              [
                "incrby",
                ""
              ],
              [
                "keys",
                ""
              ],
              [
                "sadd",
                ""
              ],
              [
                "scard",
                ""
              ]
            ],
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"incrby\": true,\n  \"keys\": true,\n  \"sadd\": true,\n  \"scard\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operator",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_deprecated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "key",
            "type": "string"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "int"
          },
          {
            "default": "500ms",
            "is_advanced": true,
            "kind": "scalar",
            "name": "retry_period",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n  this.exists(\"operator\") == this.exists(\"command\") => [ \"one of 'operator' (old style) or 'command' (new style) fields must be specified\" ]\n  this.exists(\"args_mapping\") && this.exists(\"operator\") => [ \"field args_mapping is invalid with an operator set\" ],\n}",
        "name": "",
        "type": "object"
      },
      "name": "redis",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "kind": "scalar",
            "name": "script",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "keys_mapping",
            "type": "string"
          },
          {
            "default": 3,
            "is_advanced": true,
            "kind": "scalar",
            "name": "retries",
            "type": "int"
          },
          {
            "default": "500ms",
            "is_advanced": true,
            "kind": "scalar",
            "name": "retry_period",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis_script",
      "plugin": true,
      "status": "beta",
      "type": "processor",
      "version": "4.11.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "module_path",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "input_key",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "output_key",
            "type": "string"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "input_headers",
            "type": "object"
          },
          {
            "children": [
              {
                "default": [],
                "kind": "array",
                "name": "include_prefixes",
                "type": "string"
              },
              {
                "default": [],
                "kind": "array",
                "name": "include_patterns",
                "type": "string"
              }
            ],
            "is_optional": true,
            "kind": "scalar",
            "name": "output_metadata",
            "type": "object"
          },
          {
            "interpolated": true,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "timestamp",
            "type": "string"
          },
          {
            "default": "10s",
            "is_advanced": true,
            "kind": "scalar",
            "name": "timeout",
            "type": "string"
          },
          {
            "default": 1600,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_memory_pages",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redpanda_data_transform",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.31.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": "",
        "kind": "scalar",
        "name": "",
        "type": "string"
      },
      "name": "resource",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "children": [
          {
            "children": [
              {
                "default": "500ms",
                "kind": "scalar",
                "name": "initial_interval",
                "type": "string"
              },
              {
                "default": "10s",
                "kind": "scalar",
                "name": "max_interval",
                "type": "string"
              },
              {
                "default": "1m",
                "kind": "scalar",
                "name": "max_elapsed_time",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "backoff",
            "type": "object"
          },
          {
            "kind": "array",
            "name": "processors",
            "type": "processor"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "parallel",
            "type": "bool"
          },
          {
            "default": 0,
            "kind": "scalar",
            "name": "max_retries",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "retry",
      "plugin": true,
      "status": "beta",
      "type": "processor",
      "version": "4.27.0"
    },
    {
      "categories": [
        "Parsing",
        "Integration"
      ],
      "config": {
        "children": [
          {
            "default": false,
            "is_advanced": true,
            "is_deprecated": true,
            "kind": "scalar",
            "name": "avro_raw_json",
            "type": "bool"
          },
          {
            "children": [
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "raw_unions",
                "type": "bool"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "preserve_logical_types",
                "type": "bool"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "translate_kafka_connect_types",
                "type": "bool"
              },
              {
                "bloblang": true,
                "is_advanced": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "mapping",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "store_schema_metadata",
                "type": "string"
              }
            ],
            "kind": "scalar",
            "name": "avro",
            "type": "object"
          },
          {
            "children": [
              {
                "default": false,
                "kind": "scalar",
                "name": "use_proto_names",
                "type": "bool"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "use_enum_numbers",
                "type": "bool"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "emit_unpopulated",
                "type": "bool"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "emit_default_values",
                "type": "bool"
              }
            ],
            "kind": "scalar",
            "name": "protobuf",
            "type": "object"
          },
          {
            "default": "10m",
            "kind": "scalar",
            "name": "cache_duration",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "default_schema_id",
            "type": "int"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "consumer_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "consumer_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "access_token_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth",
            "type": "object",
            "version": "4.7.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object",
            "version": "4.7.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "signing_method",
                "type": "string"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "claims",
                "type": "unknown"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "unknown"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "jwt",
            "type": "object",
            "version": "4.7.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "schema_registry_decode",
      "plugin": true,
      "status": "beta",
      "type": "processor"
    },
    {
      "categories": [
        "Parsing",
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "subject",
            "type": "string"
          },
          {
            "default": "10m",
            "kind": "scalar",
            "name": "refresh_period",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "avro_raw_json",
            "type": "bool",
            "version": "3.59.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "consumer_key",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "consumer_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "access_token",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "access_token_secret",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "oauth",
            "type": "object",
            "version": "4.7.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "username",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "password",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              }
            ],
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "basic_auth",
            "type": "object",
            "version": "4.7.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "private_key_file",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "signing_method",
                "type": "string"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "claims",
                "type": "unknown"
              },
              {
                "default": {},
                "is_advanced": true,
                "kind": "map",
                "name": "headers",
                "type": "unknown"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "jwt",
            "type": "object",
            "version": "4.7.0"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "schema_registry_encode",
      "plugin": true,
      "status": "beta",
      "type": "processor",
      "version": "3.58.0"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": [],
            "kind": "array",
            "name": "parts",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "select_parts",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "message",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "context",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "extras",
            "type": "string"
          },
          {
            "interpolated": true,
            "is_optional": true,
            "kind": "map",
            "name": "tags",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "environment",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "release",
            "type": "string"
          },
          {
            "default": "INFO",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"debug\": true,\n  \"info\": true,\n  \"warn\": true,\n  \"error\": true,\n  \"fatal\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "level",
            "options": [
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR",
              "FATAL"
            ],
            "type": "string"
          },
          {
            "default": "async",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"async\": true,\n  \"sync\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "transport_mode",
            "options": [
              "async",
              "sync"
            ],
            "type": "string"
          },
          {
            "default": "5s",
            "kind": "scalar",
            "name": "flush_timeout",
            "type": "string"
          },
          {
            "default": 1,
            "kind": "scalar",
            "linter": "root = if this < 0 || this > 1 { [\"sampling rate must be between 0.0 and 1.0\" ] }",
            "name": "sampling_rate",
            "type": "float"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sentry_capture",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.16.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\n        root = if !this.has_prefix(\"xoxb-\") { [ \"field must start with xoxb-\" ] }\n      ",
            "name": "bot_token",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "channel_id",
            "type": "string"
          },
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "thread_ts",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "slack_thread",
      "plugin": true,
      "status": "experimental",
      "type": "processor"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "interpolated": true,
            "kind": "scalar",
            "name": "duration",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sleep",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "default": 1,
            "kind": "scalar",
            "name": "size",
            "type": "int"
          },
          {
            "default": 0,
            "kind": "scalar",
            "name": "byte_size",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "split",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "data_source_name",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "unsafe_dynamic_query",
            "type": "bool"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "default": "none",
            "kind": "scalar",
            "name": "result_codec",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sql",
      "plugin": true,
      "status": "deprecated",
      "type": "processor",
      "version": "3.65.0"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "columns",
            "type": "string"
          },
          {
            "bloblang": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "suffix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "options",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "init_files",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "init_statement",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle_time",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_life_time",
            "type": "string"
          },
          {
            "default": 2,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_open",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sql_insert",
      "plugin": true,
      "status": "stable",
      "type": "processor",
      "version": "3.59.0"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "query",
            "type": "string"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "unsafe_dynamic_query",
            "type": "bool"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "exec_only",
            "type": "bool"
          },
          {
            "children": [
              {
                "kind": "scalar",
                "name": "query",
                "type": "string"
              },
              {
                "bloblang": true,
                "is_optional": true,
                "kind": "scalar",
                "name": "args_mapping",
                "type": "string"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "exec_only",
                "type": "bool"
              }
            ],
            "is_optional": true,
            "kind": "array",
            "name": "queries",
            "type": "object"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "init_files",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "init_statement",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle_time",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_life_time",
            "type": "string"
          },
          {
            "default": 2,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_open",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "linter": "root = match {\n        !this.exists(\"queries\") && !this.exists(\"query\") => [ \"either `query` or `queries` is required\" ],\n    }",
        "name": "",
        "type": "object"
      },
      "name": "sql_raw",
      "plugin": true,
      "status": "stable",
      "type": "processor",
      "version": "3.65.0"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"mysql\": true,\n  \"postgres\": true,\n  \"clickhouse\": true,\n  \"mssql\": true,\n  \"sqlite\": true,\n  \"oracle\": true,\n  \"snowflake\": true,\n  \"trino\": true,\n  \"gocosmos\": true,\n  \"spanner\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "driver",
            "options": [
              "mysql",
              "postgres",
              "clickhouse",
              "mssql",
              "sqlite",
              "oracle",
              "snowflake",
              "trino",
              "gocosmos",
              "spanner"
            ],
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "dsn",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "table",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "columns",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "where",
            "type": "string"
          },
          {
            "bloblang": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "args_mapping",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "prefix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "suffix",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "array",
            "name": "init_files",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "init_statement",
            "type": "string",
            "version": "4.10.0"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle_time",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_life_time",
            "type": "string"
          },
          {
            "default": 2,
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_idle",
            "type": "int"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "conn_max_open",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sql_select",
      "plugin": true,
      "status": "stable",
      "type": "processor",
      "version": "3.59.0"
    },
    {
      "categories": [
        "Integration"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "name",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "args",
            "type": "string"
          },
          {
            "default": 65536,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_buffer",
            "type": "int"
          },
          {
            "default": "lines",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"lines\": true,\n  \"length_prefixed_uint32_be\": true,\n  \"netstring\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "codec_send",
            "options": [
              "lines",
              "length_prefixed_uint32_be",
              "netstring"
            ],
            "type": "string",
            "version": "3.37.0"
          },
          {
            "default": "lines",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"lines\": true,\n  \"length_prefixed_uint32_be\": true,\n  \"netstring\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "codec_recv",
            "options": [
              "lines",
              "length_prefixed_uint32_be",
              "netstring"
            ],
            "type": "string",
            "version": "3.37.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "subprocess",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "children": [
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "check",
            "type": "string"
          },
          {
            "default": [],
            "kind": "array",
            "name": "processors",
            "type": "processor"
          },
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "fallthrough",
            "type": "bool"
          }
        ],
        "kind": "array",
        "name": "",
        "type": "object"
      },
      "name": "switch",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "sync_response",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "AI"
      ],
      "config": {
        "children": [
          {
            "annotated_options": [
              [
                "markdown",
                ""
              ],
              [
                "recursive_character",
                ""
              ],
              [
                "token",
                ""
              ]
            ],
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"markdown\": true,\n  \"recursive_character\": true,\n  \"token\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "strategy",
            "type": "string"
          },
          {
            "default": 512,
            "kind": "scalar",
            "name": "chunk_size",
            "type": "int"
          },
          {
            "default": 100,
            "kind": "scalar",
            "name": "chunk_overlap",
            "type": "int"
          },
          {
            "default": [
              "\n\n",
              "\n",
              " ",
              ""
            ],
            "kind": "array",
            "name": "separators",
            "type": "string"
          },
          {
            "annotated_options": [
              [
                "graphemes",
                ""
              ],
              [
                "runes",
                ""
              ],
              [
                "token",
                ""
              ],
              [
                "utf8",
                ""
              ]
            ],
            "default": "runes",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"graphemes\": true,\n  \"runes\": true,\n  \"token\": true,\n  \"utf8\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "length_measure",
            "type": "string"
          },
          {
            "is_advanced": true,
            "is_optional": true,
            "kind": "scalar",
            "name": "token_encoding",
            "type": "string"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "allowed_special",
            "type": "string"
          },
          {
            "default": [
              "all"
            ],
            "is_advanced": true,
            "kind": "array",
            "name": "disallowed_special",
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "include_code_blocks",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "keep_reference_links",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "text_chunker",
      "plugin": true,
      "status": "experimental",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "default": [],
        "kind": "array",
        "name": "",
        "type": "processor"
      },
      "name": "try",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Parsing",
        "Utility"
      ],
      "config": {
        "children": [
          {
            "annotated_options": [
              [
                "binary",
                ""
              ],
              [
                "csv",
                ""
              ],
              [
                "csv:x",
                ""
              ],
              [
                "json_array",
                ""
              ],
              [
                "json_documents",
                ""
              ],
              [
                "json_map",
                ""
              ],
              [
                "lines",
                ""
              ],
              [
                "tar",
                ""
              ],
              [
                "zip",
                ""
              ]
            ],
            "kind": "scalar",
            "name": "format",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "unarchive",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Utility"
      ],
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "module_path",
            "type": "string"
          },
          {
            "default": "process",
            "kind": "scalar",
            "name": "function",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "wasm",
      "plugin": true,
      "status": "experimental",
      "type": "processor",
      "version": "4.11.0"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "children": [
          {
            "default": false,
            "kind": "scalar",
            "name": "at_least_once",
            "type": "bool"
          },
          {
            "default": 0,
            "is_advanced": true,
            "kind": "scalar",
            "name": "max_loops",
            "type": "int"
          },
          {
            "bloblang": true,
            "default": "",
            "kind": "scalar",
            "name": "check",
            "type": "string"
          },
          {
            "kind": "array",
            "name": "processors",
            "type": "processor"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "while",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Composition"
      ],
      "config": {
        "children": [
          {
            "default": "meta.workflow",
            "kind": "scalar",
            "name": "meta_path",
            "type": "string"
          },
          {
            "default": [],
            "kind": "2darray",
            "name": "order",
            "type": "string"
          },
          {
            "default": [],
            "is_advanced": true,
            "kind": "array",
            "name": "branch_resources",
            "type": "string",
            "version": "3.38.0"
          },
          {
            "children": [
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "request_map",
                "type": "string"
              },
              {
                "kind": "array",
                "name": "processors",
                "type": "processor"
              },
              {
                "bloblang": true,
                "default": "",
                "kind": "scalar",
                "name": "result_map",
                "type": "string"
              }
            ],
            "default": {},
            "kind": "map",
            "name": "branches",
            "type": "object"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "workflow",
      "plugin": true,
      "status": "stable",
      "type": "processor"
    },
    {
      "categories": [
        "Parsing"
      ],
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"to_json\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "operator",
            "options": [
              "to_json"
            ],
            "type": "string"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "cast",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "xml",
      "plugin": true,
      "status": "beta",
      "type": "processor"
    }
  ],
  "rate-limits": [
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": 1000,
            "kind": "scalar",
            "name": "count",
            "type": "int"
          },
          {
            "default": "1s",
            "kind": "scalar",
            "name": "interval",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "local",
      "plugin": true,
      "status": "stable",
      "type": "rate_limit"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "url",
            "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
            "type": "string"
          },
          {
            "default": "simple",
            "is_advanced": true,
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"simple\": true,\n  \"cluster\": true,\n  \"failover\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "kind",
            "options": [
              "simple",
              "cluster",
              "failover"
            ],
            "type": "string"
          },
          {
            "default": "",
            "is_advanced": true,
            "kind": "scalar",
            "name": "master",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "skip_cert_verify",
                "type": "bool"
              },
              {
                "default": false,
                "is_advanced": true,
                "kind": "scalar",
                "name": "enable_renegotiation",
                "type": "bool",
                "version": "3.45.0"
              },
              {
                "default": "",
                "is_advanced": true,
                "is_secret": true,
                "kind": "scalar",
                "name": "root_cas",
                "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                "type": "string"
              },
              {
                "default": "",
                "is_advanced": true,
                "kind": "scalar",
                "name": "root_cas_file",
                "type": "string"
              },
              {
                "children": [
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "key",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "cert_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "kind": "scalar",
                    "name": "key_file",
                    "type": "string"
                  },
                  {
                    "default": "",
                    "is_advanced": true,
                    "is_secret": true,
                    "kind": "scalar",
                    "name": "password",
                    "scrubber": "root = if this != null && this != \"\" && !this.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n} else if this == null { \"\" }",
                    "type": "string"
                  }
                ],
                "default": [],
                "is_advanced": true,
                "kind": "array",
                "name": "client_certs",
                "type": "object"
              }
            ],
            "is_advanced": true,
            "kind": "scalar",
            "name": "tls",
            "type": "object"
          },
          {
            "default": 1000,
            "kind": "scalar",
            "linter": "root = if this <= 0 { [ \"count must be larger than zero\" ] }",
            "name": "count",
            "type": "int"
          },
          {
            "default": "1s",
            "kind": "scalar",
            "name": "interval",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "key",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "redis",
      "plugin": true,
      "status": "experimental",
      "type": "rate_limit",
      "version": "4.12.0"
    }
  ],
  "scanners": [
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": false,
            "is_advanced": true,
            "kind": "scalar",
            "name": "raw_json",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "avro",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "size",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "chunker",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "custom_delimiter",
            "type": "string"
          },
          {
            "default": true,
            "kind": "scalar",
            "name": "parse_header_row",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "lazy_quotes",
            "type": "bool"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "continue_on_error",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "csv",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "algorithm",
            "type": "string"
          },
          {
            "default": {
              "to_the_end": {}
            },
            "kind": "scalar",
            "name": "into",
            "type": "scanner"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "decompress",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "json_array",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "json_documents",
      "plugin": true,
      "status": "stable",
      "type": "scanner",
      "version": "4.27.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "custom_delimiter",
            "type": "string"
          },
          {
            "default": 65536,
            "kind": "scalar",
            "name": "max_buffer_size",
            "type": "int"
          },
          {
            "default": false,
            "kind": "scalar",
            "name": "omit_empty",
            "type": "bool"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "lines",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "pattern",
            "type": "string"
          },
          {
            "default": 65536,
            "kind": "scalar",
            "name": "max_buffer_size",
            "type": "int"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "re_match",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": {
              "to_the_end": {}
            },
            "kind": "scalar",
            "name": "into",
            "type": "scanner"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "skip_bom",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "re_match_name",
            "type": "string"
          },
          {
            "kind": "scalar",
            "name": "scanner",
            "type": "scanner"
          }
        ],
        "kind": "array",
        "name": "",
        "type": "object"
      },
      "name": "switch",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "tar",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "to_the_end",
      "plugin": true,
      "status": "stable",
      "type": "scanner"
    }
  ],
  "tracers": [
    {
      "categories": null,
      "config": {
        "children": [
          {
            "kind": "scalar",
            "name": "project",
            "type": "string"
          },
          {
            "default": 1,
            "kind": "scalar",
            "name": "sampling_ratio",
            "type": "float"
          },
          {
            "default": {},
            "is_advanced": true,
            "kind": "map",
            "name": "tags",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "flush_interval",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "gcp_cloudtrace",
      "plugin": true,
      "status": "experimental",
      "type": "tracer",
      "version": "4.2.0"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": "",
            "kind": "scalar",
            "name": "agent_address",
            "type": "string"
          },
          {
            "default": "",
            "kind": "scalar",
            "name": "collector_url",
            "type": "string",
            "version": "3.38.0"
          },
          {
            "annotated_options": [
              [
                "const",
                ""
              ]
            ],
            "default": "const",
            "kind": "scalar",
            "linter": "\nlet options = {\n  \"const\": true,\n}\n\nroot = if !$options.exists(this.string().lowercase()) {\n  {\"type\": 2, \"what\": \"value %v is not a valid option for this field\".format(this.string())}\n}\n",
            "name": "sampler_type",
            "type": "string"
          },
          {
            "default": 1,
            "is_advanced": true,
            "kind": "scalar",
            "name": "sampler_param",
            "type": "float"
          },
          {
            "default": {},
            "is_advanced": true,
            "kind": "map",
            "name": "tags",
            "type": "string"
          },
          {
            "is_optional": true,
            "kind": "scalar",
            "name": "flush_interval",
            "type": "string"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "jaeger",
      "plugin": true,
      "status": "stable",
      "type": "tracer"
    },
    {
      "categories": null,
      "config": {
        "default": {},
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "none",
      "plugin": true,
      "status": "stable",
      "type": "tracer"
    },
    {
      "categories": null,
      "config": {
        "children": [
          {
            "default": "benthos",
            "kind": "scalar",
            "name": "service",
            "type": "string"
          },
          {
            "children": [
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "address",
                "type": "string"
              },
              {
                "default": "localhost:4318",
                "is_deprecated": true,
                "kind": "scalar",
                "name": "url",
                "type": "string"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "secure",
                "type": "bool"
              }
            ],
            "kind": "array",
            "name": "http",
            "type": "object"
          },
          {
            "children": [
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "address",
                "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                "type": "string"
              },
              {
                "default": "localhost:4317",
                "is_deprecated": true,
                "kind": "scalar",
                "name": "url",
                "scrubber": "\nlet pass = this.parse_url().user.password.or(\"\")\nroot = if $pass != \"\" && !$pass.trim().re_match(\"\"\"^\\${[0-9A-Za-z_.]+(:((\\${[^}]+})|[^}])*)?}$\"\"\") {\n  \"!!!SECRET_SCRUBBED!!!\"\n}\n",
                "type": "string"
              },
              {
                "default": false,
                "kind": "scalar",
                "name": "secure",
                "type": "bool"
              }
            ],
            "kind": "array",
            "name": "grpc",
            "type": "object"
          },
          {
            "default": {},
            "is_advanced": true,
            "kind": "map",
            "name": "tags",
            "type": "string"
          },
          {
            "children": [
              {
                "default": false,
                "kind": "scalar",
                "name": "enabled",
                "type": "bool"
              },
              {
                "is_optional": true,
                "kind": "scalar",
                "name": "ratio",
                "type": "float"
              }
            ],
            "kind": "scalar",
            "name": "sampling",
            "type": "object",
            "version": "4.25.0"
          }
        ],
        "kind": "scalar",
        "name": "",
        "type": "object"
      },
      "name": "open_telemetry_collector",
      "plugin": true,
      "status": "experimental",
      "type": "tracer"
    }
  ],
  "version": "4.65.0"
}

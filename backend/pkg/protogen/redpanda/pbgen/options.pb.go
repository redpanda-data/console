// Copyright 2025 Redpanda Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: redpanda/pbgen/options.proto

package pbgen

import (
	reflect "reflect"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var file_redpanda_pbgen_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         51501,
		Name:          "redpanda.pbgen.cpp_namespace",
		Tag:           "bytes,51501,opt,name=cpp_namespace",
		Filename:      "redpanda/pbgen/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         51500,
		Name:          "redpanda.pbgen.ptr",
		Tag:           "varint,51500,opt,name=ptr",
		Filename:      "redpanda/pbgen/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         51501,
		Name:          "redpanda.pbgen.iobuf",
		Tag:           "varint,51501,opt,name=iobuf",
		Filename:      "redpanda/pbgen/options.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// A file option that customizes the namespace within that file.
	//
	// Example:
	//
	// ```proto
	// syntax "proto3";
	//
	// option (redpanda.pbgen.cpp_namespace) = "proto::bar";
	// ```
	//
	// optional string cpp_namespace = 51501;
	E_CppNamespace = &file_redpanda_pbgen_options_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// A field option that can only be applied to message subfields and
	// effects the code generation for Redpanda C++ protocol buffers.
	//
	// This value set to true puts the value behind a std::unique_ptr instead
	// of inline into the generated class. This is needed for recursive
	// structures that need the level of indirection.
	//
	// Example:
	//
	// ```proto
	//
	//	message Foo {
	//	  Bar bar = 1 [(redpanda.pbgen.ptr) = true];
	//	}
	//
	// ```
	//
	// optional bool ptr = 51500;
	E_Ptr = &file_redpanda_pbgen_options_proto_extTypes[1]
	// A field option that can only be applied to string fields and
	// effects the code generation for Redpanda C++ protocol buffers.
	//
	// This value set to true puts the value as an iobuf instead of a
	// ss::sstring. This should be used whenever it's possible a string can be
	// larger than 128KiB.
	//
	// Example:
	//
	// ```proto
	//
	//	message Foo {
	//	  string bar = 1 [(redpanda.pbgen.iobuf) = true];
	//	}
	//
	// ```
	//
	// optional bool iobuf = 51501;
	E_Iobuf = &file_redpanda_pbgen_options_proto_extTypes[2]
)

var File_redpanda_pbgen_options_proto protoreflect.FileDescriptor

var file_redpanda_pbgen_options_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2f, 0x70, 0x62, 0x67, 0x65, 0x6e,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x70, 0x62, 0x67, 0x65, 0x6e, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x3a, 0x43, 0x0a, 0x0d, 0x63, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xad, 0x92, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x3a, 0x31, 0x0a, 0x03, 0x70, 0x74, 0x72, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xac, 0x92, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x70, 0x74, 0x72, 0x3a, 0x35, 0x0a, 0x05, 0x69, 0x6f, 0x62, 0x75,
	0x66, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xad, 0x92, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6f, 0x62, 0x75, 0x66, 0x42,
	0xc1, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61,
	0x2e, 0x70, 0x62, 0x67, 0x65, 0x6e, 0x42, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2d, 0x64, 0x61, 0x74, 0x61,
	0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x65,
	0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2f, 0x70, 0x62, 0x67, 0x65, 0x6e, 0xa2, 0x02, 0x03, 0x52,
	0x50, 0x58, 0xaa, 0x02, 0x0e, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x50, 0x62,
	0x67, 0x65, 0x6e, 0xca, 0x02, 0x0e, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5c, 0x50,
	0x62, 0x67, 0x65, 0x6e, 0xe2, 0x02, 0x1a, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5c,
	0x50, 0x62, 0x67, 0x65, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0f, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x3a, 0x3a, 0x50, 0x62,
	0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_redpanda_pbgen_options_proto_goTypes = []any{
	(*descriptorpb.FileOptions)(nil),  // 0: google.protobuf.FileOptions
	(*descriptorpb.FieldOptions)(nil), // 1: google.protobuf.FieldOptions
}
var file_redpanda_pbgen_options_proto_depIdxs = []int32{
	0, // 0: redpanda.pbgen.cpp_namespace:extendee -> google.protobuf.FileOptions
	1, // 1: redpanda.pbgen.ptr:extendee -> google.protobuf.FieldOptions
	1, // 2: redpanda.pbgen.iobuf:extendee -> google.protobuf.FieldOptions
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	0, // [0:3] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_redpanda_pbgen_options_proto_init() }
func file_redpanda_pbgen_options_proto_init() {
	if File_redpanda_pbgen_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redpanda_pbgen_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_redpanda_pbgen_options_proto_goTypes,
		DependencyIndexes: file_redpanda_pbgen_options_proto_depIdxs,
		ExtensionInfos:    file_redpanda_pbgen_options_proto_extTypes,
	}.Build()
	File_redpanda_pbgen_options_proto = out.File
	file_redpanda_pbgen_options_proto_rawDesc = nil
	file_redpanda_pbgen_options_proto_goTypes = nil
	file_redpanda_pbgen_options_proto_depIdxs = nil
}

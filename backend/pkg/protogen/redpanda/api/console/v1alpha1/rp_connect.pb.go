// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: redpanda/api/console/v1alpha1/rp_connect.proto

package consolev1alpha1

import (
	reflect "reflect"
	sync "sync"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	_ "github.com/redpanda-data/console/backend/pkg/protogen/redpanda/api/auth/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetConnectPipelineRequest is the request to retrieve a pipeline by name.
type LintConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	YamlConfig    string                 `protobuf:"bytes,1,opt,name=yaml_config,json=yamlConfig,proto3" json:"yaml_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LintConfigRequest) Reset() {
	*x = LintConfigRequest{}
	mi := &file_redpanda_api_console_v1alpha1_rp_connect_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LintConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LintConfigRequest) ProtoMessage() {}

func (x *LintConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_console_v1alpha1_rp_connect_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LintConfigRequest.ProtoReflect.Descriptor instead.
func (*LintConfigRequest) Descriptor() ([]byte, []int) {
	return file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescGZIP(), []int{0}
}

func (x *LintConfigRequest) GetYamlConfig() string {
	if x != nil {
		return x.YamlConfig
	}
	return ""
}

type LintConfigResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Valid         bool                       `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Lints         []*LintConfigResponse_Lint `protobuf:"bytes,2,rep,name=lints,proto3" json:"lints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LintConfigResponse) Reset() {
	*x = LintConfigResponse{}
	mi := &file_redpanda_api_console_v1alpha1_rp_connect_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LintConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LintConfigResponse) ProtoMessage() {}

func (x *LintConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_console_v1alpha1_rp_connect_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LintConfigResponse.ProtoReflect.Descriptor instead.
func (*LintConfigResponse) Descriptor() ([]byte, []int) {
	return file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescGZIP(), []int{1}
}

func (x *LintConfigResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *LintConfigResponse) GetLints() []*LintConfigResponse_Lint {
	if x != nil {
		return x.Lints
	}
	return nil
}

type LintConfigResponse_Lint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Line          int32                  `protobuf:"varint,1,opt,name=line,proto3" json:"line,omitempty"`
	Column        int32                  `protobuf:"varint,2,opt,name=column,proto3" json:"column,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LintConfigResponse_Lint) Reset() {
	*x = LintConfigResponse_Lint{}
	mi := &file_redpanda_api_console_v1alpha1_rp_connect_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LintConfigResponse_Lint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LintConfigResponse_Lint) ProtoMessage() {}

func (x *LintConfigResponse_Lint) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_console_v1alpha1_rp_connect_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LintConfigResponse_Lint.ProtoReflect.Descriptor instead.
func (*LintConfigResponse_Lint) Descriptor() ([]byte, []int) {
	return file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescGZIP(), []int{1, 0}
}

func (x *LintConfigResponse_Lint) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *LintConfigResponse_Lint) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *LintConfigResponse_Lint) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_redpanda_api_console_v1alpha1_rp_connect_proto protoreflect.FileDescriptor

var file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x72, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1d, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a,
	0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x72, 0x65,
	0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x11, 0x4c, 0x69, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0b, 0x79,
	0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0b, 0xba, 0x48, 0x08, 0x72, 0x06, 0x10, 0x00, 0x18, 0x80, 0x80, 0x40, 0x52, 0x0a, 0x79,
	0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x4c, 0x69,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x4c, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x6c,
	0x69, 0x6e, 0x74, 0x73, 0x1a, 0x4a, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x32, 0x95, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x0a, 0x4c,
	0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x30, 0x2e, 0x72, 0x65, 0x64, 0x70,
	0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x72, 0x65,
	0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08,
	0x8a, 0xa6, 0x1d, 0x04, 0x08, 0x01, 0x10, 0x04, 0x42, 0xaf, 0x02, 0x0a, 0x21, 0x63, 0x6f, 0x6d,
	0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0e,
	0x52, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x63, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x64,
	0x70, 0x61, 0x6e, 0x64, 0x61, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x41, 0x43, 0xaa, 0x02, 0x1d, 0x52, 0x65,
	0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x1d, 0x52, 0x65,
	0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x43, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x29, 0x52, 0x65,
	0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x43, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x20, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e,
	0x64, 0x61, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
	0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescOnce sync.Once
	file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescData = file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDesc
)

func file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescGZIP() []byte {
	file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescOnce.Do(func() {
		file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescData = protoimpl.X.CompressGZIP(file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescData)
	})
	return file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDescData
}

var file_redpanda_api_console_v1alpha1_rp_connect_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_redpanda_api_console_v1alpha1_rp_connect_proto_goTypes = []any{
	(*LintConfigRequest)(nil),       // 0: redpanda.api.console.v1alpha1.LintConfigRequest
	(*LintConfigResponse)(nil),      // 1: redpanda.api.console.v1alpha1.LintConfigResponse
	(*LintConfigResponse_Lint)(nil), // 2: redpanda.api.console.v1alpha1.LintConfigResponse.Lint
}
var file_redpanda_api_console_v1alpha1_rp_connect_proto_depIdxs = []int32{
	2, // 0: redpanda.api.console.v1alpha1.LintConfigResponse.lints:type_name -> redpanda.api.console.v1alpha1.LintConfigResponse.Lint
	0, // 1: redpanda.api.console.v1alpha1.RedpandaConnectService.LintConfig:input_type -> redpanda.api.console.v1alpha1.LintConfigRequest
	1, // 2: redpanda.api.console.v1alpha1.RedpandaConnectService.LintConfig:output_type -> redpanda.api.console.v1alpha1.LintConfigResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_redpanda_api_console_v1alpha1_rp_connect_proto_init() }
func file_redpanda_api_console_v1alpha1_rp_connect_proto_init() {
	if File_redpanda_api_console_v1alpha1_rp_connect_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_redpanda_api_console_v1alpha1_rp_connect_proto_goTypes,
		DependencyIndexes: file_redpanda_api_console_v1alpha1_rp_connect_proto_depIdxs,
		MessageInfos:      file_redpanda_api_console_v1alpha1_rp_connect_proto_msgTypes,
	}.Build()
	File_redpanda_api_console_v1alpha1_rp_connect_proto = out.File
	file_redpanda_api_console_v1alpha1_rp_connect_proto_rawDesc = nil
	file_redpanda_api_console_v1alpha1_rp_connect_proto_goTypes = nil
	file_redpanda_api_console_v1alpha1_rp_connect_proto_depIdxs = nil
}

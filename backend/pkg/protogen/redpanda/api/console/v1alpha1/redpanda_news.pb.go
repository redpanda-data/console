// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: redpanda/api/console/v1alpha1/redpanda_news.proto

package consolev1alpha1

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RedpandaNewsItem represents a single news item from Redpanda
type RedpandaNewsItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                    // The title of the news item
	Link          string                 `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`                      // The URL link to the full news article
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`        // A brief description or summary of the news item
	PubDate       string                 `protobuf:"bytes,4,opt,name=pub_date,json=pubDate,proto3" json:"pub_date,omitempty"` // The publication date of the news item
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedpandaNewsItem) Reset() {
	*x = RedpandaNewsItem{}
	mi := &file_redpanda_api_console_v1alpha1_redpanda_news_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedpandaNewsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedpandaNewsItem) ProtoMessage() {}

func (x *RedpandaNewsItem) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_console_v1alpha1_redpanda_news_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedpandaNewsItem.ProtoReflect.Descriptor instead.
func (*RedpandaNewsItem) Descriptor() ([]byte, []int) {
	return file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescGZIP(), []int{0}
}

func (x *RedpandaNewsItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RedpandaNewsItem) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *RedpandaNewsItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RedpandaNewsItem) GetPubDate() string {
	if x != nil {
		return x.PubDate
	}
	return ""
}

// GetRedpandaNewsRequest is the request message for getting Redpanda news
type GetRedpandaNewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRedpandaNewsRequest) Reset() {
	*x = GetRedpandaNewsRequest{}
	mi := &file_redpanda_api_console_v1alpha1_redpanda_news_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRedpandaNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedpandaNewsRequest) ProtoMessage() {}

func (x *GetRedpandaNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_console_v1alpha1_redpanda_news_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedpandaNewsRequest.ProtoReflect.Descriptor instead.
func (*GetRedpandaNewsRequest) Descriptor() ([]byte, []int) {
	return file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescGZIP(), []int{1}
}

// GetRedpandaNewsResponse is the response message containing Redpanda news
type GetRedpandaNewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                // The title of the news feed
	LastUpdated   string                 `protobuf:"bytes,2,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // Timestamp of when the news was last updated
	NewsItems     []*RedpandaNewsItem    `protobuf:"bytes,3,rep,name=news_items,json=newsItems,proto3" json:"news_items,omitempty"`       // List of news items
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRedpandaNewsResponse) Reset() {
	*x = GetRedpandaNewsResponse{}
	mi := &file_redpanda_api_console_v1alpha1_redpanda_news_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRedpandaNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedpandaNewsResponse) ProtoMessage() {}

func (x *GetRedpandaNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_console_v1alpha1_redpanda_news_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedpandaNewsResponse.ProtoReflect.Descriptor instead.
func (*GetRedpandaNewsResponse) Descriptor() ([]byte, []int) {
	return file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescGZIP(), []int{2}
}

func (x *GetRedpandaNewsResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetRedpandaNewsResponse) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *GetRedpandaNewsResponse) GetNewsItems() []*RedpandaNewsItem {
	if x != nil {
		return x.NewsItems
	}
	return nil
}

var File_redpanda_api_console_v1alpha1_redpanda_news_proto protoreflect.FileDescriptor

var file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDesc = []byte{
	0x0a, 0x31, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5f, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x22, 0x79, 0x0a, 0x10, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x4e, 0x65,
	0x77, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x75, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x62, 0x44, 0x61, 0x74, 0x65, 0x22, 0x18, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x4e, 0x65, 0x77, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4e, 0x0a, 0x0a,
	0x6e, 0x65, 0x77, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x4e, 0x65, 0x77, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x32, 0x9a, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x4e, 0x65, 0x77, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x70,
	0x61, 0x6e, 0x64, 0x61, 0x4e, 0x65, 0x77, 0x73, 0x12, 0x35, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61,
	0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x70,
	0x61, 0x6e, 0x64, 0x61, 0x4e, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x4e, 0x65, 0x77, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xb2, 0x02, 0x0a, 0x21, 0x63, 0x6f,
	0x6d, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42,
	0x11, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x4e, 0x65, 0x77, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x63, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x65, 0x64, 0x70,
	0x61, 0x6e, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x65, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x41, 0x43, 0xaa,
	0x02, 0x1d, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca,
	0x02, 0x1d, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2,
	0x02, 0x29, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x20, 0x52, 0x65,
	0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescOnce sync.Once
	file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescData = file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDesc
)

func file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescGZIP() []byte {
	file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescOnce.Do(func() {
		file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescData = protoimpl.X.CompressGZIP(file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescData)
	})
	return file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDescData
}

var file_redpanda_api_console_v1alpha1_redpanda_news_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_redpanda_api_console_v1alpha1_redpanda_news_proto_goTypes = []any{
	(*RedpandaNewsItem)(nil),        // 0: redpanda.api.console.v1alpha1.RedpandaNewsItem
	(*GetRedpandaNewsRequest)(nil),  // 1: redpanda.api.console.v1alpha1.GetRedpandaNewsRequest
	(*GetRedpandaNewsResponse)(nil), // 2: redpanda.api.console.v1alpha1.GetRedpandaNewsResponse
}
var file_redpanda_api_console_v1alpha1_redpanda_news_proto_depIdxs = []int32{
	0, // 0: redpanda.api.console.v1alpha1.GetRedpandaNewsResponse.news_items:type_name -> redpanda.api.console.v1alpha1.RedpandaNewsItem
	1, // 1: redpanda.api.console.v1alpha1.RedpandaNewsService.GetRedpandaNews:input_type -> redpanda.api.console.v1alpha1.GetRedpandaNewsRequest
	2, // 2: redpanda.api.console.v1alpha1.RedpandaNewsService.GetRedpandaNews:output_type -> redpanda.api.console.v1alpha1.GetRedpandaNewsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_redpanda_api_console_v1alpha1_redpanda_news_proto_init() }
func file_redpanda_api_console_v1alpha1_redpanda_news_proto_init() {
	if File_redpanda_api_console_v1alpha1_redpanda_news_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_redpanda_api_console_v1alpha1_redpanda_news_proto_goTypes,
		DependencyIndexes: file_redpanda_api_console_v1alpha1_redpanda_news_proto_depIdxs,
		MessageInfos:      file_redpanda_api_console_v1alpha1_redpanda_news_proto_msgTypes,
	}.Build()
	File_redpanda_api_console_v1alpha1_redpanda_news_proto = out.File
	file_redpanda_api_console_v1alpha1_redpanda_news_proto_rawDesc = nil
	file_redpanda_api_console_v1alpha1_redpanda_news_proto_goTypes = nil
	file_redpanda_api_console_v1alpha1_redpanda_news_proto_depIdxs = nil
}

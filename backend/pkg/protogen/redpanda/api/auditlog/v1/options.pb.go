// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: redpanda/api/auditlog/v1/options.proto

package auditlogv1

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Field-level audit policy
type AuditPolicy int32

const (
	AuditPolicy_AUDIT_POLICY_UNSPECIFIED AuditPolicy = 0 // Defaults to STANDARD for opted-in messages
	AuditPolicy_AUDIT_POLICY_NEVER       AuditPolicy = 1 // Field excluded from audit logs
	AuditPolicy_AUDIT_POLICY_REDACTED    AuditPolicy = 2 // Field present but value redacted
	AuditPolicy_AUDIT_POLICY_STANDARD    AuditPolicy = 3 // Field logged as-is (default)
)

// Enum value maps for AuditPolicy.
var (
	AuditPolicy_name = map[int32]string{
		0: "AUDIT_POLICY_UNSPECIFIED",
		1: "AUDIT_POLICY_NEVER",
		2: "AUDIT_POLICY_REDACTED",
		3: "AUDIT_POLICY_STANDARD",
	}
	AuditPolicy_value = map[string]int32{
		"AUDIT_POLICY_UNSPECIFIED": 0,
		"AUDIT_POLICY_NEVER":       1,
		"AUDIT_POLICY_REDACTED":    2,
		"AUDIT_POLICY_STANDARD":    3,
	}
)

func (x AuditPolicy) Enum() *AuditPolicy {
	p := new(AuditPolicy)
	*p = x
	return p
}

func (x AuditPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_redpanda_api_auditlog_v1_options_proto_enumTypes[0].Descriptor()
}

func (AuditPolicy) Type() protoreflect.EnumType {
	return &file_redpanda_api_auditlog_v1_options_proto_enumTypes[0]
}

func (x AuditPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditPolicy.Descriptor instead.
func (AuditPolicy) EnumDescriptor() ([]byte, []int) {
	return file_redpanda_api_auditlog_v1_options_proto_rawDescGZIP(), []int{0}
}

// Service-level audit configuration message
type ServiceAuditConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceAuditConfig) Reset() {
	*x = ServiceAuditConfig{}
	mi := &file_redpanda_api_auditlog_v1_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAuditConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAuditConfig) ProtoMessage() {}

func (x *ServiceAuditConfig) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_auditlog_v1_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAuditConfig.ProtoReflect.Descriptor instead.
func (*ServiceAuditConfig) Descriptor() ([]byte, []int) {
	return file_redpanda_api_auditlog_v1_options_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceAuditConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// Method-level audit configuration message
type MethodAuditConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       *bool                  `protobuf:"varint,1,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MethodAuditConfig) Reset() {
	*x = MethodAuditConfig{}
	mi := &file_redpanda_api_auditlog_v1_options_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MethodAuditConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodAuditConfig) ProtoMessage() {}

func (x *MethodAuditConfig) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_api_auditlog_v1_options_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodAuditConfig.ProtoReflect.Descriptor instead.
func (*MethodAuditConfig) Descriptor() ([]byte, []int) {
	return file_redpanda_api_auditlog_v1_options_proto_rawDescGZIP(), []int{1}
}

func (x *MethodAuditConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

var file_redpanda_api_auditlog_v1_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         15451,
		Name:          "redpanda.api.auditlog.v1.sensitive",
		Tag:           "varint,15451,opt,name=sensitive",
		Filename:      "redpanda/api/auditlog/v1/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*ServiceAuditConfig)(nil),
		Field:         15452,
		Name:          "redpanda.api.auditlog.v1.service",
		Tag:           "bytes,15452,opt,name=service",
		Filename:      "redpanda/api/auditlog/v1/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*MethodAuditConfig)(nil),
		Field:         50004,
		Name:          "redpanda.api.auditlog.v1.method",
		Tag:           "bytes,50004,opt,name=method",
		Filename:      "redpanda/api/auditlog/v1/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*AuditPolicy)(nil),
		Field:         50005,
		Name:          "redpanda.api.auditlog.v1.audit_policy",
		Tag:           "varint,50005,opt,name=audit_policy,enum=redpanda.api.auditlog.v1.AuditPolicy",
		Filename:      "redpanda/api/auditlog/v1/options.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional bool sensitive = 15451;
	E_Sensitive = &file_redpanda_api_auditlog_v1_options_proto_extTypes[0]
	// optional redpanda.api.auditlog.v1.AuditPolicy audit_policy = 50005;
	E_AuditPolicy = &file_redpanda_api_auditlog_v1_options_proto_extTypes[3]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional redpanda.api.auditlog.v1.ServiceAuditConfig service = 15452;
	E_Service = &file_redpanda_api_auditlog_v1_options_proto_extTypes[1]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional redpanda.api.auditlog.v1.MethodAuditConfig method = 50004;
	E_Method = &file_redpanda_api_auditlog_v1_options_proto_extTypes[2]
)

var File_redpanda_api_auditlog_v1_options_proto protoreflect.FileDescriptor

var file_redpanda_api_auditlog_v1_options_proto_rawDesc = []byte{
	0x0a, 0x26, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e,
	0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x3e, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x2a, 0x79, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x50, 0x4f, 0x4c,
	0x49, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x5f, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x55, 0x44,
	0x49, 0x54, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x52, 0x45, 0x44, 0x41, 0x43, 0x54,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x10, 0x03, 0x3a,
	0x3c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdb, 0x78, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x3a, 0x68, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdc, 0x78, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x68, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xd4, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x72, 0x65, 0x64, 0x70,
	0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01,
	0x01, 0x3a, 0x69, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xd5, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61,
	0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x8c, 0x02, 0x0a,
	0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5b, 0x62,
	0x75, 0x66, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x72, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x52, 0x41, 0x41,
	0xaa, 0x02, 0x18, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x2e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x18, 0x52, 0x65,
	0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x6c, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x24, 0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64,
	0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1b,
	0x52, 0x65, 0x64, 0x70, 0x61, 0x6e, 0x64, 0x61, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_redpanda_api_auditlog_v1_options_proto_rawDescOnce sync.Once
	file_redpanda_api_auditlog_v1_options_proto_rawDescData = file_redpanda_api_auditlog_v1_options_proto_rawDesc
)

func file_redpanda_api_auditlog_v1_options_proto_rawDescGZIP() []byte {
	file_redpanda_api_auditlog_v1_options_proto_rawDescOnce.Do(func() {
		file_redpanda_api_auditlog_v1_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_redpanda_api_auditlog_v1_options_proto_rawDescData)
	})
	return file_redpanda_api_auditlog_v1_options_proto_rawDescData
}

var file_redpanda_api_auditlog_v1_options_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_redpanda_api_auditlog_v1_options_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_redpanda_api_auditlog_v1_options_proto_goTypes = []any{
	(AuditPolicy)(0),                    // 0: redpanda.api.auditlog.v1.AuditPolicy
	(*ServiceAuditConfig)(nil),          // 1: redpanda.api.auditlog.v1.ServiceAuditConfig
	(*MethodAuditConfig)(nil),           // 2: redpanda.api.auditlog.v1.MethodAuditConfig
	(*descriptorpb.FieldOptions)(nil),   // 3: google.protobuf.FieldOptions
	(*descriptorpb.ServiceOptions)(nil), // 4: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),  // 5: google.protobuf.MethodOptions
}
var file_redpanda_api_auditlog_v1_options_proto_depIdxs = []int32{
	3, // 0: redpanda.api.auditlog.v1.sensitive:extendee -> google.protobuf.FieldOptions
	4, // 1: redpanda.api.auditlog.v1.service:extendee -> google.protobuf.ServiceOptions
	5, // 2: redpanda.api.auditlog.v1.method:extendee -> google.protobuf.MethodOptions
	3, // 3: redpanda.api.auditlog.v1.audit_policy:extendee -> google.protobuf.FieldOptions
	1, // 4: redpanda.api.auditlog.v1.service:type_name -> redpanda.api.auditlog.v1.ServiceAuditConfig
	2, // 5: redpanda.api.auditlog.v1.method:type_name -> redpanda.api.auditlog.v1.MethodAuditConfig
	0, // 6: redpanda.api.auditlog.v1.audit_policy:type_name -> redpanda.api.auditlog.v1.AuditPolicy
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	4, // [4:7] is the sub-list for extension type_name
	0, // [0:4] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_redpanda_api_auditlog_v1_options_proto_init() }
func file_redpanda_api_auditlog_v1_options_proto_init() {
	if File_redpanda_api_auditlog_v1_options_proto != nil {
		return
	}
	file_redpanda_api_auditlog_v1_options_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redpanda_api_auditlog_v1_options_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_redpanda_api_auditlog_v1_options_proto_goTypes,
		DependencyIndexes: file_redpanda_api_auditlog_v1_options_proto_depIdxs,
		EnumInfos:         file_redpanda_api_auditlog_v1_options_proto_enumTypes,
		MessageInfos:      file_redpanda_api_auditlog_v1_options_proto_msgTypes,
		ExtensionInfos:    file_redpanda_api_auditlog_v1_options_proto_extTypes,
	}.Build()
	File_redpanda_api_auditlog_v1_options_proto = out.File
	file_redpanda_api_auditlog_v1_options_proto_rawDesc = nil
	file_redpanda_api_auditlog_v1_options_proto_goTypes = nil
	file_redpanda_api_auditlog_v1_options_proto_depIdxs = nil
}

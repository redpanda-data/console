// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: redpanda/api/dataplane/v1/quota.proto

package dataplanev1connect

import (
	context "context"
	errors "errors"
	http "net/http"
	strings "strings"

	connect "connectrpc.com/connect"

	v1 "github.com/redpanda-data/console/backend/pkg/protogen/redpanda/api/dataplane/v1"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// QuotaServiceName is the fully-qualified name of the QuotaService service.
	QuotaServiceName = "redpanda.api.dataplane.v1.QuotaService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// QuotaServiceListQuotasProcedure is the fully-qualified name of the QuotaService's ListQuotas RPC.
	QuotaServiceListQuotasProcedure = "/redpanda.api.dataplane.v1.QuotaService/ListQuotas"
	// QuotaServiceCreateQuotaProcedure is the fully-qualified name of the QuotaService's CreateQuota
	// RPC.
	QuotaServiceCreateQuotaProcedure = "/redpanda.api.dataplane.v1.QuotaService/CreateQuota"
	// QuotaServiceDeleteQuotaProcedure is the fully-qualified name of the QuotaService's DeleteQuota
	// RPC.
	QuotaServiceDeleteQuotaProcedure = "/redpanda.api.dataplane.v1.QuotaService/DeleteQuota"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	quotaServiceServiceDescriptor           = v1.File_redpanda_api_dataplane_v1_quota_proto.Services().ByName("QuotaService")
	quotaServiceListQuotasMethodDescriptor  = quotaServiceServiceDescriptor.Methods().ByName("ListQuotas")
	quotaServiceCreateQuotaMethodDescriptor = quotaServiceServiceDescriptor.Methods().ByName("CreateQuota")
	quotaServiceDeleteQuotaMethodDescriptor = quotaServiceServiceDescriptor.Methods().ByName("DeleteQuota")
)

// QuotaServiceClient is a client for the redpanda.api.dataplane.v1.QuotaService service.
type QuotaServiceClient interface {
	ListQuotas(context.Context, *connect.Request[v1.ListQuotasRequest]) (*connect.Response[v1.ListQuotasResponse], error)
	CreateQuota(context.Context, *connect.Request[v1.CreateQuotaRequest]) (*connect.Response[v1.CreateQuotaResponse], error)
	// Delete quota for a specific entity and value type.
	// If the value type is VALUE_TYPE_ANY, all values for the entity will be deleted
	// If the value type is VALUE_TYPE_UNSPECIFIED, the request will be rejected.
	DeleteQuota(context.Context, *connect.Request[v1.DeleteQuotaRequest]) (*connect.Response[v1.DeleteQuotaResponse], error)
}

// NewQuotaServiceClient constructs a client for the redpanda.api.dataplane.v1.QuotaService service.
// By default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped
// responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewQuotaServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) QuotaServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &quotaServiceClient{
		listQuotas: connect.NewClient[v1.ListQuotasRequest, v1.ListQuotasResponse](
			httpClient,
			baseURL+QuotaServiceListQuotasProcedure,
			connect.WithSchema(quotaServiceListQuotasMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		createQuota: connect.NewClient[v1.CreateQuotaRequest, v1.CreateQuotaResponse](
			httpClient,
			baseURL+QuotaServiceCreateQuotaProcedure,
			connect.WithSchema(quotaServiceCreateQuotaMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteQuota: connect.NewClient[v1.DeleteQuotaRequest, v1.DeleteQuotaResponse](
			httpClient,
			baseURL+QuotaServiceDeleteQuotaProcedure,
			connect.WithSchema(quotaServiceDeleteQuotaMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// quotaServiceClient implements QuotaServiceClient.
type quotaServiceClient struct {
	listQuotas  *connect.Client[v1.ListQuotasRequest, v1.ListQuotasResponse]
	createQuota *connect.Client[v1.CreateQuotaRequest, v1.CreateQuotaResponse]
	deleteQuota *connect.Client[v1.DeleteQuotaRequest, v1.DeleteQuotaResponse]
}

// ListQuotas calls redpanda.api.dataplane.v1.QuotaService.ListQuotas.
func (c *quotaServiceClient) ListQuotas(ctx context.Context, req *connect.Request[v1.ListQuotasRequest]) (*connect.Response[v1.ListQuotasResponse], error) {
	return c.listQuotas.CallUnary(ctx, req)
}

// CreateQuota calls redpanda.api.dataplane.v1.QuotaService.CreateQuota.
func (c *quotaServiceClient) CreateQuota(ctx context.Context, req *connect.Request[v1.CreateQuotaRequest]) (*connect.Response[v1.CreateQuotaResponse], error) {
	return c.createQuota.CallUnary(ctx, req)
}

// DeleteQuota calls redpanda.api.dataplane.v1.QuotaService.DeleteQuota.
func (c *quotaServiceClient) DeleteQuota(ctx context.Context, req *connect.Request[v1.DeleteQuotaRequest]) (*connect.Response[v1.DeleteQuotaResponse], error) {
	return c.deleteQuota.CallUnary(ctx, req)
}

// QuotaServiceHandler is an implementation of the redpanda.api.dataplane.v1.QuotaService service.
type QuotaServiceHandler interface {
	ListQuotas(context.Context, *connect.Request[v1.ListQuotasRequest]) (*connect.Response[v1.ListQuotasResponse], error)
	CreateQuota(context.Context, *connect.Request[v1.CreateQuotaRequest]) (*connect.Response[v1.CreateQuotaResponse], error)
	// Delete quota for a specific entity and value type.
	// If the value type is VALUE_TYPE_ANY, all values for the entity will be deleted
	// If the value type is VALUE_TYPE_UNSPECIFIED, the request will be rejected.
	DeleteQuota(context.Context, *connect.Request[v1.DeleteQuotaRequest]) (*connect.Response[v1.DeleteQuotaResponse], error)
}

// NewQuotaServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewQuotaServiceHandler(svc QuotaServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	quotaServiceListQuotasHandler := connect.NewUnaryHandler(
		QuotaServiceListQuotasProcedure,
		svc.ListQuotas,
		connect.WithSchema(quotaServiceListQuotasMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	quotaServiceCreateQuotaHandler := connect.NewUnaryHandler(
		QuotaServiceCreateQuotaProcedure,
		svc.CreateQuota,
		connect.WithSchema(quotaServiceCreateQuotaMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	quotaServiceDeleteQuotaHandler := connect.NewUnaryHandler(
		QuotaServiceDeleteQuotaProcedure,
		svc.DeleteQuota,
		connect.WithSchema(quotaServiceDeleteQuotaMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/redpanda.api.dataplane.v1.QuotaService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case QuotaServiceListQuotasProcedure:
			quotaServiceListQuotasHandler.ServeHTTP(w, r)
		case QuotaServiceCreateQuotaProcedure:
			quotaServiceCreateQuotaHandler.ServeHTTP(w, r)
		case QuotaServiceDeleteQuotaProcedure:
			quotaServiceDeleteQuotaHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedQuotaServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedQuotaServiceHandler struct{}

func (UnimplementedQuotaServiceHandler) ListQuotas(context.Context, *connect.Request[v1.ListQuotasRequest]) (*connect.Response[v1.ListQuotasResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("redpanda.api.dataplane.v1.QuotaService.ListQuotas is not implemented"))
}

func (UnimplementedQuotaServiceHandler) CreateQuota(context.Context, *connect.Request[v1.CreateQuotaRequest]) (*connect.Response[v1.CreateQuotaResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("redpanda.api.dataplane.v1.QuotaService.CreateQuota is not implemented"))
}

func (UnimplementedQuotaServiceHandler) DeleteQuota(context.Context, *connect.Request[v1.DeleteQuotaRequest]) (*connect.Response[v1.DeleteQuotaResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("redpanda.api.dataplane.v1.QuotaService.DeleteQuota is not implemented"))
}

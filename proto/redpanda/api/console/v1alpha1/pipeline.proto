syntax = "proto3";

package redpanda.api.console.v1alpha1;

import "redpanda/api/auth/v1/authorization.proto";
import "redpanda/api/dataplane/v1/pipeline.proto";

message CreatePipelineRequest {
  redpanda.api.dataplane.v1.CreatePipelineRequest request = 1;
}

message CreatePipelineResponse {
  redpanda.api.dataplane.v1.CreatePipelineResponse response = 1;
}

message GetPipelineRequest {
  redpanda.api.dataplane.v1.GetPipelineRequest request = 1;
}

message GetPipelineResponse {
  redpanda.api.dataplane.v1.GetPipelineResponse response = 1;
}

message DeletePipelineRequest {
  redpanda.api.dataplane.v1.DeletePipelineRequest request = 1;
}

message DeletePipelineResponse {
  redpanda.api.dataplane.v1.DeletePipelineResponse response = 1;
}

message ListPipelinesRequest {
  redpanda.api.dataplane.v1.ListPipelinesRequest request = 1;
}

message ListPipelinesResponse {
  redpanda.api.dataplane.v1.ListPipelinesResponse response = 1;
}

message UpdatePipelineRequest {
  redpanda.api.dataplane.v1.UpdatePipelineRequest request = 1;
}

message UpdatePipelineResponse {
  redpanda.api.dataplane.v1.UpdatePipelineResponse response = 1;
}

message StopPipelineRequest {
  redpanda.api.dataplane.v1.StopPipelineRequest request = 1;
}

message StopPipelineResponse {
  redpanda.api.dataplane.v1.StopPipelineResponse response = 1;
}

message StartPipelineRequest {
  redpanda.api.dataplane.v1.StartPipelineRequest request = 1;
}

message StartPipelineResponse {
  redpanda.api.dataplane.v1.StartPipelineResponse response = 1;
}

message GetPipelineServiceConfigSchemaRequest {
  redpanda.api.dataplane.v1.GetPipelineServiceConfigSchemaRequest request = 1;
}

message GetPipelineServiceConfigSchemaResponse {
  redpanda.api.dataplane.v1.GetPipelineServiceConfigSchemaResponse response = 1;
}

message GetPipelinesForSecretRequest {
  redpanda.api.dataplane.v1.GetPipelinesForSecretRequest request = 1;
}

message GetPipelinesForSecretResponse {
  redpanda.api.dataplane.v1.GetPipelinesForSecretResponse response = 1;
}

message GetPipelinesBySecretsRequest {
  redpanda.api.dataplane.v1.GetPipelinesBySecretsRequest request = 1;
}

message GetPipelinesBySecretsResponse {
  redpanda.api.dataplane.v1.GetPipelinesBySecretsResponse response = 1;
}

service PipelineService {
  rpc CreatePipeline(CreatePipelineRequest) returns (CreatePipelineResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_EDIT
      api: API_REDPANDA_CONNECT
    };
  }

  rpc GetPipeline(GetPipelineRequest) returns (GetPipelineResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_VIEW
      api: API_REDPANDA_CONNECT
    };
  }

  rpc DeletePipeline(DeletePipelineRequest) returns (DeletePipelineResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_EDIT
      api: API_REDPANDA_CONNECT
    };
  }

  rpc ListPipelines(ListPipelinesRequest) returns (ListPipelinesResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_VIEW
      api: API_REDPANDA_CONNECT
    };
  }

  rpc UpdatePipeline(UpdatePipelineRequest) returns (UpdatePipelineResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_EDIT
      api: API_REDPANDA_CONNECT
    };
  }

  rpc StopPipeline(StopPipelineRequest) returns (StopPipelineResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_EDIT
      api: API_REDPANDA_CONNECT
    };
  }

  rpc StartPipeline(StartPipelineRequest) returns (StartPipelineResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_EDIT
      api: API_REDPANDA_CONNECT
    };
  }

  rpc GetPipelineServiceConfigSchema(GetPipelineServiceConfigSchemaRequest) returns (GetPipelineServiceConfigSchemaResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_VIEW
      api: API_REDPANDA_CONNECT
    };
  }

  rpc GetPipelinesForSecret(GetPipelinesForSecretRequest) returns (GetPipelinesForSecretResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_VIEW
      api: API_REDPANDA_CONNECT
    };
  }

  rpc GetPipelinesBySecrets(GetPipelinesBySecretsRequest) returns (GetPipelinesBySecretsResponse) {
    option (redpanda.api.auth.v1.authorization) = {
      required_permission: PERMISSION_VIEW
      api: API_REDPANDA_CONNECT
    };
  }
}

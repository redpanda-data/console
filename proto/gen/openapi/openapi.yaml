components:
  schemas:
    ACL.Operation:
      description: The operation that is allowed or denied (e.g. READ).
      enum:
        - OPERATION_ANY
        - OPERATION_ALL
        - OPERATION_READ
        - OPERATION_WRITE
        - OPERATION_CREATE
        - OPERATION_DELETE
        - OPERATION_ALTER
        - OPERATION_DESCRIBE
        - OPERATION_CLUSTER_ACTION
        - OPERATION_DESCRIBE_CONFIGS
        - OPERATION_ALTER_CONFIGS
        - OPERATION_IDEMPOTENT_WRITE
        - OPERATION_CREATE_TOKENS
        - OPERATION_DESCRIBE_TOKENS
      type: string
    Action:
      enum:
        - ACTION_PREPARE
        - ACTION_EXECUTE
        - ACTION_FINISH
        - ACTION_CANCEL
      type: string
    BadRequest:
      description: |-
        Describes violations in a client request. This error type focuses on the
        syntactic aspects of the request.
      properties:
        field_violations:
          description: Describes all violations in a client request.
          items:
            $ref: '#/components/schemas/FieldViolation'
          type: array
      title: BadRequest
      type: object
    Config:
      properties:
        name:
          description: A topic-level config key (e.g. `segment.bytes`).
          type: string
        value:
          description: A topic-level config value (e.g. 1073741824).
          nullable: true
          type: string
      type: object
    ConfigAlterOperation:
      enum:
        - CONFIG_ALTER_OPERATION_SET
        - CONFIG_ALTER_OPERATION_DELETE
        - CONFIG_ALTER_OPERATION_APPEND
        - CONFIG_ALTER_OPERATION_SUBTRACT
      type: string
    ConfigSource:
      enum:
        - CONFIG_SOURCE_DYNAMIC_TOPIC_CONFIG
        - CONFIG_SOURCE_DYNAMIC_BROKER_CONFIG
        - CONFIG_SOURCE_DYNAMIC_DEFAULT_BROKER_CONFIG
        - CONFIG_SOURCE_STATIC_BROKER_CONFIG
        - CONFIG_SOURCE_DEFAULT_CONFIG
        - CONFIG_SOURCE_DYNAMIC_BROKER_LOGGER_CONFIG
      type: string
    ConfigSynonym:
      properties:
        name:
          type: string
        source:
          $ref: '#/components/schemas/ConfigSource'
        value:
          nullable: true
          type: string
      type: object
    ConfigType:
      enum:
        - CONFIG_TYPE_BOOLEAN
        - CONFIG_TYPE_STRING
        - CONFIG_TYPE_INT
        - CONFIG_TYPE_SHORT
        - CONFIG_TYPE_LONG
        - CONFIG_TYPE_DOUBLE
        - CONFIG_TYPE_LIST
        - CONFIG_TYPE_CLASS
        - CONFIG_TYPE_PASSWORD
      type: string
    Configuration:
      properties:
        config_synonyms:
          description: |-
            If no config value is set at the topic level, it will inherit the value
            set at the broker or cluster level. `name` is the corresponding config
            key whose value is inherited. `source` indicates whether the inherited
            config is default, broker, etc.
          items:
            $ref: '#/components/schemas/ConfigSynonym'
          type: array
        documentation:
          description: Config documentation.
          nullable: true
          type: string
        name:
          description: A topic-level config key (e.g. `segment.bytes`).
          type: string
        read_only:
          description: Whether the config is read-only, or is dynamic and can be altered.
          type: boolean
        sensitive:
          description: Whether this is a sensitive config key and value.
          type: boolean
        source:
          $ref: '#/components/schemas/ConfigSource'
        type:
          $ref: '#/components/schemas/ConfigType'
        value:
          description: A topic-level config value (e.g. 1073741824).
          nullable: true
          type: string
      type: object
    ConnectCluster:
      properties:
        address:
          description: The host address of the Kafka Connect cluster.
          type: string
        info:
          $ref: '#/components/schemas/ConnectCluster.Info'
        name:
          description: Unique name of connect cluster. For Redpanda Cloud, the value is `redpanda`.
          type: string
        plugins:
          items:
            $ref: '#/components/schemas/ConnectorPlugin'
          type: array
      type: object
    ConnectCluster.Info:
      properties:
        commit:
          description: The git commit ID of the connect worker source code.
          type: string
        kafka_cluster_id:
          description: Cluster ID.
          type: string
        version:
          description: Connect worker version.
          type: string
      type: object
    Connector:
      properties:
        state:
          description: State of the connector instance.
          type: string
        trace:
          description: String value of stack trace.
          type: string
        worker_id:
          description: ID of worker that the connector is assigned to.
          type: string
      type: object
    ConnectorError:
      properties:
        content:
          description: Detailed description of the error.
          type: string
        title:
          description: Short description of the error.
          type: string
        type:
          $ref: '#/components/schemas/ConnectorError.Type'
      title: |-
        ConnectorError is the error of a connector, this is holistic error
        abstraction, made parsing the error trace of connector or Task
      type: object
    ConnectorError.Type:
      description: Error level.
      enum:
        - TYPE_ERROR
        - TYPE_WARNING
      type: string
    ConnectorHolisticState:
      description: |-
        State of a connector or one of its tasks, as described in the [Kafka Connect documentation](https://kafka.apache.org/documentation.html#connect_administration). Takes into account not just the state of the connector instance itself, but also the tasks within the connector.

         - CONNECTOR_HOLISTIC_STATE_PAUSED: The connector or task has been administratively paused.
         - CONNECTOR_HOLISTIC_STATE_RESTARTING: The connector or task is restarting.
         - CONNECTOR_HOLISTIC_STATE_DESTROYED: The connector is destroyed, regardless of any tasks.
         - CONNECTOR_HOLISTIC_STATE_STOPPED: The connector or task has been stopped.
         - CONNECTOR_HOLISTIC_STATE_UNASSIGNED: - The connector or task has not yet been assigned to a worker,
        - THe connector is running, but there are unassigned tasks.
         - CONNECTOR_HOLISTIC_STATE_HEALTHY: The connector is running, > 0 tasks, all of them in running state.
         - CONNECTOR_HOLISTIC_STATE_UNHEALTHY: - The connector has failed,
        - The connector is running, but has no tasks,
        - Connector is running and has tasks, but all tasks have failed.
         - CONNECTOR_HOLISTIC_STATE_DEGRADED: The connector is running and has tasks, and at least one task, but not all, have failed.
         - CONNECTOR_HOLISTIC_STATE_UNKNOWN: The connector or task state could not be determined.
      enum:
        - CONNECTOR_HOLISTIC_STATE_PAUSED
        - CONNECTOR_HOLISTIC_STATE_RESTARTING
        - CONNECTOR_HOLISTIC_STATE_DESTROYED
        - CONNECTOR_HOLISTIC_STATE_STOPPED
        - CONNECTOR_HOLISTIC_STATE_UNASSIGNED
        - CONNECTOR_HOLISTIC_STATE_HEALTHY
        - CONNECTOR_HOLISTIC_STATE_UNHEALTHY
        - CONNECTOR_HOLISTIC_STATE_DEGRADED
        - CONNECTOR_HOLISTIC_STATE_UNKNOWN
      type: string
    ConnectorInfoStatus:
      properties:
        info:
          $ref: '#/components/schemas/ConnectorSpec'
        name:
          description: Name of connector.
          type: string
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      type: object
    ConnectorPlugin:
      properties:
        class:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    ConnectorSpec:
      description: |-
        Connector specifications as defined in the Kafka Connect
        API. You may include this in the request body when creating a new connector.
      properties:
        config:
          additionalProperties:
            type: string
          description: Connector configuration properties.
          type: object
        name:
          description: Name of connector.
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/TaskInfo'
          readOnly: true
          type: array
        type:
          readOnly: true
          type: string
      required:
        - name
        - config
      type: object
    ConnectorStatus:
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        errors:
          description: List of parsed connectors' and tasks' errors.
          items:
            $ref: '#/components/schemas/ConnectorError'
          type: array
        holistic_state:
          $ref: '#/components/schemas/ConnectorHolisticState'
        name:
          description: Name of connector.
          type: string
        tasks:
          description: Status of connector tasks. For more information, see the [https://docs.redpanda.com/current/deploy/deployment-option/cloud/managed-connectors/monitor-connectors/#connector-tasks](Monitor Connectors) documentation.
          items:
            $ref: '#/components/schemas/TaskStatus'
          type: array
        type:
          description: Type of connector (sink or source).
          type: string
      type: object
    CreateACLRequest:
      properties:
        host:
          description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          type: string
        resource_name:
          description: |-
            The name of the resource this ACL targets.
            For requests with resource_type CLUSTER, this will default to "kafka-cluster".
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
        - resource_type
        - resource_pattern_type
        - principal
        - host
        - operation
        - permission_type
      type: object
    CreateACLResponse:
      type: object
    CreateConnectSecretBody:
      description: CreateConnectSecretRequest is the request of CreateConnectSecret.
      properties:
        labels:
          additionalProperties:
            type: string
          description: Secret labels.
          type: object
        name:
          description: Name of connector.
          type: string
        secret_data:
          description: The secret data. Must be Base64-encoded.
          format: byte
          type: string
      required:
        - name
        - secret_data
      type: object
    CreateConnectSecretResponse:
      description: CreateConnectSecretResponse is the response of CreateConnectSecret.
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      type: object
    CreateConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    CreatePipelineResponse:
      properties:
        pipeline:
          $ref: '#/components/schemas/Pipeline'
      type: object
    CreateSecretRequest:
      description: CreateSecretRequest is the request of CreateSecret.
      properties:
        id:
          description: Secret identifier.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Secret labels.
          type: object
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          title: Secret scopes
          type: array
        secret_data:
          description: The secret data. Must be Base64-encoded.
          format: byte
          type: string
      required:
        - secret_data
      type: object
    CreateSecretResponse:
      description: CreateSecretResponse is the response of CreateSecret.
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      type: object
    CreateTopicRequest.Topic:
      properties:
        configs:
          description: |-
            An array of key-value config pairs for a topic.
            These correspond to Kafka topic-level configs.
          items:
            $ref: '#/components/schemas/Config'
          type: array
        name:
          description: Name of topic.
          type: string
        partition_count:
          description: |-
            The number of partitions to give the topic. If specifying
            partitions manually (see `replica_assignments`), set to -1.
            Or, to use the cluster default partition count, set to null.
          format: int32
          nullable: true
          type: integer
        replica_assignments:
          description: |-
            Manually specify broker ID assignments for partition replicas. If manually assigning replicas, both `replication_factor` and
            `partition_count` must be -1.
          items:
            $ref: '#/components/schemas/ReplicaAssignment'
          type: array
        replication_factor:
          description: |-
            The number of replicas every partition must have.
            If specifying partitions manually (see `replica_assignments`), set to -1.
            Or, to use the cluster default replication factor, set to null.
          format: int32
          nullable: true
          type: integer
      type: object
    CreateTopicResponse:
      properties:
        name:
          description: Name of topic.
          type: string
        partition_count:
          description: |-
            The number of partitions created for the topic.
            This field has a default value of -1, which may be returned if the broker
            does not support v5+ of this request which added support for returning
            this information.
          format: int32
          type: integer
        replication_factor:
          description: |-
            The number of replicas per topic partition.
            This field has a default of -1, which may be returned if the broker
            does not support v5+ of this request which added support for returning
            this information.
          format: int32
          type: integer
      type: object
    CreateUserRequest.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          description: Username.
          type: string
        password:
          description: Password.
          type: string
      type: object
    CreateUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/CreateUserResponse.User'
      type: object
    CreateUserResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          title: Name of newly-created user
          type: string
      type: object
    DeleteACLsRequest.Filter:
      properties:
        host:
          description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          nullable: true
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          nullable: true
          type: string
        resource_name:
          description: The name of the resource this ACL targets.
          nullable: true
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      required:
        - resource_type
        - resource_pattern_type
        - operation
        - permission_type
      type: object
    DeleteACLsResponse:
      properties:
        matching_acls:
          items:
            $ref: '#/components/schemas/MatchingACL'
          type: array
      type: object
    DeleteConnectSecretResponse:
      description: DeleteConnectSecretResponse is the response of DeleteConnectSecret.
      type: object
    DeleteMountTaskResponse:
      type: object
    DeletePipelineResponse:
      type: object
    DeleteSecretResponse:
      description: DeleteSecretResponse is the response of DeleteSecret.
      type: object
    DeleteTopicResponse:
      type: object
    DeleteTransformResponse:
      type: object
    DeleteUserResponse:
      type: object
    DeployTransformRequest:
      description: |-
        Metadata required to deploy a new Wasm
        transform in a Redpanda cluster.
      properties:
        environment_variables:
          description: The environment variables you want to apply to your transform's environment
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        input_topic_name:
          description: The input topic to apply the transform to.
          example: orders
          type: string
        name:
          description: Name of the transform.
          example: redact-payment-details-in-orders
          type: string
        output_topic_names:
          description: Output topic to write the transform results to.
          example: orders-redacted
          items:
            type: string
          type: array
      required:
        - name
        - input_topic_name
        - output_topic_names
      type: object
    EnvironmentVariable:
      properties:
        key:
          description: The key of your environment variable.
          example: LOG_LEVEL
          type: string
        value:
          description: The value of your environment variable.
          example: DEBUG
          type: string
      required:
        - key
        - value
      type: object
    ErrorInfo:
      description: |-
        Describes the cause of the error with structured details.

        Example of an error when contacting the "pubsub.googleapis.com" API when it
        is not enabled:

            { "reason": "API_DISABLED"
              "domain": "googleapis.com"
              "metadata": {
                "resource": "projects/123",
                "service": "pubsub.googleapis.com"
              }
            }

        This response indicates that the pubsub.googleapis.com API is not enabled.

        Example of an error that is returned when attempting to create a Spanner
        instance in a region that is out of stock:

            { "reason": "STOCKOUT"
              "domain": "spanner.googleapis.com",
              "metadata": {
                "availableRegions": "us-central1,us-east2"
              }
            }
      properties:
        domain:
          description: |-
            The logical grouping to which the "reason" belongs. The error domain
            is typically the registered service name of the tool or product that
            generates the error. Example: "pubsub.googleapis.com". If the error is
            generated by some common infrastructure, the error domain must be a
            globally unique value that identifies the infrastructure. For Google API
            infrastructure, the error domain is "googleapis.com".
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Additional structured details about this error.

            Keys should match /[a-zA-Z0-9-_]/ and be limited to 64 characters in
            length. When identifying the current value of an exceeded limit, the units
            should be contained in the key, not the value.  For example, rather than
            {"instanceLimit": "100/request"}, should be returned as,
            {"instanceLimitPerRequest": "100"}, if the client exceeds the number of
            instances that can be created in a single (batch) request.
          type: object
        reason:
          description: |-
            The reason of the error. This is a constant value that identifies the
            proximate cause of the error. Error reasons are unique within a particular
            domain of errors. This should be at most 63 characters and match a
            regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents
            UPPER_SNAKE_CASE.
          type: string
      title: ErrorInfo
      type: object
    FieldViolation:
      description: A message type used to describe a single bad request field.
      properties:
        description:
          description: A description of why the request element is bad.
          type: string
        field:
          description: |-
            A path that leads to a field in the request body. The value will be a
            sequence of dot-separated identifiers that identify a protocol buffer
            field.

            Consider the following:

                message CreateContactRequest {
                  message EmailAddress {
                    enum Type {
                      TYPE_UNSPECIFIED = 0;
                      HOME = 1;
                      WORK = 2;
                    }

                    optional string email = 1;
                    repeated EmailType type = 2;
                  }

                  string full_name = 1;
                  repeated EmailAddress email_addresses = 2;
                }

            In this example, in proto `field` could take one of the following values:

            * `full_name` for a violation in the `full_name` value
            * `email_addresses[1].email` for a violation in the `email` field of the
              first `email_addresses` message
            * `email_addresses[3].type[2]` for a violation in the second `type`
              value in the third `email_addresses` message.

            In JSON, the same values are represented as:

            * `fullName` for a violation in the `fullName` value
            * `emailAddresses[1].email` for a violation in the `email` field of the
              first `emailAddresses` message
            * `emailAddresses[3].type[2]` for a violation in the second `type`
              value in the third `emailAddresses` message.
          type: string
      type: object
    GetConnectClusterResponse:
      properties:
        cluster:
          $ref: '#/components/schemas/ConnectCluster'
      type: object
    GetConnectSecretResponse:
      description: GetConnectSecretResponse is the response of GetConnectSecret.
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      type: object
    GetConnectorConfigResponse:
      properties:
        config:
          additionalProperties:
            type: string
          type: object
      type: object
    GetConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    GetConnectorStatusResponse:
      properties:
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      type: object
    GetMountTaskResponse:
      properties:
        task:
          $ref: '#/components/schemas/MountTask'
      type: object
    GetPipelineResponse:
      properties:
        pipeline:
          $ref: '#/components/schemas/Pipeline'
      type: object
    GetPipelineServiceConfigSchemaResponse:
      properties:
        config_schema:
          description: JSON schema of the configuration components that are allowed for Connect pipelines.
          type: string
      type: object
    GetPipelinesBySecretsResponse:
      properties:
        pipelines_for_secret:
          items:
            $ref: '#/components/schemas/PipelinesForSecret'
          type: array
      type: object
    GetPipelinesForSecretResponse:
      properties:
        pipelines_for_secret:
          $ref: '#/components/schemas/PipelinesForSecret'
      type: object
    GetSecretResponse:
      description: GetSecretResponse is the response of GetSecret.
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      type: object
    GetTopicConfigurationsResponse:
      properties:
        configurations:
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    GetTransformResponse:
      properties:
        transform:
          $ref: '#/components/schemas/TransformMetadata'
      type: object
    Help:
      description: |-
        Provides links to documentation or for performing an out of band action.

        For example, if a quota check failed with an error indicating the calling
        project hasn't enabled the accessed service, this can contain a URL pointing
        directly to the right place in the developer console to flip the bit.
      properties:
        links:
          description: URL(s) pointing to additional information on handling the current error.
          items:
            $ref: '#/components/schemas/Link'
          type: array
      title: Help
      type: object
    Link:
      description: Describes a URL link.
      properties:
        description:
          description: Describes what the link offers.
          type: string
        url:
          description: The URL of the link.
          type: string
      type: object
    ListACLsRequest.Filter:
      properties:
        host:
          description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          nullable: true
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          nullable: true
          type: string
        resource_name:
          description: The name of the resource this ACL targets.
          nullable: true
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    ListACLsResponse:
      properties:
        resources:
          items:
            $ref: '#/components/schemas/Resource'
          type: array
      type: object
    ListConnectClustersResponse:
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/ConnectCluster'
          type: array
      type: object
    ListConnectSecretsResponse:
      description: ListConnectSecretsResponse is the response of ListConnectSecrets.
      properties:
        next_page_token:
          description: Token to retrieve the next page.
          type: string
        secrets:
          description: Secrets retrieved.
          items:
            $ref: '#/components/schemas/Secret'
          type: array
      type: object
    ListConnectorTopicsResponse:
      properties:
        topics:
          description: Topic names.
          items:
            type: string
          type: array
      type: object
    ListConnectorsResponse:
      properties:
        connectors:
          description: List of connectors, where the parent key is the connector name.
          items:
            $ref: '#/components/schemas/ConnectorInfoStatus'
          type: array
        next_page_token:
          description: Page Token to fetch the next page. The value can be used as page_token in the next call to this endpoint.
          type: string
      type: object
    ListMountTasksResponse:
      properties:
        tasks:
          items:
            $ref: '#/components/schemas/MountTask'
          type: array
      type: object
    ListMountableTopicsResponse:
      properties:
        topics:
          items:
            $ref: '#/components/schemas/TopicLocation'
          type: array
      type: object
    ListPipelinesRequest.Filter:
      properties:
        name_contains:
          description: Substring match on pipeline name. Case-sensitive.
          type: string
      type: object
    ListPipelinesResponse:
      properties:
        next_page_token:
          type: string
        pipelines:
          items:
            $ref: '#/components/schemas/Pipeline'
          type: array
      type: object
    ListSecretScopesResponse:
      description: ListSecretScopesResponse is the response of ListSecretScopes.
      properties:
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          type: array
      type: object
    ListSecretsFilter:
      description: ListSecretsFilter are the filter options for listing secrets.
      properties:
        labels[string][string]:
          additionalProperties:
            type: string
          description: The secret labels to search for.
          type: object
        name_contains:
          description: Substring match on secret name. Case-sensitive.
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          title: Secret scopes to search for
          type: array
      type: object
    ListSecretsResponse:
      description: ListSecretsResponse is the response of ListSecrets.
      properties:
        next_page_token:
          description: Token to retrieve the next page.
          type: string
        secrets:
          description: Secrets retrieved.
          items:
            $ref: '#/components/schemas/Secret'
          type: array
      type: object
    ListTopicsRequest.Filter:
      properties:
        name_contains:
          description: Substring match on topic name. Case-sensitive.
          type: string
      type: object
    ListTopicsResponse:
      properties:
        next_page_token:
          type: string
        topics:
          items:
            $ref: '#/components/schemas/ListTopicsResponse.Topic'
          type: array
      type: object
    ListTopicsResponse.Topic:
      properties:
        internal:
          description: Whether topic is internal only.
          type: boolean
        name:
          description: Topic name.
          type: string
        partition_count:
          description: Topic partition count.
          format: int32
          type: integer
        replication_factor:
          description: Topic replication factor.
          format: int32
          type: integer
      type: object
    ListTransformsRequest.Filter:
      properties:
        name_contains:
          description: Substring match on transform name. Case-sensitive.
          type: string
      type: object
    ListTransformsResponse:
      properties:
        next_page_token:
          description: Token to retrieve the next page.
          type: string
        transforms:
          items:
            $ref: '#/components/schemas/TransformMetadata'
          type: array
      type: object
    ListUsersRequest.Filter:
      properties:
        name:
          description: Username.
          type: string
        name_contains:
          description: Substring match on username. Case-sensitive.
          type: string
      type: object
    ListUsersResponse:
      properties:
        next_page_token:
          description: Token to retrieve the next page.
          type: string
        users:
          items:
            $ref: '#/components/schemas/ListUsersResponse.User'
          type: array
      type: object
    ListUsersResponse.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          description: Username.
          type: string
      type: object
    MatchingACL:
      properties:
        error:
          $ref: '#/components/schemas/rpc.Status'
        host:
          description: The host address to use for this ACL.
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: The user for whom this ACL applies.
          type: string
        resource_name:
          description: The name of the resource this ACL targets.
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    MountTask:
      properties:
        id:
          description: Unique identifier for this mount task.
          format: int32
          type: integer
        state:
          $ref: '#/components/schemas/MountTask.State'
        topics:
          description: List of topics that are being mounted or unmounted.
          items:
            $ref: '#/components/schemas/MountTask.Topic'
          type: array
        type:
          $ref: '#/components/schemas/MountTask.Type'
      type: object
    MountTask.State:
      description: |2-
         - STATE_PLANNED: Planned: The mount task has been created and is awaiting further actions.
         - STATE_PREPARING: Preparing: The mount task is gathering resources and preparing for execution.
         - STATE_PREPARED: Prepared: All preparations are complete, and the mount task is ready to be executed.
         - STATE_EXECUTING: Executing: The mount task is actively transferring or transforming data.
         - STATE_EXECUTED: Executed: The core mount task actions are complete, but the mount task has not yet cut over or finalized.
         - STATE_CUT_OVER: Cut Over: The mount task has reached a critical point where ownership is transferred or final adjustments are made.
         - STATE_FINISHED: Finished: The mount task has been successfully completed, and no further actions are required.
         - STATE_CANCELING: Canceling: The mount task is in the process of being canceled, and rollback or cleanup actions may be in progress.
         - STATE_CANCELLED: Cancelled: The mount task has been fully canceled, and no further actions will be taken.
      enum:
        - STATE_PLANNED
        - STATE_PREPARING
        - STATE_PREPARED
        - STATE_EXECUTING
        - STATE_EXECUTED
        - STATE_CUT_OVER
        - STATE_FINISHED
        - STATE_CANCELING
        - STATE_CANCELLED
      type: string
    MountTask.Topic:
      properties:
        source_topic_reference:
          description: |-
            The topic reference in the object storage bucket.
            This field is only set for tasks of type MOUNT.
          type: string
        topic_reference:
          description: |-
            The topic reference within the current cluster, which may be either a simple topic name or a full reference
            in the form: cluster-uuid/topic-name/revision.
          type: string
      type: object
    MountTask.Type:
      description: |2-
         - TYPE_MOUNT: Mount represents the process of making topics available in a cluster by loading them from object storage.
         - TYPE_UNMOUNT: Unmount represents the process of offloading topics back to object storage.
      enum:
        - TYPE_MOUNT
        - TYPE_UNMOUNT
      type: string
    MountTopicsResponse:
      properties:
        mount_task_id:
          format: int32
          title: ID of mount
          type: integer
      type: object
    Options:
      properties:
        include_tasks:
          description: Restart connector's tasks.
          type: boolean
        only_failed:
          description: Restart only connectors that have failed.
          type: boolean
      type: object
    PartitionStatus:
      enum:
        - PARTITION_STATUS_RUNNING
        - PARTITION_STATUS_INACTIVE
        - PARTITION_STATUS_ERRORED
        - PARTITION_STATUS_UNKNOWN
      type: string
    PartitionTransformStatus:
      properties:
        broker_id:
          format: int32
          type: integer
        lag:
          format: int32
          type: integer
        partition_id:
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/PartitionStatus'
      type: object
    PermissionType:
      description: Whether the operation should be allowed or denied.
      enum:
        - PERMISSION_TYPE_ANY
        - PERMISSION_TYPE_DENY
        - PERMISSION_TYPE_ALLOW
      type: string
    Pipeline:
      description: Defines the pipeline resource.
      properties:
        config_yaml:
          description: The Repanda Connect pipeline configuration in YAML format. See the [Redpanda Connect Configuration](https://docs.redpanda.com/redpanda-cloud/develop/connect/configuration/about) documentation for more details.
          title: |-
            The pipeline configuration in YAML.
            See https://docs.redpanda.com/redpanda-connect/configuration/about/
          type: string
        description:
          description: Optional pipeline description.
          type: string
        display_name:
          description: User-friendly pipeline name.
          type: string
        id:
          description: Pipeline ID.
          type: string
        resources:
          $ref: '#/components/schemas/Resources'
        state:
          $ref: '#/components/schemas/Pipeline.State'
        status:
          $ref: '#/components/schemas/Pipeline.Status'
      required:
        - id
        - display_name
        - config_yaml
      type: object
    Pipeline.State:
      description: |-
        State of the pipeline.

         - STATE_STARTING: The pipeline is starting.
         - STATE_RUNNING: The pipeline is running.
         - STATE_STOPPING: The pipeline is in the process of stopping.
         - STATE_STOPPED: The pipeline is stopped and in paused state.
         - STATE_ERROR: The pipeline encountered an error. See [Error Handling](https://docs.redpanda.com/redpanda-cloud/develop/connect/configuration/error_handling/) for further guidance.
         - STATE_COMPLETED: The pipeline has completed the job successfully.
      enum:
        - STATE_STARTING
        - STATE_RUNNING
        - STATE_STOPPING
        - STATE_STOPPED
        - STATE_ERROR
        - STATE_COMPLETED
      type: string
    Pipeline.Status:
      description: Pipeline status may contain an error message.
      properties:
        error:
          type: string
      type: object
    PipelineCreate:
      description: PipelineCreate contains the details for the pipeline creation request.
      properties:
        config_yaml:
          description: The Repanda Connect pipeline configuration in YAML format. See the [Redpanda Connect Configuration](https://docs.redpanda.com/redpanda-cloud/develop/connect/configuration/about) documentation for more details.
          type: string
        description:
          description: Pipeline description.
          type: string
        display_name:
          description: User-friendly pipeline name.
          type: string
        resources:
          $ref: '#/components/schemas/Resources'
      required:
        - display_name
        - config_yaml
      type: object
    PipelineUpdate:
      properties:
        config_yaml:
          description: The Repanda Connect pipeline configuration in YAML format. See the [Redpanda Connect Configuration](https://docs.redpanda.com/redpanda-cloud/develop/connect/configuration/about) documentation for more details.
          type: string
        description:
          description: Pipeline description.
          type: string
        display_name:
          description: User-friendly pipeline name.
          type: string
        resources:
          $ref: '#/components/schemas/Resources'
      required:
        - display_name
        - config_yaml
      type: object
    PipelinesForSecret:
      properties:
        pipelines:
          items:
            $ref: '#/components/schemas/Pipeline'
          type: array
        secret_id:
          type: string
      type: object
    Policy:
      properties:
        host:
          description: The host address for this ACL.
          type: string
        operation:
          $ref: '#/components/schemas/ACL.Operation'
        permission_type:
          $ref: '#/components/schemas/PermissionType'
        principal:
          description: The user for whom this ACL applies.
          type: string
      type: object
    QuotaFailure:
      description: |-
        Describes how a quota check failed.

        For example if a daily limit was exceeded for the calling project,
        a service could respond with a QuotaFailure detail containing the project
        id and the description of the quota limit that was exceeded.  If the
        calling project hasn't enabled the service in the developer console, then
        a service could respond with the project id and set `service_disabled`
        to true.

        Also see RetryInfo and Help types for other details about handling a
        quota failure.
      properties:
        violations:
          description: Describes all quota violations.
          items:
            $ref: '#/components/schemas/QuotaFailure.Violation'
          type: array
      title: QuotaFailure
      type: object
    QuotaFailure.Violation:
      description: |-
        A message type used to describe a single quota violation.  For example, a
        daily quota or a custom quota that was exceeded.
      properties:
        description:
          description: |-
            A description of how the quota check failed. Clients can use this
            description to find more about the quota configuration in the service's
            public documentation, or find the relevant quota limit to adjust through
            developer console.

            For example: "Service disabled" or "Daily Limit for read operations
            exceeded".
          type: string
        subject:
          description: |-
            The subject on which the quota check failed.
            For example, "clientip:<ip address of client>" or "project:<Google
            developer project id>".
          type: string
      type: object
    ReplicaAssignment:
      properties:
        partition_id:
          description: A partition to create.
          format: int32
          type: integer
        replica_ids:
          description: The broker IDs the partition replicas are assigned to.
          items:
            format: int32
            type: integer
          type: array
      type: object
    Resource:
      properties:
        acls:
          items:
            $ref: '#/components/schemas/Policy'
          type: array
        resource_name:
          description: The name of the resource this ACL targets.
          type: string
        resource_pattern_type:
          $ref: '#/components/schemas/ResourcePatternType'
        resource_type:
          $ref: '#/components/schemas/ResourceType'
      type: object
    ResourcePatternType:
      description: |-
        The pattern to use for matching the specified resource_name
        (any, exact match, literal, or prefixed).
      enum:
        - RESOURCE_PATTERN_TYPE_ANY
        - RESOURCE_PATTERN_TYPE_MATCH
        - RESOURCE_PATTERN_TYPE_LITERAL
        - RESOURCE_PATTERN_TYPE_PREFIXED
      type: string
    ResourceType:
      description: |-
        The type of resource (topic, consumer group, etc.) this
        ACL targets.
      enum:
        - RESOURCE_TYPE_ANY
        - RESOURCE_TYPE_TOPIC
        - RESOURCE_TYPE_GROUP
        - RESOURCE_TYPE_CLUSTER
        - RESOURCE_TYPE_TRANSACTIONAL_ID
        - RESOURCE_TYPE_DELEGATION_TOKEN
        - RESOURCE_TYPE_USER
      type: string
    Resources:
      properties:
        cpu_shares:
          description: |-
            `cpu_shares` is a string specifying the amount of CPU to allocate for the
            pipeline.

            This follows the [Kubernetes quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/) format. Acceptable
            units include:
            - Decimal SI units: "m" (e.g., "500m" for 500 millicores, "2" for 2 cores)
            CPU shares can be specified in millicores (1 core = 1000 millicores).
            If you don't specify a unit, the value is interpreted as the number of cores.
          type: string
        memory_shares:
          description: |-
            `memory_shares` is a string specifying the amount of memory to allocate for
            the pipeline.

            This follows the [Kubernetes quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/) format. Acceptable units
            include:
            - Decimal SI units: "K", "M", "G", "T", "P", "E" (e.g., "128M" for 128
              megabytes)
            - Binary SI units: "Ki", "Mi", "Gi", "Ti", "Pi", "Ei" (e.g., "512Mi" for
            512 mebibytes) If you don't specify a unit, the value is interpreted as
            bytes.
          type: string
      required:
        - memory_shares
        - cpu_shares
      type: object
    SASLMechanism:
      description: SASL mechanism to use for authentication.
      enum:
        - SASL_MECHANISM_SCRAM_SHA_256
        - SASL_MECHANISM_SCRAM_SHA_512
      type: string
    Scope:
      description: Defines the scope of a secret.
      enum:
        - SCOPE_REDPANDA_CONNECT
      type: string
    Secret:
      description: Defines the secret resource.
      properties:
        id:
          description: Secret identifier.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Secret labels.
          type: object
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          title: Secret scopes
          type: array
      type: object
    SetConfiguration:
      properties:
        name:
          description: A topic-level config key (e.g. `segment.bytes`).
          type: string
        value:
          description: A topic-level config value (e.g. 1073741824).
          nullable: true
          type: string
      type: object
    SetTopicConfigurationsResponse:
      properties:
        configurations:
          description: Topic's complete set of configurations after this update.
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    StartPipelineResponse:
      properties:
        pipeline:
          $ref: '#/components/schemas/Pipeline'
      type: object
    StopPipelineResponse:
      properties:
        pipeline:
          $ref: '#/components/schemas/Pipeline'
      type: object
    TaskInfo:
      properties:
        connector:
          description: Name of connector.
          type: string
        task:
          description: The connector task ID.
          format: int32
          type: integer
      type: object
    TaskStatus:
      properties:
        id:
          description: The connector task ID.
          format: int32
          type: integer
        state:
          description: State of connector task.
          type: string
        trace:
          description: String value of stack trace.
          type: string
        worker_id:
          description: ID of worker that the task is assigned to.
          type: string
      type: object
    TopicLocation:
      properties:
        name:
          description: Topic name.
          type: string
        topic_location:
          description: |-
            Full reference for the unmounted topic in this format: `topic-name/cluster-uuid/revision`.
            Use this as unique identifier for mounting a topic if there are multiple topics available
            with the same name.
          type: string
      type: object
    TopicMount:
      description: |-
        TopicMount defines the migration of a topic from the cloud storage into this cluster,
        so that it becomes available via the Kafka API.
      properties:
        alias:
          description: |-
            Alias may be provided to mount the topic under a different name. Leave
            blank to re-use the source topic name. The alias does not persist if you
            unmount the topic again.
          type: string
        source_topic_reference:
          description: |-
            The topic name or full reference of the topic to mount. The full reference
            must be used in case the same topic exists more than once. This may be the case if
            the same topic has been unmounted multiple times. List all mountable topics to
            find the full reference (contains topic name, cluster uuid and revision).
          type: string
      required:
        - source_topic_reference
      type: object
    TransformMetadata:
      properties:
        environment_variables:
          description: The environment variables you want to apply to your transform's environment
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        input_topic_name:
          description: Input topic to apply the transform to.
          type: string
        name:
          description: Name of transform.
          type: string
        output_topic_names:
          description: Output topics to write the transform results to.
          items:
            type: string
          type: array
        statuses:
          items:
            $ref: '#/components/schemas/PartitionTransformStatus'
          type: array
      type: object
    UnmountTopicsResponse:
      properties:
        mount_task_id:
          format: int32
          title: ID of unmount
          type: integer
      type: object
    UpdateConfiguration:
      properties:
        name:
          description: A topic-level config key (e.g. `segment.bytes`).
          type: string
        operation:
          $ref: '#/components/schemas/ConfigAlterOperation'
        value:
          description: A topic-level config value (e.g. 1073741824).
          nullable: true
          type: string
      type: object
    UpdateConnectSecretBody:
      description: UpdateConnectSecretRequest is the request of UpdateConnectSecret.
      properties:
        labels:
          additionalProperties:
            type: string
          description: Secret labels.
          type: object
        secret_data:
          description: The secret data. Must be Base64-encoded.
          format: byte
          type: string
      required:
        - secret_data
      type: object
    UpdateConnectSecretResponse:
      description: UpdateConnectSecretResponse is the response of UpdateConnectSecret.
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      type: object
    UpdateMountTaskBody:
      properties:
        action:
          $ref: '#/components/schemas/Action'
      required:
        - action
      type: object
    UpdateMountTaskResponse:
      type: object
    UpdatePipelineResponse:
      properties:
        pipeline:
          $ref: '#/components/schemas/Pipeline'
      type: object
    UpdateSecretBody:
      description: UpdateSecretRequest is the request of UpdateSecret.
      properties:
        labels:
          additionalProperties:
            type: string
          description: Secret labels.
          type: object
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          title: Secret scopes
          type: array
        secret_data:
          description: The secret data. Must be Base64-encoded.
          format: byte
          type: string
      required:
        - secret_data
      type: object
    UpdateSecretResponse:
      description: UpdateSecretResponse is the response of UpdateSecret.
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
      type: object
    UpdateTopicConfigurationsResponse:
      properties:
        configurations:
          description: Topic's complete set of configurations after applying this partial patch.
          items:
            $ref: '#/components/schemas/Configuration'
          type: array
      type: object
    UpdateUserRequest.User:
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          description: Username.
          type: string
        password:
          description: Password.
          type: string
      type: object
    UpdateUserResponse:
      properties:
        user:
          $ref: '#/components/schemas/UpdateUserResponse.User'
      type: object
    UpdateUserResponse.User:
      description: Updated user's name and SASL mechanism.
      properties:
        mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        name:
          type: string
      type: object
    UpsertConnectorResponse:
      properties:
        connector:
          $ref: '#/components/schemas/ConnectorSpec'
      type: object
    rpc.Status:
      description: |-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It is
        used by [gRPC](https://github.com/grpc). Each `Status` message contains
        three pieces of data: error code, error message, and error details.

        You can find out more about this error model and how to work with it in the
        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: RPC status code, as described [here](https://github.com/googleapis/googleapis/blob/b4c238feaa1097c53798ed77035bbfeb7fc72e96/google/rpc/code.proto#L32).
          enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
          format: int32
          type: string
        details:
          items:
            description: Details of the error.
            oneOf:
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.BadRequest
                        type: string
                  - $ref: '#/components/schemas/BadRequest'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.ErrorInfo
                        type: string
                  - $ref: '#/components/schemas/ErrorInfo'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.QuotaFailure
                        type: string
                  - $ref: '#/components/schemas/QuotaFailure'
              - allOf:
                  - properties:
                      '@type':
                        description: Fully qualified protobuf type name of the underlying response, prefixed with `type.googleapis.com/`.
                        enum:
                          - type.googleapis.com/google.rpc.Help
                        type: string
                  - $ref: '#/components/schemas/Help'
          type: array
        message:
          description: Detailed error message. No compatibility guarantees are given for the text contained in this message.
          type: string
      type: object
  securitySchemes:
    auth0:
      description: RedpandaCloud
      flows:
        implicit:
          authorizationUrl: https://prod-cloudv2.us.auth0.com/oauth/authorize
          scopes: {}
          x-client-id: dQjapNIAHhF7EQqQToRla3yEII9sUSap
      type: oauth2
info:
  title: Redpanda Cloud Data Plane API
  version: v1alpha2
openapi: 3.0.3
paths:
  /v1alpha2/acls:
    delete:
      description: Delete all ACLs that match the filter criteria. The `filter.` query string parameters find matching ACLs that meet all specified conditions.
      operationId: ACLService_DeleteACLs
      parameters:
        - description: |-
            The type of resource (topic, consumer group, etc.) this
            ACL targets.
          in: query
          name: filter.resource_type
          required: true
          schema:
            enum:
              - RESOURCE_TYPE_ANY
              - RESOURCE_TYPE_TOPIC
              - RESOURCE_TYPE_GROUP
              - RESOURCE_TYPE_CLUSTER
              - RESOURCE_TYPE_TRANSACTIONAL_ID
              - RESOURCE_TYPE_DELEGATION_TOKEN
              - RESOURCE_TYPE_USER
            type: string
        - description: The name of the resource this ACL targets.
          in: query
          name: filter.resource_name
          schema:
            type: string
        - description: |-
            The pattern to use for matching the specified resource_name
            (any, exact match, literal, or prefixed).
          in: query
          name: filter.resource_pattern_type
          required: true
          schema:
            enum:
              - RESOURCE_PATTERN_TYPE_ANY
              - RESOURCE_PATTERN_TYPE_MATCH
              - RESOURCE_PATTERN_TYPE_LITERAL
              - RESOURCE_PATTERN_TYPE_PREFIXED
            type: string
        - description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          in: query
          name: filter.principal
          schema:
            type: string
        - description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          in: query
          name: filter.host
          schema:
            type: string
        - description: The operation that is allowed or denied (e.g. READ).
          in: query
          name: filter.operation
          required: true
          schema:
            enum:
              - OPERATION_ANY
              - OPERATION_ALL
              - OPERATION_READ
              - OPERATION_WRITE
              - OPERATION_CREATE
              - OPERATION_DELETE
              - OPERATION_ALTER
              - OPERATION_DESCRIBE
              - OPERATION_CLUSTER_ACTION
              - OPERATION_DESCRIBE_CONFIGS
              - OPERATION_ALTER_CONFIGS
              - OPERATION_IDEMPOTENT_WRITE
              - OPERATION_CREATE_TOKENS
              - OPERATION_DESCRIBE_TOKENS
            type: string
        - description: Whether the operation should be allowed or denied.
          in: query
          name: filter.permission_type
          required: true
          schema:
            enum:
              - PERMISSION_TYPE_ANY
              - PERMISSION_TYPE_DENY
              - PERMISSION_TYPE_ALLOW
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteACLsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete ACLs
      tags:
        - Redpanda ACLs
    get:
      description: List all ACLs. The `filter.` query string parameters find matching ACLs that meet all specified conditions.
      operationId: ACLService_ListACLs
      parameters:
        - description: |-
            The type of resource (topic, consumer group, etc.) this
            ACL targets.
          in: query
          name: filter.resource_type
          schema:
            enum:
              - RESOURCE_TYPE_ANY
              - RESOURCE_TYPE_TOPIC
              - RESOURCE_TYPE_GROUP
              - RESOURCE_TYPE_CLUSTER
              - RESOURCE_TYPE_TRANSACTIONAL_ID
              - RESOURCE_TYPE_DELEGATION_TOKEN
              - RESOURCE_TYPE_USER
            type: string
        - description: The name of the resource this ACL targets.
          in: query
          name: filter.resource_name
          schema:
            type: string
        - description: |-
            The pattern to use for matching the specified resource_name
            (any, exact match, literal, or prefixed).
          in: query
          name: filter.resource_pattern_type
          schema:
            enum:
              - RESOURCE_PATTERN_TYPE_ANY
              - RESOURCE_PATTERN_TYPE_MATCH
              - RESOURCE_PATTERN_TYPE_LITERAL
              - RESOURCE_PATTERN_TYPE_PREFIXED
            type: string
        - description: |-
            The user for whom this ACL applies. With the Kafka simple
            authorizer, you must include the prefix "User:" with the user name.
          in: query
          name: filter.principal
          schema:
            type: string
        - description: |-
            The host address to use for this ACL. To allow a principal
            access from multiple hosts, you must create an ACL for each host.
          in: query
          name: filter.host
          schema:
            type: string
        - description: The operation that is allowed or denied (e.g. READ).
          in: query
          name: filter.operation
          schema:
            enum:
              - OPERATION_ANY
              - OPERATION_ALL
              - OPERATION_READ
              - OPERATION_WRITE
              - OPERATION_CREATE
              - OPERATION_DELETE
              - OPERATION_ALTER
              - OPERATION_DESCRIBE
              - OPERATION_CLUSTER_ACTION
              - OPERATION_DESCRIBE_CONFIGS
              - OPERATION_ALTER_CONFIGS
              - OPERATION_IDEMPOTENT_WRITE
              - OPERATION_CREATE_TOKENS
              - OPERATION_DESCRIBE_TOKENS
            type: string
        - description: Whether the operation should be allowed or denied.
          in: query
          name: filter.permission_type
          schema:
            enum:
              - PERMISSION_TYPE_ANY
              - PERMISSION_TYPE_DENY
              - PERMISSION_TYPE_ALLOW
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListACLsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List ACLs
      tags:
        - Redpanda ACLs
    post:
      description: Create a new ACL.
      operationId: ACLService_CreateACL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateACLRequest'
        required: true
        x-originalParamName: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateACLResponse'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Create ACL
      tags:
        - Redpanda ACLs
  /v1alpha2/cloud-storage/mount-tasks:
    get:
      description: This operation retrieves the status of a task responsible for mounting or unmounting topics. It provides details on the task’s type (mount or unmount), its current state, and the topics involved.
      operationId: CloudStorageService_ListMountTasks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMountTasksResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Retrieve the mount task status
      tags:
        - Cloud Storage
  /v1alpha2/cloud-storage/mount-tasks/{id}:
    delete:
      description: Delete a mount or unmount by ID.
      operationId: CloudStorageService_DeleteMountTask
      parameters:
        - description: Unique identifier of the mount or unmount task to delete.
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMountTaskResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete a mount or unmount
      tags:
        - Cloud Storage
    get:
      description: Retrieves the status of a mount or unmount by ID. The response provides details on the operation type (mount or unmount), its current state, and the topics involved. Use the ID returned when you start the mount or unmount, or use the ListMountTasks endpoint to retrieve a list of IDs.
      operationId: CloudStorageService_GetMountTask
      parameters:
        - description: Unique identifier of the mount or unmount task to retrieve.
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMountTaskResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get the status of a mount or unmount by ID
      tags:
        - Cloud Storage
    post:
      description: This operation allows performing an action on an ongoing mount task.
      operationId: CloudStorageService_UpdateMountTask
      parameters:
        - description: ID is the unique identifier of the mount or unmount to update.
          in: path
          name: id
          required: true
          schema:
            format: int32
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMountTaskBody'
        required: true
        x-originalParamName: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMountTaskResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Update a mount or unmount
      tags:
        - Cloud Storage
  /v1alpha2/cloud-storage/topics/mount:
    post:
      description: Attach mountable topics from object storage to a cluster, making them available for consumption and production again. Mounting a topic reloads its data and state to the local brokers, allowing active use of the topic.
      operationId: CloudStorageService_MountTopics
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TopicMount'
              required:
                - topics
              type: array
        required: true
        x-originalParamName: topics
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Mount topics from object storage
      tags:
        - Cloud Storage
  /v1alpha2/cloud-storage/topics/mountable:
    get:
      description: Retrieve all topics that are currently unmounted and available to be mounted to the cluster. These topics reside in object storage and can be mounted for consumption or production within the cluster.
      operationId: CloudStorageService_ListMountableTopics
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMountableTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List mountable topics
      tags:
        - Cloud Storage
  /v1alpha2/cloud-storage/topics/unmount:
    post:
      description: Unmount topics to object storage, freeing up all local cluster resources. Once you unmount a topic, it can no longer be consumed or produced to. It detaches from the active cluster while its data remains safely stored in the external object storage.
      operationId: CloudStorageService_UnmountTopics
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              required:
                - topics
              type: array
        description: List of topics to unmount.
        required: true
        x-originalParamName: topics
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmountTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Unmount topics to object storage
      tags:
        - Cloud Storage
  /v1alpha2/kafka-connect/clusters:
    get:
      description: List connect clusters available for being consumed by the console's kafka-connect service.
      operationId: KafkaConnectService_ListConnectClusters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectClustersResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List connect clusters
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}:
    get:
      description: Get information about an available Kafka Connect cluster.
      operationId: KafkaConnectService_GetConnectCluster
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectCluster'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Connect cluster not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get connect cluster
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors:
    get:
      description: List connectors managed by the Kafka Connect service.
      operationId: KafkaConnectService_ListConnectors
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List connectors
      tags:
        - Kafka Connect
    post:
      description: Create a connector with the specified configuration.
      operationId: KafkaConnectService_CreateConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorSpec'
        required: true
        x-originalParamName: connector
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Create connector
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors/{name}:
    delete:
      description: Delete a connector. This operation force stops all tasks and also deletes the connector configuration.
      operationId: KafkaConnectService_DeleteConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete connector
      tags:
        - Kafka Connect
    get:
      description: Get information about a connector in a specific cluster.
      operationId: KafkaConnectService_GetConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get connector
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors/{name}/config:
    get:
      description: Get the configuration for the connector.
      operationId: KafkaConnectService_GetConnectorConfig
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get connector configuration
      tags:
        - Kafka Connect
    put:
      description: Update the configuration for an existing connector with the specified name, or create a new connector using the given configuration. Returns information about the connector after the change has been made.
      operationId: KafkaConnectService_UpsertConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector. If a connector with this name does not already exist, a new connector is created.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: string
              required:
                - config
              type: object
        description: Connector configuration property.
        required: true
        x-originalParamName: config
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: Updated
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorSpec'
          description: Created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Upsert connector configuration
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors/{name}/pause:
    put:
      description: Pause the connector and its tasks, which stops messages from processing until the connector is resumed. This call is asynchronous and may take some time to process.
      operationId: KafkaConnectService_PauseConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Pause request accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Pause connector
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors/{name}/restart:
    post:
      description: Triggers a connector restart. You must specify whether or not tasks are also restarted, and whether only failed connectors are restarted.
      operationId: KafkaConnectService_RestartConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Options'
        required: true
        x-originalParamName: options
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Restart connector request success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Restart connector
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors/{name}/resume:
    put:
      description: Resume a paused connector and its tasks, and resumes message processing. This call is asynchronous and may take some time to process. If the connector was not paused, this operation does not do anything.
      operationId: KafkaConnectService_ResumeConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Resume request accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Resume connector
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors/{name}/status:
    get:
      description: Gets the current status of the connector, including the state for each of its tasks, error information, etc.
      operationId: KafkaConnectService_GetConnectorStatus
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorStatus'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get connector status
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors/{name}/stop:
    put:
      description: Stops a connector, but does not delete it. All tasks for the connector are shut down completely. This call is asynchronous and may take some time to process.
      operationId: KafkaConnectService_StopConnector
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              schema: {}
          description: Request accepted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Stop connector
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors/{name}/topics:
    get:
      description: Returns a list of connector topic names. If the connector is inactive, this call returns an empty list.
      operationId: KafkaConnectService_ListConnectorTopics
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectorTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List connector topics
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/connectors/{name}/topics/reset:
    put:
      description: Resets the set of topic names that the connector is using.
      operationId: KafkaConnectService_ResetConnectorTopics
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Name of connector using the topics to be reset.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Reset connector topics
      tags:
        - Kafka Connect
  /v1alpha2/kafka-connect/clusters/{cluster_name}/secrets:
    get:
      description: 'List Kafka Connect cluster secrets. Optional: filter based on secret name and labels.'
      operationId: SecretService_ListConnectSecrets
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: Substring match on secret name. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
          in: query
          name: filter.labels[string][string]
          schema:
            type: string
        - description: Secret scopes to search for
          in: query
          name: filter.scopes
          schema:
            items:
              enum:
                - SCOPE_REDPANDA_CONNECT
              type: string
            type: array
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecretsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List Connect Cluster Secrets
      tags:
        - Secrets
    post:
      description: Create a Kafka Connect cluster secret.
      operationId: SecretService_CreateConnectSecret
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectSecretBody'
        required: true
        x-originalParamName: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Secret created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Create Connect Cluster Secret
      tags:
        - Secrets
  /v1alpha2/kafka-connect/clusters/{cluster_name}/secrets/{id}:
    delete:
      description: Delete a Kafka Connect cluster secret.
      operationId: SecretService_DeleteConnectSecret
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: ID of the secret to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Secret deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete Connect Cluster Secret
      tags:
        - Secrets
    get:
      description: Get a specific Kafka Connect cluster secret.
      operationId: SecretService_GetConnectSecret
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: The ID of the secret to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get Connect Cluster Secret
      tags:
        - Secrets
    put:
      description: Update a Kafka Connect cluster secret.
      operationId: SecretService_UpdateConnectSecret
      parameters:
        - description: Unique name of target connect cluster. For Redpanda Cloud, use `redpanda`.
          in: path
          name: cluster_name
          required: true
          schema:
            type: string
        - description: ID of the secret to update.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectSecretBody'
        required: true
        x-originalParamName: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Update Connect Cluster Secret
      tags:
        - Secrets
  /v1alpha2/redpanda-connect/config-schema:
    get:
      description: The configuration schema includes available [components and processors](https://docs.redpanda.com/redpanda-cloud/develop/connect/components/about) in this Redpanda Connect instance.
      operationId: PipelineService_GetPipelineServiceConfigSchema
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelineServiceConfigSchemaResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Retrieve the schema for Redpanda Connect pipeline configurations.
      tags:
        - Redpanda Connect Pipeline
  /v1alpha2/redpanda-connect/pipelines:
    get:
      description: 'List Redpanda Connect pipelines. Optional: filter based on pipeline name.'
      operationId: PipelineService_ListPipelines
      parameters:
        - description: Substring match on pipeline name. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List Redpanda Connect pipelines
      tags:
        - Redpanda Connect Pipeline
    post:
      description: Create a new Redpanda Connect pipeline.
      operationId: PipelineService_CreatePipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineCreate'
        required: true
        x-originalParamName: pipeline
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Create Redpanda Connect pipeline
      tags:
        - Redpanda Connect Pipeline
  /v1alpha2/redpanda-connect/pipelines-by-secrets:
    get:
      description: Get Redpanda Connect pipelines by secrets.
      operationId: PipelineService_GetPipelinesBySecrets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelinesBySecretsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get Redpanda Connect pipelines by secrets
      tags:
        - Redpanda Connect Pipeline
  /v1alpha2/redpanda-connect/pipelines-for-secret:
    get:
      description: Get Redpanda Connect pipelines for a given secret.
      operationId: PipelineService_GetPipelinesForSecret
      parameters:
        - description: Secret ID.
          in: query
          name: secret_id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPipelinesForSecretResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get Redpanda Connect pipelines for secret
      tags:
        - Redpanda Connect Pipeline
  /v1alpha2/redpanda-connect/pipelines/{id}:
    delete:
      description: Delete a Redpanda Connect pipeline.
      operationId: PipelineService_DeletePipeline
      parameters:
        - description: Pipeline ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete a Redpanda Connect pipeline
      tags:
        - Redpanda Connect Pipeline
    get:
      description: Get a specific Redpanda Connect pipeline.
      operationId: PipelineService_GetPipeline
      parameters:
        - description: Pipeline ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get Redpanda Connect pipeline
      tags:
        - Redpanda Connect Pipeline
    put:
      description: Update the [configuration](https://docs.redpanda.com/redpanda-cloud/develop/connect/configuration/about) of a Redpanda Connect pipeline.
      operationId: PipelineService_UpdatePipeline
      parameters:
        - description: Pipeline ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineUpdate'
        required: true
        x-originalParamName: pipeline
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Update a Redpanda Connect pipeline
      tags:
        - Redpanda Connect Pipeline
  /v1alpha2/redpanda-connect/pipelines/{id}/start:
    put:
      description: Start a stopped Redpanda Connect pipeline.
      operationId: PipelineService_StartPipeline
      parameters:
        - description: Pipeline ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Started
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Start a Redpanda Connect pipeline
      tags:
        - Redpanda Connect Pipeline
  /v1alpha2/redpanda-connect/pipelines/{id}/stop:
    put:
      description: Stop a running Redpanda Connect pipeline.
      operationId: PipelineService_StopPipeline
      parameters:
        - description: Pipeline ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Stopped
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Stops a Redpanda Connect pipeline
      tags:
        - Redpanda Connect Pipeline
  /v1alpha2/secret-scopes:
    get:
      description: List supported secret scopes.
      operationId: SecretService_ListSecretScopes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecretScopesResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List Secret Scopes
      tags:
        - Secrets
  /v1alpha2/secrets:
    get:
      description: 'List secrets. Optional: filter based on secret name and labels.'
      operationId: SecretService_ListSecrets
      parameters:
        - description: Substring match on secret name. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
          in: query
          name: filter.labels[string]
          schema:
            type: string
        - description: Secret scopes to search for
          in: query
          name: filter.scopes
          schema:
            items:
              enum:
                - SCOPE_REDPANDA_CONNECT
              type: string
            type: array
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
        - description: Limit the paginated response to a number of items.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecretsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List Secrets
      tags:
        - Secrets
    post:
      description: Create a secret.
      operationId: SecretService_CreateSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretRequest'
        description: CreateSecretRequest is the request of CreateSecret.
        required: true
        x-originalParamName: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Secret created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Create Secret
      tags:
        - Secrets
  /v1alpha2/secrets/{id}:
    delete:
      description: Delete a secret.
      operationId: SecretService_DeleteSecret
      parameters:
        - description: The id of the secret to delete.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Secret deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete Secret
      tags:
        - Secrets
    get:
      description: Get a secret.
      operationId: SecretService_GetSecret
      parameters:
        - description: The id of the secret to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get Secret
      tags:
        - Secrets
    put:
      description: Update a secret.
      operationId: SecretService_UpdateSecret
      parameters:
        - description: Secret identifier.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSecretBody'
        required: true
        x-originalParamName: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Update Secret
      tags:
        - Secrets
  /v1alpha2/topics:
    get:
      description: 'List topics, with partition count and replication factor. Optional: filter based on topic name.'
      operationId: TopicService_ListTopics
      parameters:
        - description: Substring match on topic name. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: Value of the next_page_token field returned by the previous response. If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTopicsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List Topics
      tags:
        - Topics
    post:
      description: Create a [topic](https://docs.redpanda.com/current/deploy/deployment-option/cloud/create-topic/).
      operationId: TopicService_CreateTopic
      parameters:
        - description: |-
            If true, makes this request a dry run; everything is validated but
            no topics are actually created.
          in: query
          name: validate_only
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTopicRequest.Topic'
        description: The topic to create.
        required: true
        x-originalParamName: topic
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTopicResponse'
          description: Topic created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Create Topic
      tags:
        - Topics
  /v1alpha2/topics/{name}:
    delete:
      description: Delete the Kafka topic with the requested name.
      operationId: TopicService_DeleteTopic
      parameters:
        - description: Topic name.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Topic deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Requested topic does not exist
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete Topic
      tags:
        - Topics
  /v1alpha2/topics/{topic_name}/configurations:
    get:
      description: Get key-value configs for a topic.
      operationId: TopicService_GetTopicConfigurations
      parameters:
        - description: Topic name
          in: path
          name: topic_name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopicConfigurationsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get Topic Configurations
      tags:
        - Topics
    patch:
      description: Update a subset of the topic configurations.
      operationId: TopicService_UpdateTopicConfigurations
      parameters:
        - description: Topic name
          in: path
          name: topic_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateConfiguration'
              type: array
        required: true
        x-originalParamName: configurations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTopicConfigurationsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Update Topic Configuration
      tags:
        - Topics
    put:
      description: Update the entire set of key-value configurations for a topic. Config entries that are not provided in the request are removed and will fall back to their default values.
      operationId: TopicService_SetTopicConfigurations
      parameters:
        - description: Name of topic.
          in: path
          name: topic_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SetConfiguration'
              type: array
        required: true
        x-originalParamName: configurations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetTopicConfigurationsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Set Topic Configurations
      tags:
        - Topics
  /v1alpha2/transforms:
    get:
      description: 'Retrieve a list of Wasm transforms. Optional: filter based on transform name.'
      operationId: TransformService_ListTransforms
      parameters:
        - description: Substring match on transform name. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              example:
                next_page_token: ""
                transforms:
                  - environment_variables: []
                    input_topic_name: topic1
                    name: transform1
                    output_topic_names:
                      - output-topic11
                      - output-topic12
                    statuses:
                      - broker_id: 1
                        lag: 1
                        partition_id: 1
                        status: PARTITION_STATUS_RUNNING
                  - environment_variables: []
                    input_topic_name: topic2
                    name: transform2
                    output_topic_names:
                      - output-topic21
                      - output-topic22
                    statuses:
                      - broker_id: 2
                        lag: 2
                        partition_id: 2
                        status: PARTITION_STATUS_RUNNING
              schema:
                $ref: '#/components/schemas/ListTransformsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List Transforms
      tags:
        - WASM Transforms
    put:
      description: Initiate deployment of a new Wasm transform. This endpoint uses multipart/form-data encoding. Following deployment, a brief period is required before the Wasm transform becomes operational. Monitor the partition statuses to check whether the transform is active. This usually takes around 3s, but no longer than 10s.
      operationId: TransformService_DeployTransform
      requestBody:
        content:
          multipart/form-data:
            schema:
              example: '{"name":"redact-orders","input_topic_name":"orders","output_topic_names":["orders-redacted"],"environment_variables":[{"key":"LOGGER_LEVEL","value":"DEBUG"}]}'
              properties:
                metadata:
                  $ref: '#/components/schemas/DeployTransformRequest'
                wasm_binary:
                  description: Binary file containing the compiled WASM transform. The maximum size for this file is 10MiB.
                  format: binary
                  type: string
              type: object
        description: Transform metadata as well as the WASM binary
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformMetadata'
          description: Created
      summary: Deploy Transform
      tags:
        - WASM Transforms
  /v1alpha2/transforms/{name}:
    delete:
      description: Delete a Wasm transform with the requested name.
      operationId: TransformService_DeleteTransform
      parameters:
        - description: Name of transform.
          example:
            name: transform1
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              example: {}
              schema: {}
          description: Transform deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete Transform
      tags:
        - WASM Transforms
    get:
      description: Get a specific Wasm transform.
      operationId: TransformService_GetTransform
      parameters:
        - description: Name of transform.
          example:
            name: transform1
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                transform:
                  environment_variables: []
                  input_topic_name: topic1
                  name: transform1
                  output_topic_names:
                    - output-topic1
                    - output-topic2
                  statuses:
                    - broker_id: 1
                      lag: 1
                      partition_id: 1
                      status: PARTITION_STATUS_RUNNING
              schema:
                $ref: '#/components/schemas/GetTransformResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get Transform
      tags:
        - WASM Transforms
  /v1alpha2/users:
    get:
      description: 'List users. Optional: filter based on username.'
      operationId: UserService_ListUsers
      parameters:
        - description: Username.
          in: query
          name: filter.name
          schema:
            type: string
        - description: Substring match on username. Case-sensitive.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              example:
                next_page_token: ""
                users:
                  - name: payment-service
                  - name: jane
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List Users
      tags:
        - Redpanda Users
    post:
      description: Create a new user.
      operationId: UserService_CreateUser
      requestBody:
        content:
          application/json:
            example:
              mechanism: SASL_MECHANISM_SCRAM_SHA_256
              name: payment-service
              password: secure-password
            schema:
              $ref: '#/components/schemas/CreateUserRequest.User'
        required: true
        x-originalParamName: user
      responses:
        "201":
          content:
            application/json:
              example:
                user:
                  mechanism: SASL_MECHANISM_SCRAM_SHA_256
                  name: payment-service
              schema:
                $ref: '#/components/schemas/CreateUserRequest.User'
          description: User created
        "400":
          content:
            application/json:
              example:
                code: INVALID_ARGUMENT
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_INVALID_INPUT
                  - '@type': type.googleapis.com/google.rpc.BadRequest
                    field_violations:
                      - description: value length must be at least 3 characters
                        field: user.password
                      - description: value is required
                        field: user.mechanism
                message: provided parameters are invalid
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Bad request. Check API documentation and update request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Create User
      tags:
        - Redpanda Users
  /v1alpha2/users/{name}:
    delete:
      description: Delete the specified user
      operationId: UserService_DeleteUser
      parameters:
        - description: Username
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              example: {}
              schema: {}
          description: User deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "404":
          content:
            application/json:
              example:
                code: NOT_FOUND
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_RESOURCE_NOT_FOUND
                message: user not found
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete User
      tags:
        - Redpanda Users
  /v1alpha2/users/{user.name}:
    put:
      description: Update a user's credentials.
      operationId: UserService_UpdateUser
      parameters:
        - description: Username.
          in: path
          name: user.name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              user:
                mechanism: SASL_MECHANISM_SCRAM_SHA_256
                password: new-password
            schema:
              properties:
                mechanism:
                  $ref: '#/components/schemas/SASLMechanism'
                password:
                  description: Password.
                  type: string
              type: object
        required: true
        x-originalParamName: user
      responses:
        "200":
          content:
            application/json:
              example:
                user:
                  mechanism: SASL_MECHANISM_SCRAM_SHA_256
                  name: payment-service
              schema:
                $ref: '#/components/schemas/UpdateUserResponse.User'
          description: OK
        "400":
          content:
            application/json:
              example:
                code: INVALID_ARGUMENT
                details:
                  - '@type': type.googleapis.com/google.rpc.ErrorInfo
                    domain: redpanda.com/dataplane
                    metadata: {}
                    reason: REASON_INVALID_INPUT
                  - '@type': type.googleapis.com/google.rpc.BadRequest
                    field_violations:
                      - description: value length must be at least 3 characters
                        field: user.password
                      - description: value is required
                        field: user.mechanism
                message: provided parameters are invalid
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Bad request. Check API documentation and update request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Unauthenticated.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Internal Server Error. Reach out to support.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Update User
      tags:
        - Redpanda Users
security:
  - auth0: []
servers:
  - description: Data Plane API
    url: '{dataplane_api_url}'
    variables:
      dataplane_api_url:
        default: https://{dataplane_api_url}
        description: |-
          Find the Data Plane API base URL of a cluster by calling the Get Cluster endpoint of the Control Plane API. The dataplane_api.url field is returned in the response body.<br><br>
          					Example (Dedicated): "https://api-a4cb21.ck09mi9c4vs17hng9gig.fmc.prd.cloud.redpanda.com"<br>
          					Example (BYOC): "https://api-a4cb21.ck09mi9c4vs17hng9gig.byoc.prd.cloud.redpanda.com"
tags:
  - description: Manage Redpanda [access-control lists](https://docs.redpanda.com/current/manage/security/authorization/acl/) (ACLs).
    name: Redpanda ACLs
  - description: 'Manage Redpanda topics stored in object storage. See: [Mountable Topics](https://docs.redpanda.com/redpanda-cloud/manage/mountable-topics/)'
    name: Cloud Storage
  - description: Manage Wasm transforms in Redpanda.
    name: WASM Transforms
  - description: Manage [connectors](https://docs.redpanda.com/redpanda-cloud/develop/managed-connectors/) and interact with the Kafka Connect API.
    name: Kafka Connect
  - description: Create and manage [Redpanda Connect](https://docs.redpanda.com/redpanda-cloud/develop/connect/about) pipelines and their configurations.
    name: Redpanda Connect Pipeline
  - description: Manage [secrets](https://docs.redpanda.com/redpanda-cloud/security/secrets) for Redpanda Cloud.
    name: Secrets
  - description: Manage Redpanda topics.
    name: Topics
  - description: Manage Redpanda users. To manage access, see the Cloud API [ACL endpoints](https://docs.redpanda.com/api/cloud-api/#get-/v1alpha2/acls).
    name: Redpanda Users

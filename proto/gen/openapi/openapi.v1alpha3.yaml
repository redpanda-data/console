components:
  schemas:
    Any:
      additionalProperties: {}
      properties:
        '@type':
          type: string
      type: object
    ComponentType:
      description: Component type for this tool.
      enum:
        - COMPONENT_TYPE_PROCESSOR
        - COMPONENT_TYPE_CACHE
      type: string
    ConfigurationFileSchema:
      properties:
        config_schema:
          description: JSON schema of the configuration components that are allowed for MCP Servers.
          type: string
        path_pattern:
          description: |-
            The glob pattern that matches the configuration file paths.

            Example: "o11y/*.yaml" or "processors/*.yaml"

            Single and double asterisks are supported.
          type: string
      type: object
    CreateKnowledgeBaseResponse:
      properties:
        knowledge_base:
          $ref: '#/components/schemas/KnowledgeBase'
      type: object
    CreateMCPServerResponse:
      properties:
        mcp_server:
          $ref: '#/components/schemas/MCPServer'
      type: object
    DeleteKnowledgeBaseResponse:
      type: object
    DeleteMCPServerResponse:
      type: object
    GetKnowledgeBaseResponse:
      properties:
        knowledge_base:
          $ref: '#/components/schemas/KnowledgeBase'
      type: object
    GetMCPServerResponse:
      properties:
        mcp_server:
          $ref: '#/components/schemas/MCPServer'
      type: object
    GetMCPServerServiceConfigSchemaResponse:
      properties:
        configuration_files:
          description: The configuration schema for the MCP Server.
          items:
            $ref: '#/components/schemas/ConfigurationFileSchema'
          type: array
      type: object
    KnowledgeBase:
      properties:
        description:
          type: string
        display_name:
          type: string
        embedding_generator:
          $ref: '#/components/schemas/KnowledgeBase.EmbeddingGenerator'
        generation:
          $ref: '#/components/schemas/KnowledgeBase.Generation'
        id:
          readOnly: true
          type: string
        indexer:
          $ref: '#/components/schemas/KnowledgeBase.Indexer'
        retrieval_api_url:
          readOnly: true
          type: string
        retriever:
          $ref: '#/components/schemas/KnowledgeBase.Retriever'
        tags:
          additionalProperties:
            type: string
          description: Optional list of tags to attach to a pipeline.
          type: object
        vector_database:
          $ref: '#/components/schemas/KnowledgeBase.VectorDatabase'
      required:
        - id
        - display_name
        - vector_database
        - embedding_generator
        - generation
      type: object
    KnowledgeBase.EmbeddingGenerator:
      properties:
        dimensions:
          format: int32
          type: integer
        model:
          type: string
        provider:
          $ref: '#/components/schemas/KnowledgeBase.EmbeddingGenerator.Provider'
      required:
        - provider
        - dimensions
        - model
      type: object
    KnowledgeBase.EmbeddingGenerator.Provider:
      properties:
        cohere:
          $ref: '#/components/schemas/KnowledgeBase.EmbeddingGenerator.Provider.Cohere'
        openai:
          $ref: '#/components/schemas/KnowledgeBase.EmbeddingGenerator.Provider.OpenAI'
      type: object
    KnowledgeBase.EmbeddingGenerator.Provider.Cohere:
      properties:
        api_key:
          type: string
        base_url:
          type: string
      required:
        - api_key
      type: object
    KnowledgeBase.EmbeddingGenerator.Provider.OpenAI:
      properties:
        api_key:
          type: string
      type: object
    KnowledgeBase.Generation:
      properties:
        model:
          type: string
        provider:
          $ref: '#/components/schemas/KnowledgeBase.Generation.Provider'
      required:
        - provider
        - model
      type: object
    KnowledgeBase.Generation.Provider:
      properties:
        openai:
          $ref: '#/components/schemas/KnowledgeBase.Generation.Provider.OpenAI'
      type: object
    KnowledgeBase.Generation.Provider.OpenAI:
      properties:
        api_key:
          type: string
      type: object
    KnowledgeBase.Indexer:
      properties:
        chunk_overlap:
          format: int32
          type: integer
        chunk_size:
          format: int32
          type: integer
        input_topics:
          items:
            type: string
          type: array
        redpanda_password:
          type: string
        redpanda_sasl_mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        redpanda_username:
          type: string
      required:
        - input_topics
      type: object
    KnowledgeBase.Retriever:
      properties:
        reranker:
          $ref: '#/components/schemas/KnowledgeBase.Retriever.Reranker'
      type: object
    KnowledgeBase.Retriever.Reranker:
      properties:
        enabled:
          type: boolean
        provider:
          $ref: '#/components/schemas/KnowledgeBase.Retriever.Reranker.Provider'
      type: object
    KnowledgeBase.Retriever.Reranker.Provider:
      properties:
        cohere:
          $ref: '#/components/schemas/KnowledgeBase.Retriever.Reranker.Provider.Cohere'
      type: object
    KnowledgeBase.Retriever.Reranker.Provider.Cohere:
      properties:
        api_key:
          type: string
        model:
          type: string
      required:
        - api_key
        - model
      type: object
    KnowledgeBase.VectorDatabase:
      properties:
        postgres:
          $ref: '#/components/schemas/KnowledgeBase.VectorDatabase.Postgres'
      type: object
    KnowledgeBase.VectorDatabase.Postgres:
      properties:
        dsn:
          type: string
        table:
          type: string
      required:
        - dsn
        - table
      type: object
    KnowledgeBaseCreate:
      properties:
        description:
          type: string
        display_name:
          type: string
        embedding_generator:
          $ref: '#/components/schemas/KnowledgeBaseCreate.EmbeddingGenerator'
        generation:
          $ref: '#/components/schemas/KnowledgeBaseCreate.Generation'
        indexer:
          $ref: '#/components/schemas/KnowledgeBaseCreate.Indexer'
        retriever:
          $ref: '#/components/schemas/KnowledgeBaseCreate.Retriever'
        tags:
          additionalProperties:
            type: string
          description: Optional list of tags to attach to a pipeline.
          type: object
        vector_database:
          $ref: '#/components/schemas/KnowledgeBaseCreate.VectorDatabase'
      required:
        - display_name
        - vector_database
        - embedding_generator
      type: object
    KnowledgeBaseCreate.EmbeddingGenerator:
      properties:
        dimensions:
          format: int32
          type: integer
        model:
          type: string
        provider:
          $ref: '#/components/schemas/KnowledgeBaseCreate.EmbeddingGenerator.Provider'
      required:
        - provider
        - dimensions
        - model
      type: object
    KnowledgeBaseCreate.EmbeddingGenerator.Provider:
      properties:
        cohere:
          $ref: '#/components/schemas/KnowledgeBaseCreate.EmbeddingGenerator.Provider.Cohere'
        openai:
          $ref: '#/components/schemas/KnowledgeBaseCreate.EmbeddingGenerator.Provider.OpenAI'
      type: object
    KnowledgeBaseCreate.EmbeddingGenerator.Provider.Cohere:
      properties:
        api_key:
          type: string
        base_url:
          type: string
      required:
        - api_key
      type: object
    KnowledgeBaseCreate.EmbeddingGenerator.Provider.OpenAI:
      properties:
        api_key:
          type: string
      type: object
    KnowledgeBaseCreate.Generation:
      properties:
        model:
          type: string
        provider:
          $ref: '#/components/schemas/KnowledgeBaseCreate.Generation.Provider'
      required:
        - provider
        - model
      type: object
    KnowledgeBaseCreate.Generation.Provider:
      properties:
        openai:
          $ref: '#/components/schemas/KnowledgeBaseCreate.Generation.Provider.OpenAI'
      type: object
    KnowledgeBaseCreate.Generation.Provider.OpenAI:
      properties:
        api_key:
          type: string
      type: object
    KnowledgeBaseCreate.Indexer:
      properties:
        chunk_overlap:
          format: int32
          type: integer
        chunk_size:
          format: int32
          type: integer
        input_topics:
          items:
            type: string
          type: array
        redpanda_password:
          type: string
        redpanda_sasl_mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        redpanda_username:
          type: string
      required:
        - input_topics
      type: object
    KnowledgeBaseCreate.Retriever:
      properties:
        reranker:
          $ref: '#/components/schemas/KnowledgeBaseCreate.Retriever.Reranker'
      type: object
    KnowledgeBaseCreate.Retriever.Reranker:
      properties:
        enabled:
          type: boolean
        provider:
          $ref: '#/components/schemas/KnowledgeBaseCreate.Retriever.Reranker.Provider'
      type: object
    KnowledgeBaseCreate.Retriever.Reranker.Provider:
      properties:
        cohere:
          $ref: '#/components/schemas/KnowledgeBaseCreate.Retriever.Reranker.Provider.Cohere'
      type: object
    KnowledgeBaseCreate.Retriever.Reranker.Provider.Cohere:
      properties:
        api_key:
          type: string
        model:
          type: string
      required:
        - api_key
        - model
      type: object
    KnowledgeBaseCreate.VectorDatabase:
      properties:
        postgres:
          $ref: '#/components/schemas/KnowledgeBaseCreate.VectorDatabase.Postgres'
      type: object
    KnowledgeBaseCreate.VectorDatabase.Postgres:
      properties:
        dsn:
          type: string
        table:
          type: string
      required:
        - dsn
        - table
      type: object
    KnowledgeBaseUpdate:
      properties:
        description:
          type: string
        display_name:
          type: string
        embedding_generator:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.EmbeddingGenerator'
        generation:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.Generation'
        indexer:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.Indexer'
        retriever:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.Retriever'
        tags:
          additionalProperties:
            type: string
          description: Optional list of tags to attach to a pipeline.
          type: object
        vector_database:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.VectorDatabase'
      required:
        - display_name
        - vector_database
        - embedding_generator
      type: object
    KnowledgeBaseUpdate.EmbeddingGenerator:
      properties:
        provider:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.EmbeddingGenerator.Provider'
      required:
        - provider
      type: object
    KnowledgeBaseUpdate.EmbeddingGenerator.Provider:
      properties:
        cohere:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.EmbeddingGenerator.Provider.Cohere'
        openai:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.EmbeddingGenerator.Provider.OpenAI'
      type: object
    KnowledgeBaseUpdate.EmbeddingGenerator.Provider.Cohere:
      properties:
        api_key:
          type: string
        base_url:
          type: string
      type: object
    KnowledgeBaseUpdate.EmbeddingGenerator.Provider.OpenAI:
      properties:
        api_key:
          type: string
      type: object
    KnowledgeBaseUpdate.Generation:
      properties:
        provider:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.Generation.Provider'
      required:
        - provider
      type: object
    KnowledgeBaseUpdate.Generation.Provider:
      properties:
        openai:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.Generation.Provider.OpenAI'
      type: object
    KnowledgeBaseUpdate.Generation.Provider.OpenAI:
      properties:
        api_key:
          type: string
      type: object
    KnowledgeBaseUpdate.Indexer:
      properties:
        chunk_overlap:
          format: int32
          type: integer
        chunk_size:
          format: int32
          type: integer
        input_topics:
          items:
            type: string
          type: array
        redpanda_password:
          type: string
        redpanda_sasl_mechanism:
          $ref: '#/components/schemas/SASLMechanism'
        redpanda_username:
          type: string
      required:
        - input_topics
      type: object
    KnowledgeBaseUpdate.Retriever:
      properties:
        reranker:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.Retriever.Reranker'
      type: object
    KnowledgeBaseUpdate.Retriever.Reranker:
      properties:
        enabled:
          type: boolean
        provider:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.Retriever.Reranker.Provider'
      type: object
    KnowledgeBaseUpdate.Retriever.Reranker.Provider:
      properties:
        cohere:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.Retriever.Reranker.Provider.Cohere'
      type: object
    KnowledgeBaseUpdate.Retriever.Reranker.Provider.Cohere:
      properties:
        api_key:
          type: string
        model:
          type: string
      required:
        - api_key
        - model
      type: object
    KnowledgeBaseUpdate.VectorDatabase:
      properties:
        postgres:
          $ref: '#/components/schemas/KnowledgeBaseUpdate.VectorDatabase.Postgres'
      type: object
    KnowledgeBaseUpdate.VectorDatabase.Postgres:
      properties:
        dsn:
          type: string
      required:
        - dsn
      type: object
    ListKnowledgeBasesRequest.Filter:
      properties:
        name_contains:
          description: Any KnowledgeBase that partially match this name will be returned.
          type: string
        tags[string]:
          additionalProperties:
            type: string
          description: KnowledgeBases that match all the provided tags will be returned.
          type: object
      type: object
    ListKnowledgeBasesResponse:
      properties:
        knowledge_bases:
          items:
            $ref: '#/components/schemas/KnowledgeBase'
          type: array
        next_page_token:
          type: string
      type: object
    ListMCPServersRequest.Filter:
      properties:
        display_name_contains:
          description: Any MCP Server that partially match this name will be returned.
          type: string
        secret_id:
          description: Match MCP servers that use this secret ID.
          type: string
        tags[string]:
          additionalProperties:
            type: string
          description: MCP servers that match all the provided tags will be returned.
          type: object
      type: object
    ListMCPServersResponse:
      properties:
        mcp_servers:
          items:
            $ref: '#/components/schemas/MCPServer'
          type: array
        next_page_token:
          type: string
      type: object
    MCPServer:
      description: Defines the MCP server resource.
      properties:
        description:
          description: Optional MCP server description.
          type: string
        display_name:
          description: User-friendly MCP server name.
          type: string
        id:
          description: MCP Server ID.
          type: string
        resources:
          $ref: '#/components/schemas/Resources'
        state:
          $ref: '#/components/schemas/MCPServer.State'
        status:
          $ref: '#/components/schemas/MCPServer.Status'
        tags:
          additionalProperties:
            type: string
          description: |-
            Tags are key-value pairs that can be assigned to a MCP server resource.
            They help organize MCP servers and enable filtering when listing them.
          type: object
        tools:
          additionalProperties:
            $ref: '#/components/schemas/Tool'
          description: The Redpanda Connect MCP server configuration in files.
          type: object
        url:
          readOnly: true
          title: URL to connect to the MCP server
          type: string
      required:
        - id
        - display_name
        - tools
      type: object
    MCPServer.State:
      description: |-
        State of the MCP server.

         - STATE_STARTING: The MCP server is starting.
         - STATE_RUNNING: The MCP server is running.
         - STATE_STOPPING: The MCP server is in the process of stopping.
         - STATE_STOPPED: The MCP server is stopped and in paused state.
         - STATE_ERROR: The MCP server encountered an error.
      enum:
        - STATE_STARTING
        - STATE_RUNNING
        - STATE_STOPPING
        - STATE_STOPPED
        - STATE_ERROR
      type: string
    MCPServer.Status:
      description: MCP server status may contain an error message.
      properties:
        error:
          type: string
      type: object
    MCPServerCreate:
      description: MCPServerCreate contains the details for the MCP Server creation request.
      properties:
        description:
          description: MCP server description.
          type: string
        display_name:
          description: User-friendly MCP server name.
          type: string
        resources:
          $ref: '#/components/schemas/Resources'
        tags:
          additionalProperties:
            type: string
          description: Optional list of tags to attach to a MCP server.
          type: object
        tools:
          additionalProperties:
            $ref: '#/components/schemas/Tool'
          description: The Redpanda Connect MCP server configuration in files..
          type: object
      required:
        - display_name
        - tools
      type: object
    MCPServerUpdate:
      properties:
        description:
          description: MCP server description.
          type: string
        display_name:
          description: User-friendly MCP servers name.
          type: string
        resources:
          $ref: '#/components/schemas/Resources'
        tags:
          additionalProperties:
            type: string
          description: |-
            A map of tags to add, update or delete.
            If a tag's value is empty, the server interprets that as a deletion.
          type: object
        tools:
          additionalProperties:
            $ref: '#/components/schemas/Tool'
          description: The Redpanda Connect MCP server configuration in files.
          type: object
      type: object
    Resources:
      properties:
        cpu_shares:
          description: |-
            `cpu_shares` is a string specifying the amount of CPU to allocate for the
            pipeline.

            This follows the [Kubernetes quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/) format. Acceptable
            units include:
            - Decimal SI units: "m" (e.g., "500m" for 500 millicores, "2" for 2 cores)
            CPU shares can be specified in millicores (1 core = 1000 millicores).
            If you don't specify a unit, the value is interpreted as the number of cores.
          type: string
        memory_shares:
          description: |-
            `memory_shares` is a string specifying the amount of memory to allocate for
            the pipeline.

            This follows the [Kubernetes quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/) format. Acceptable units
            include:
            - Decimal SI units: "K", "M", "G", "T", "P", "E" (e.g., "128M" for 128
              megabytes)
            - Binary SI units: "Ki", "Mi", "Gi", "Ti", "Pi", "Ei" (e.g., "512Mi" for
            512 mebibytes) If you don't specify a unit, the value is interpreted as
            bytes.
          type: string
      required:
        - memory_shares
        - cpu_shares
      type: object
    SASLMechanism:
      description: SASL mechanism to use for authentication.
      enum:
        - SASL_MECHANISM_SCRAM_SHA_256
        - SASL_MECHANISM_SCRAM_SHA_512
      type: string
    StartMCPServerResponse:
      properties:
        mcp_server:
          $ref: '#/components/schemas/MCPServer'
      type: object
    StopMCPServerResponse:
      properties:
        mcp_server:
          $ref: '#/components/schemas/MCPServer'
      type: object
    Tool:
      description: A configuration file for the MCP server.
      properties:
        component_type:
          $ref: '#/components/schemas/ComponentType'
        config_yaml:
          description: The contents of the configuration file in YAML format.
          type: string
      required:
        - config_yaml
      type: object
    UpdateKnowledgeBaseResponse:
      properties:
        knowledge_base:
          $ref: '#/components/schemas/KnowledgeBase'
      type: object
    UpdateMCPServerResponse:
      properties:
        mcp_server:
          $ref: '#/components/schemas/MCPServer'
      type: object
    rpc.Status:
      properties:
        code:
          format: int32
          type: integer
        details:
          items:
            $ref: '#/components/schemas/Any'
          type: array
        message:
          type: string
      type: object
  securitySchemes:
    auth0:
      description: RedpandaCloud
      flows:
        implicit:
          authorizationUrl: https://auth.prd.cloud.redpanda.com/oauth/authorize
          scopes: {}
          x-client-id: dQjapNIAHhF7EQqQToRla3yEII9sUSap
      type: oauth2
info:
  title: Redpanda Cloud Data Plane API
  version: v1
openapi: 3.0.3
paths:
  /v1alpha3/knowledge-bases:
    get:
      operationId: KnowledgeBaseService_ListKnowledgeBases
      parameters:
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - in: query
          name: page_token
          schema:
            type: string
        - description: Any KnowledgeBase that partially match this name will be returned.
          in: query
          name: filter.name_contains
          schema:
            type: string
        - description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
          in: query
          name: filter.tags[string]
          schema:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      tags:
        - KnowledgeBaseService
    post:
      operationId: KnowledgeBaseService_CreateKnowledgeBase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseCreate'
        required: true
        x-originalParamName: knowledge_base
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      tags:
        - KnowledgeBaseService
  /v1alpha3/knowledge-bases/{id}:
    delete:
      operationId: KnowledgeBaseService_DeleteKnowledgeBase
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      tags:
        - KnowledgeBaseService
    get:
      operationId: KnowledgeBaseService_GetKnowledgeBase
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      tags:
        - KnowledgeBaseService
    put:
      operationId: KnowledgeBaseService_UpdateKnowledgeBase
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: update_mask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseUpdate'
        required: true
        x-originalParamName: knowledge_base
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      tags:
        - KnowledgeBaseService
  /v1alpha3/redpanda-connect/mcp-servers:
    get:
      description: 'List Redpanda Connect MCP Servers. Optional: filter based on MCP server name.'
      operationId: MCPServerService_ListMCPServers
      parameters:
        - description: Any MCP Server that partially match this name will be returned.
          in: query
          name: filter.display_name_contains
          schema:
            type: string
        - description: This is a request variable of the map type. The query format is "map_name[key]=value", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age["bob"]=18
          in: query
          name: filter.tags[string]
          schema:
            type: string
        - description: Match MCP servers that use this secret ID.
          in: query
          name: filter.secret_id
          schema:
            type: string
        - description: Limit the paginated response to a number of items. Defaults to 100. Use -1 to disable pagination.
          in: query
          name: page_size
          schema:
            format: int32
            type: integer
        - description: |-
            Value of the next_page_token field returned by the previous response.
            If not provided, the system assumes the first page is requested.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMCPServersResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: List Redpanda Connect MCP Servers
      tags:
        - Redpanda Connect MCP servers
    post:
      description: Create a new Redpanda Connect MCP Server.
      operationId: MCPServerService_CreateMCPServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MCPServerCreate'
        required: true
        x-originalParamName: mcp_server
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MCPServer'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Create Redpanda Connect MCP Server
      tags:
        - Redpanda Connect MCP servers
  /v1alpha3/redpanda-connect/mcp-servers/{id}:
    delete:
      description: Delete a Redpanda Connect MCP server.
      operationId: MCPServerService_DeleteMCPServer
      parameters:
        - description: MCP Server ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          content:
            application/json:
              schema: {}
          description: Deleted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Delete a Redpanda Connect MCP server
      tags:
        - Redpanda Connect MCP servers
    get:
      description: Get a specific Redpanda Connect MCP server.
      operationId: MCPServerService_GetMCPServer
      parameters:
        - description: MCP server ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MCPServer'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Get Redpanda Connect MCP server
      tags:
        - Redpanda Connect MCP servers
    put:
      description: Update the configuration of a Redpanda Connect MCP server.
      operationId: MCPServerService_UpdateMCPServer
      parameters:
        - description: MCP Server ID.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: |-
            Specifies which fields should be updated. If not provided,
            all fields will be updated.
          in: query
          name: update_mask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MCPServerUpdate'
        required: true
        x-originalParamName: mcp_server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MCPServer'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Update a Redpanda Connect MCP Server
      tags:
        - Redpanda Connect MCP servers
  /v1alpha3/redpanda-connect/mcp-servers/{id}:start:
    post:
      description: Start a stopped Redpanda Connect MCP server.
      operationId: MCPServerService_StartMCPServer
      parameters:
        - description: MCP Server ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MCPServer'
          description: Started
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Start a Redpanda Connect MCP server
      tags:
        - Redpanda Connect MCP servers
  /v1alpha3/redpanda-connect/mcp-servers/{id}:stop:
    post:
      description: Stop a running Redpanda Connect MCP server.
      operationId: MCPServerService_StopMCPServer
      parameters:
        - description: MCP Server ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MCPServer'
          description: Stopped
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Stops a Redpanda Connect MCP server
      tags:
        - Redpanda Connect MCP servers
  /v1alpha3/redpanda-connect/mcp-servers:getConfigSchema:
    get:
      description: The configuration schema includes available components and processors in this Redpanda Connect MCP Server instance.
      operationId: MCPServerService_GetMCPServerServiceConfigSchema
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMCPServerServiceConfigSchemaResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpc.Status'
          description: An unexpected error response.
      summary: Retrieve the schema for Redpanda Connect MCP Servers configurations.
      tags:
        - Redpanda Connect MCP servers
security:
  - auth0: []
servers:
  - description: Data Plane API
    url: '{dataplane_api_url}'
    variables:
      dataplane_api_url:
        default: https://{dataplane_api_url}
        description: |-
          Find the Data Plane API base URL of a cluster by calling the Get Cluster endpoint of the Control Plane API. The dataplane_api.url field is returned in the response body.<br><br>
          					Example (Dedicated): "https://api-a4cb21.ck09mi9c4vs17hng9gig.fmc.prd.cloud.redpanda.com"<br>
          					Example (BYOC): "https://api-a4cb21.ck09mi9c4vs17hng9gig.byoc.prd.cloud.redpanda.com"
tags:
  - description: Create and manage retrieval-augmented generation (RAG) knowledge bases.
    name: Redpanda AI KnowledgeBase
  - description: Create and manage Redpanda Connect MCP servers and their configurations.
    name: Redpanda Connect MCP servers

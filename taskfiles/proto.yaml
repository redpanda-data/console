version: 3
tasks:
  lint:
    deps:
      - install-buf
    desc: lint proto files
    cmds:
      - |
        {{ .PATH_PREFIX }} buf lint
      - |
        {{ .PATH_PREFIX }} buf format {{.ROOT_DIR}}/proto -w

  format:
    deps:
      - install-buf
    desc: format proto files
    cmds:
      - |
        {{ .PATH_PREFIX }} buf format -w --exit-code

  mod-update:
    deps:
      - install-buf
    desc: update mod
    cmds:
      - |
        {{ .PATH_PREFIX }} buf mod update {{.ROOT_DIR}}/proto

  push:
    deps:
      - lint
    desc: push to BSR
    dir: "{{.ROOT_DIR}}/proto"
    cmds:
      - |
        {{ .PATH_PREFIX }} buf push

  generate:
    dir: "{{.ROOT_DIR}}"
    desc: generate protos
    deps:
      - install-buf
      - install-connect-gateway
    vars:
      BUF_INPUTS: proto {{.BACKEND_ROOT}}/pkg/console/testdata/proto {{.BACKEND_ROOT}}/pkg/console/testdata/proto_update {{.BACKEND_ROOT}}/pkg/serde/testdata/proto {{.BACKEND_ROOT}}/pkg/testutil/testdata/proto
    cmds:
      # Delete previously generated files
      - rm -rf {{.BACKEND_ROOT}}/pkg/protogen
      - rm -rf {{.BACKEND_ROOT}}/pkg/console/testdata/proto/gen
      - rm -rf {{.BACKEND_ROOT}}/pkg/console/testdata/proto_update/gen
      - rm -rf {{.FRONTEND_ROOT}}/src/protogen
      - task: lint
      - task: format
      - |
        {{ .PATH_PREFIX }} buf generate --template=proto/buf.gen.yaml
      - for: { var: BUF_INPUTS }
        cmd: "{{ .PATH_PREFIX }} buf generate --template={{ .ITEM }}/buf.gen.yaml {{ .ITEM }}"
      - "{{ .PATH_PREFIX }} buf generate --template=proto/buf.gen.yaml buf.build/redpandadata/common"
      - task: :backend:fmt
      - task: generate-openapi3
      - if [[ $CI == "true" ]]; then git diff -w --exit-code; fi

  generate-openapi3:
    desc: generate protos
    deps:
      - install-buf
      - install-yq
    cmds:
      - rm -rf ./proto/gen/openapi
      - |
        {{ .PATH_PREFIX }} buf generate --template=proto/buf.gen.openapi.yaml --path proto/redpanda/api/dataplane/v1alpha2
      - cd backend && {{ .PATH_PREFIX }} go run ./pkg/tools/openapi-generator -in ../proto/gen/openapi/apidocs.swagger.json -out ../proto/gen/openapi/openapi.json
      - |
        {{ .PATH_PREFIX }} yq -p json ./proto/gen/openapi/openapi.json -o yaml > ./proto/gen/openapi/openapi.yaml
      - rm -f ./proto/gen/openapi/apidocs.swagger.json


  install-buf:
    desc: install buf
    vars:
      BUF_VERSION: 1.50.0
      BUF_URL: https://github.com/bufbuild/buf/releases/download/v{{.BUF_VERSION}}/buf-$(uname -s)-$(uname -m)
    cmds:
      - mkdir -p {{.BUILD_ROOT}}/bin
      - curl -sSLf --retry 3 --retry-connrefused --retry-delay 2 {{.BUF_URL}} -o '{{.BUILD_ROOT}}/bin/buf'
      - chmod +x '{{.BUILD_ROOT}}/bin/buf'
    status:
      - test -f '{{.BUILD_ROOT}}/bin/buf'
      - '[[ $({{ .BUILD_ROOT }}/bin/buf --version) == {{.BUF_VERSION}} ]]'

  install-yq:
    deps:
      - :backend:install-go
    desc: install yq
    run: once
    vars:
      YQ_VERSION: 4.42.1
    cmds:
      - '{{ .PATH_PREFIX }} go install github.com/mikefarah/yq/v4@v{{.YQ_VERSION}}'
    status:
      - '[ -f ''{{ .BUILD_ROOT }}/bin/go'' ] || command -v {{ .BUILD_ROOT }}/bin/go/yq >/dev/null 2>&1'
      - '[[ $({{.BUILD_ROOT}}/bin/go/yq --version) == *"{{.YQ_VERSION}}"* ]]'

  install-connect-gateway:
    deps:
      - :backend:install-go
    desc: install connect-gateway
    vars:
      VERSION: 0.8.0
    cmds:
      - |
        {{ .PATH_PREFIX }} go install go.vallahaye.net/connect-gateway/cmd/protoc-gen-connect-gateway@v{{.VERSION}}
    status:
      - "[ -f '{{ .BUILD_ROOT }}/bin/go' ] || command -v {{ .BUILD_ROOT }}/bin/go/protoc-gen-connect-gateway >/dev/null 2>&1"
      - '[[ $({{ .BUILD_ROOT }}/bin/go/protoc-gen-connect-gateway --version) == "{{.VERSION}}" ]]'
